var searchIndex={};
searchIndex["coaster"] = {"doc":"Provides a simple and unified API to run fast and highly…","i":[[0,"backend","coaster","Provides the interface for running parallel computations…",null,null],[3,"Backend","coaster::backend","Defines the main and highest struct of Coaster.",null,null],[3,"BackendConfig","","Provides Backend Configuration.",null,null],[8,"IBackend","","Describes a Backend.",null,null],[16,"F","","Represents the Framework of a Backend.",0,null],[10,"device","","Returns the backend device.",0,[[["self"]]]],[11,"default","","Try to create a default backend.",0,[[],[["error"],["result",["backend","error"]],["backend"]]]],[11,"synchronize","","Synchronize backend.",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"new","","Initialize a new native Backend from a BackendConfig.",1,[[["backendconfig"]],[["error"],["result",["backend","error"]],["backend"]]]],[11,"hardwares","","Returns the available hardware.",1,[[["self"]]]],[11,"framework","","Returns the backend framework.",1,[[["self"]],["f"]]],[11,"device","","Returns the backend device.",1,[[["self"]]]],[11,"new","","Creates a new BackendConfig.",2,[[["f"]],["backendconfig"]]],[0,"device","coaster","Provides a representation for one or many ready to use…",null,null],[4,"Error","coaster::device","Defines a generic set of Memory Errors.",null,null],[13,"NoMemorySyncRoute","","No route found for memory transfer between devices",3,null],[13,"MemorySyncError","","Framework error at memory synchronization.",3,null],[13,"MemoryAllocationError","","Framework error at memory allocation.",3,null],[13,"Native","","Failures related to the Native framework implementation.",3,null],[13,"Cuda","","Failures related to the Cuda framework implementation.",3,null],[8,"IMemory","","Marker trait for backing memory.",null,null],[8,"IDevice","","Specifies Hardware behavior across frameworks.",null,null],[16,"H","","The Hardware representation for this Device.",4,null],[16,"M","","The Memory representation for this Device.",4,null],[10,"id","","Returns the unique identifier of the Device.",4,[[["self"]],["isize"]]],[10,"hardwares","","Returns the hardwares, which define the Device.",4,[[["self"]],["vec"]]],[10,"alloc_memory","","Allocate memory on the Device.",4,[[["self"],["usize"]],[["error"],["result",["error"]]]]],[8,"MemorySync","","This trait should be implemented for `Device`. Use of…",null,null],[10,"sync_in","","FIXME",5,[[["any"],["any"],["self"]],[["result",["error"]],["error"]]]],[10,"sync_out","","FIXME",5,[[["any"],["self"],["any"]],[["result",["error"]],["error"]]]],[0,"hardware","coaster","Provides a representation for a collection of available…",null,null],[4,"HardwareType","coaster::hardware","Specifies the available Hardware types.",null,null],[13,"CPU","","CPU devices",6,null],[13,"GPU","","GPU devices",6,null],[13,"ACCELERATOR","","Hardware Accelerator devices",6,null],[13,"OTHER","","Used for anything else",6,null],[8,"IHardware","","Specifies Hardware behavior accross frameworks.",null,null],[10,"id","","Returns the ID of the Hardware",7,[[["self"]],["isize"]]],[10,"name","","Returns the name of the Hardware",7,[[["self"]],[["string"],["option",["string"]]]]],[10,"set_name","","Defines the name of the Hardware",7,[[["self"],["string"],["option",["string"]]],["self"]]],[10,"hardware_type","","Returns the device_type of the Hardware",7,[[["self"]],[["option",["hardwaretype"]],["hardwaretype"]]]],[10,"set_hardware_type","","Defines the hardware_type of the Hardware",7,[[["option",["hardwaretype"]],["self"],["hardwaretype"]],["self"]]],[10,"compute_units","","Returns the compute_units of the Hardware",7,[[["self"]],[["option",["isize"]],["isize"]]]],[10,"set_compute_units","","Defines the compute_units of the Hardware",7,[[["option",["isize"]],["self"],["isize"]],["self"]]],[10,"build","","Build an inmutable Hardware",7,[[],["self"]]],[0,"framework","coaster","Provides the generic functionality of a hardware…",null,null],[4,"Error","coaster::framework","Defines a generic set of Framework Errors.",null,null],[13,"Cuda","","Failures related to the Cuda framework implementation.",8,null],[13,"Implementation","","Failure related to the Coaster implementation of a…",8,null],[8,"IFramework","","Defines a Framework.",null,null],[16,"H","","The Hardware representation for this Framework.",9,null],[16,"D","","The Device representation for this Framework.",9,null],[16,"B","","The Binary representation for this Framework.",9,null],[10,"ID","","Defines the Framework by a Name.",9,[[],["str"]]],[10,"new","","Initializes a new Framework.",9,[[],["self"]]],[10,"load_hardwares","","Initializes all the available hardwares.",9,[[],[["vec"],["result",["vec","error"]],["error"]]]],[10,"hardwares","","Returns the cached and available hardwares.",9,[[["self"]]]],[10,"binary","","Returns the initialized binary.",9,[[["self"]]]],[10,"new_device","","Initializes a new Device from the provided hardwares.",9,[[["self"]],[["error"],["result",["error"]]]]],[0,"frameworks","coaster","Exposes the specific Framework implementations.",null,null],[0,"native","coaster::frameworks","Provides informations about the software system, such as…",null,null],[3,"Native","coaster::frameworks::native","Provides the Native framework.",null,null],[4,"Error","","Defines the Native Error.",null,null],[13,"Memory","","Failure related to allocation, syncing memory",10,null],[5,"allocate_boxed_slice","","Traditional allocation via creation of a filled Vec.",null,[[["usize"]],["box"]]],[0,"device","","Provides a hardware aka. the host CPU.",null,null],[3,"Cpu","coaster::frameworks::native::device","Defines the host CPU Hardware.",null,null],[11,"new","","Initializes a new OpenCL hardware.",11,[[["vec",["hardware"]],["hardware"]],["cpu"]]],[0,"flatbox","coaster::frameworks::native","Provides a Box without any knowledge of its underlying type.",null,null],[3,"FlatBox","coaster::frameworks::native::flatbox","A Box without any knowledge of its underlying type.",null,null],[11,"from_box","","Create FlatBox from Box, consuming it.",12,[[["box"]],["flatbox"]]],[11,"as_slice","","Access memory as slice.",12,[[["self"]]]],[11,"as_mut_slice","","Access memory as mutable slice.",12,[[["self"]]]],[11,"byte_size","","Returns memory size of the Flatbox.",12,[[["self"]],["usize"]]],[0,"hardware","coaster::frameworks::native","Provides a hardware aka. the host CPU.",null,null],[3,"Hardware","coaster::frameworks::native::hardware","Defines the host CPU Hardware.",null,null],[11,"new","","Initializes a new OpenCL hardware.",13,[[["isize"]],["hardware"]]],[0,"function","coaster::frameworks::native","Provides a operation on native CPU.",null,null],[3,"Function","coaster::frameworks::native::function","Defines a host CPU operation.",null,null],[11,"new","","Initializes a native CPU hardware.",14,[[],["function"]]],[0,"binary","coaster::frameworks::native","Provides a binary on native CPU.",null,null],[3,"Binary","coaster::frameworks::native::binary","Defines a host CPU binary.",null,null],[11,"new","","Initializes the native CPU binary.",15,[[],["binary"]]],[8,"INative","coaster::frameworks::native","Provides the Native framework trait for explicit Backend…",null,null],[0,"cuda","coaster::frameworks","Provides informations about the software system, such as…",null,null],[3,"Driver","coaster::frameworks::cuda","Defines the Cuda API.",null,null],[3,"Cuda","","Provides the Cuda Framework.",null,null],[4,"DriverError","","Defines OpenCL errors.",null,null],[13,"InvalidValue","","Failure with provided value.",16,null],[13,"OutOfMemory","","Failure with memory allocation.",16,null],[13,"NotInitialized","","Failure with Cuda initialization.",16,null],[13,"Deinitialized","","Failure with Cuda initialization.",16,null],[13,"ProfilerDisabled","","Failure with Profiler.",16,null],[13,"ProfilerNotInitialized","","Failure with Profiler.",16,null],[13,"ProfilerAlreadyStarted","","Failure with Profiler.",16,null],[13,"ProfilerAlreadyStopped","","Failure with Profiler.",16,null],[13,"NoDevice","","Failure with Cuda devices.",16,null],[13,"InvalidDevice","","Failure with provided Cuda device.",16,null],[13,"InvalidImage","","Failure with provided Cuda image.",16,null],[13,"InvalidContext","","Failure with provided Cuda context.",16,null],[13,"ContextAlreadyCurrent","","Failure with provided Cuda context.",16,null],[13,"MapFailed","","Failure",16,null],[13,"UnmapFailed","","Failure",16,null],[13,"ArrayIsMapped","","Failure",16,null],[13,"AlreadyMapped","","Failure",16,null],[13,"NoBinaryForGpu","","Failure with binary.",16,null],[13,"AlreadyAquired","","Failure",16,null],[13,"NotMapped","","Failure",16,null],[13,"NotMappedAsArray","","Failure",16,null],[13,"NotMappedAsPointer","","Failure",16,null],[13,"EccUncorrectable","","Failure",16,null],[13,"UnsupportedLimit","","Failure",16,null],[13,"ContextAlreadyInUse","","Failure with context.",16,null],[13,"PeerAccessUnsupported","","Failure",16,null],[13,"InvalidPtx","","Failure with provided PTX.",16,null],[13,"InvalidGraphicsContent","","Failure",16,null],[13,"InvalidSource","","Failure",16,null],[13,"FileNotFound","","Failure",16,null],[13,"SharedObjectSymbolNotFound","","Failure",16,null],[13,"SharedObjectInitFailed","","Failure",16,null],[13,"OperatingSystem","","Failure",16,null],[13,"InvalidHandle","","Failure",16,null],[13,"NotFound","","Failure",16,null],[13,"NotReady","","Failure",16,null],[13,"IllegalAddress","","Failure",16,null],[13,"LaunchOutOfResources","","Failure",16,null],[13,"LaunchTimeout","","Failure",16,null],[13,"LauncIncompatibleTexturing","","Failure",16,null],[13,"PeerAccessAlreadyEnabled","","Failure",16,null],[13,"PeerAccessNotEnabled","","Failure",16,null],[13,"PrimaryContextActive","","Failure",16,null],[13,"ContextIsDestroyed","","Failure",16,null],[13,"Assert","","Failure",16,null],[13,"TooManyPeers","","Failure",16,null],[13,"HostMemoryAlreadyRegistered","","Failure",16,null],[13,"HostMemoryNotRegistered","","Failure",16,null],[13,"HardwareStackError","","Failure",16,null],[13,"IllegalInstruction","","Failure",16,null],[13,"MisalignedAddress","","Failure",16,null],[13,"InvalidAddressSpace","","Failure",16,null],[13,"InvalidPc","","Failure",16,null],[13,"LaunchFailed","","Failure",16,null],[13,"NotPermitted","","Failure",16,null],[13,"NotSupported","","Failure",16,null],[13,"Unknown","","Failure",16,null],[0,"device","","Provides a Rust wrapper around Cuda's device.",null,null],[3,"Device","coaster::frameworks::cuda::device","Defines a Cuda Device.",null,null],[3,"DeviceInfo","","Defines a generic DeviceInfo container.",null,null],[11,"from_isize","","Initializes a new Cuda device.",17,[[["isize"]],["device"]]],[11,"from_c","","Initializes a new Cuda device from its C type.",17,[[["c_int"]],["device"]]],[11,"id_c","","Returns the id as its C type.",17,[[["self"]],["c_int"]]],[11,"load_name","","Loads the name of the device via a foreign Cuda call.",17,[[["self"]],["self"]]],[11,"load_device_type","","Loads the device type via a foreign Cuda call.",17,[[["self"]],["self"]]],[11,"load_compute_units","","Loads the compute units of the device via a foreign Cuda…",17,[[["self"]],["self"]]],[11,"new","","Initializes a new Device Info",18,[[["vec",["u8"]],["u8"]],["deviceinfo"]]],[11,"to_isize","","",18,[[["self"]],["isize"]]],[0,"context","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda's context.",null,null],[3,"Context","coaster::frameworks::cuda::context","Defines a Cuda Context.",null,null],[11,"new","","Initializes a new Cuda context.",19,[[["device"]],[["context"],["result",["context","drivererror"]],["drivererror"]]]],[11,"from_c","","Initializes a new Cuda platform from its C type.",19,[[["vec",["device"]],["device"]],["context"]]],[11,"id","","Returns the id as isize.",19,[[["self"]],["isize"]]],[11,"id_c","","Returns the id as its C type.",19,[[["self"]]]],[11,"synchronize","","Synchronize this Context.",19,[[["self"]],[["result",["drivererror"]],["drivererror"]]]],[0,"function","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda's Function.",null,null],[3,"Function","coaster::frameworks::cuda::function","Defines a Cuda Function.",null,null],[11,"from_isize","","Initializes a new OpenCL device.",20,[[["isize"]],["function"]]],[0,"memory","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda's memory.",null,null],[3,"Memory","coaster::frameworks::cuda::memory","Defines a Cuda Memory.",null,null],[11,"new","","Initializes a new Cuda memory.",21,[[["usize"]],[["memory"],["drivererror"],["result",["memory","drivererror"]]]]],[11,"from_c","","Initializes a new Cuda memory from its C type.",21,[[["c_ulonglong"]],["memory"]]],[11,"id_c","","Returns the memory id as its C type.",21,[[["self"]],["c_ulonglong"]]],[0,"module","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda's Module.",null,null],[3,"Module","coaster::frameworks::cuda::module","Defines a Cuda Module.",null,null],[11,"from_isize","","Initializes a new Cuda Module.",22,[[["isize"]],["module"]]],[11,"create_context","coaster::frameworks::cuda","Creates a Cuda context.",23,[[["device"]],[["result",["error"]],["error"]]]],[11,"destroy_context","","Removes a created Cuda context from the device.",23,[[],[["result",["error"]],["error"]]]],[11,"synchronize_context","","Synchronize the CUDA context associated with the current…",23,[[],[["result",["error"]],["error"]]]],[11,"load_devices","","Returns fully initialized devices available through Cuda.",23,[[],[["result",["vec","error"]],["error"],["vec",["device"]]]]],[11,"load_device_list","","Returns a list of available devices for the provided…",23,[[],[["result",["vec","error"]],["error"],["vec",["device"]]]]],[11,"load_device_info","","Returns the requested DeviceInfo for the provided device.",23,[[["cudevice_attribute"],["device"]],[["deviceinfo"],["result",["deviceinfo","error"]],["error"]]]],[11,"mem_alloc","","Allocates memory on the Cuda device.",23,[[["size_t"]],[["result",["memory","error"]],["memory"],["error"]]]],[11,"mem_free","","Releases allocated memory from the Cuda device.",23,[[["c_ulonglong"]],[["result",["error"]],["error"]]]],[11,"mem_cpy_h_to_d","","Copies memory from the Host to the Cuda device.",23,[[["flatbox"],["memory"]],[["result",["error"]],["error"]]]],[11,"mem_cpy_d_to_h","","Copies memory from the Cuda device to the Host.",23,[[["memory"],["flatbox"]],[["result",["error"]],["error"]]]],[11,"init","","Initialize the Cuda Driver API.",23,[[],[["result",["error"]],["error"]]]],[0,"tensor","coaster","Provides the functionality for memory management across…",null,null],[3,"SharedTensor","coaster::tensor","Container that handles synchronization of [Memory][1] of…",null,null],[4,"Error","","Errors than can occur when synchronizing memory.",null,null],[13,"DeviceError","","Error caused by operations with device: allocation, memory…",24,null],[13,"InvalidRemove","","Unable to remove Memory copy from SharedTensor.",24,null],[13,"InvalidShape","","Shape provided for reshaping is not compatible with old…",24,null],[13,"CapacityExceeded","","Maximal number of backing memories has been reached.",24,null],[13,"UninitializedMemory","","Memory is requested for reading, but it hasn't been…",24,null],[6,"TensorDesc","","Describes the Descriptor of a SharedTensor.",null,null],[8,"ITensorDesc","","Describes the Descriptor of a Tensor.",null,null],[10,"rank","","Returns the rank of the Tensor.",25,[[["self"]],["usize"]]],[10,"size","","Returns the summed up length of all dimensions of the…",25,[[["self"]],["usize"]]],[10,"dims","","Returns the dimensions of the Tensor.",25,[[["self"]],["vec"]]],[10,"dims_i32","","Returns the dimensions of the Tensor as Vec.",25,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"default_stride","","Returns the default stride for an Rust allocated Tensor.",25,[[["self"]],[["usize"],["vec",["usize"]]]]],[11,"default_stride_i32","","Returns the default stride for a Rust allocated Tensor as…",25,[[["self"]],[["i32"],["vec",["i32"]]]]],[8,"IntoTensorDesc","","Describes a conversion into a Tensor Descriptor.",null,null],[10,"into","","Converts the implemented type into a TensorDesc.",26,[[["self"]],["tensordesc"]]],[11,"new","","Create new Tensor by allocating [Memory][1] on a Device.…",27,[[["d"]],["sharedtensor"]]],[11,"reshape","","Change the shape of the Tensor.",27,[[["d"],["self"]],[["result",["error"]],["error"]]]],[11,"resize","","Change the size and shape of the Tensor.",27,[[["d"],["self"]],[["result",["error"]],["error"]]]],[11,"read","","Get memory for reading on the specified `device`. Can fail…",27,[[["d"],["self"]],[["result",["error"]],["error"]]]],[11,"read_write","","Get memory for reading and writing on the specified…",27,[[["d"],["self"]],[["result",["error"]],["error"]]]],[11,"write_only","","Get memory for writing only. This function skips…",27,[[["d"],["self"]],[["result",["error"]],["error"]]]],[11,"drop","","Drops memory allocation on the specified device. Returns…",27,[[["d"],["self"]],[["result",["error"]],["error"]]]],[11,"capacity","","Returns the number of elements for which the Tensor has…",27,[[["self"]],["usize"]]],[11,"desc","","Returns the descriptor of the Tensor.",27,[[["self"]],["tensordesc"]]],[11,"mem_size","","Returns the allocated Memory size in bytes.",27,[[["usize"]],["usize"]]],[0,"operation","coaster","Provides the generic functionality for backend-agnostic…",null,null],[8,"IOperation","coaster::operation","Defines the functionality of an operation.",null,null],[0,"binary","coaster","Provides the generic functionality for a backend-specific…",null,null],[8,"IBinary","coaster::binary","Defines the functionality for turning a library into…",null,null],[0,"error","coaster","Defines the general set of error types in Coaster.",null,null],[4,"Error","coaster::error","Defines the set of available Coaster error types.",null,null],[13,"Framework","","Failure related to the Framework implementation.",28,null],[13,"Tensor","","Failure related to the Tensor.",28,null],[13,"Plugin","","Failure at Plugin Operation.",28,null],[13,"Device","","Failure related to a Device.",28,null],[0,"plugin","coaster","Provides helpers for explicit implementations of Backend…",null,null],[8,"Float","coaster::plugin","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",29,[[],["self"]]],[10,"infinity","","Returns the infinite value.",29,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",29,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",29,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",29,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",29,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",29,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",29,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",29,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",29,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",29,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",29,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",29,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",29,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",29,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",29,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",29,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",29,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",29,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",29,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",29,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",29,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",29,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",29,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",29,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",29,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",29,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",29,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",29,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",29,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",29,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",29,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",29,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",29,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",29,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",29,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",29,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",29,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",29,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",29,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",29,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",29,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",29,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",29,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",29,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",29,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",29,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",29,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",29,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",29,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",29,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",29,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",29,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",29,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",29,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",29,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",29,[[]]],[4,"Error","","Defines a high-level Plugin Error.",null,null],[13,"SharedTensor","","Failure related to `SharedTensor`: use of uninitialized…",30,null],[13,"Operation","","Failure at the execution of the Operation.",30,null],[13,"Plugin","","Failure at the Plugin.",30,null],[0,"numeric_helpers","","Describes numeric types and traits for a Plugin.",null,null],[0,"bounds","coaster::plugin::numeric_helpers","",null,null],[8,"Bounded","coaster::plugin::numeric_helpers::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",31,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",31,[[],["self"]]],[0,"cast","coaster::plugin::numeric_helpers","",null,null],[8,"ToPrimitive","coaster::plugin::numeric_helpers::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",32,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",32,[[["self"]],[["i8"],["option",["i8"]]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",32,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",32,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",32,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",32,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",32,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",32,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",32,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",32,[[["self"]],[["option",["u32"]],["u32"]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",32,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",32,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",32,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",32,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",33,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",33,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",33,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",33,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",33,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",33,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",33,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",33,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",33,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",33,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",33,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",33,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",33,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",33,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",34,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",35,[[],["t"]]],[0,"float","coaster::plugin::numeric_helpers","",null,null],[8,"FloatCore","coaster::plugin::numeric_helpers::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",36,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",36,[[],["self"]]],[10,"nan","","Returns NaN.",36,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",36,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",36,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",36,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",36,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",36,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",36,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",36,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",36,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",36,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",36,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",36,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",36,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",36,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",36,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",36,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",36,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",36,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",36,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",36,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",36,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",36,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",36,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",36,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",36,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",36,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",36,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",29,[[],["self"]]],[10,"infinity","","Returns the infinite value.",29,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",29,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",29,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",29,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",29,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",29,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",29,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",29,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",29,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",29,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",29,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",29,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",29,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",29,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",29,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",29,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",29,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",29,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",29,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",29,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",29,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",29,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",29,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",29,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",29,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",29,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",29,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",29,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",29,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",29,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",29,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",29,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",29,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",29,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",29,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",29,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",29,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",29,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",29,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",29,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",29,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",29,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",29,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",29,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",29,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",29,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",29,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",29,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",29,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",29,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",29,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",29,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",29,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",29,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",29,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",29,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",37,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",37,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",37,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",37,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",37,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",37,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",37,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",37,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",37,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",37,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",37,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",37,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",37,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",37,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",37,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",37,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",37,[[],["self"]]],[0,"identities","coaster::plugin::numeric_helpers","",null,null],[8,"Zero","coaster::plugin::numeric_helpers::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",38,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",38,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",38,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",39,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",39,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",39,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",null,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["t"]]],[0,"int","coaster::plugin::numeric_helpers","",null,null],[8,"PrimInt","coaster::plugin::numeric_helpers::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",40,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",40,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",40,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",40,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",40,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",40,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",40,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",40,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",40,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",40,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",40,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",40,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",40,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",40,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",40,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",40,[[["u32"]],["self"]]],[0,"ops","coaster::plugin::numeric_helpers","",null,null],[0,"checked","coaster::plugin::numeric_helpers::ops","",null,null],[8,"CheckedAdd","coaster::plugin::numeric_helpers::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",41,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",42,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",43,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",44,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",45,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",46,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",47,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",48,[[["u32"],["self"]],["option"]]],[0,"inv","coaster::plugin::numeric_helpers::ops","",null,null],[8,"Inv","coaster::plugin::numeric_helpers::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",49,null],[10,"inv","","Returns the multiplicative inverse of `self`.",49,[[]]],[0,"mul_add","coaster::plugin::numeric_helpers::ops","",null,null],[8,"MulAdd","coaster::plugin::numeric_helpers::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",50,null],[10,"mul_add","","Performs the fused multiply-add operation.",50,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",51,[[["a"],["self"],["b"]]]],[0,"saturating","coaster::plugin::numeric_helpers::ops","",null,null],[8,"Saturating","coaster::plugin::numeric_helpers::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",52,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",52,[[],["self"]]],[0,"wrapping","coaster::plugin::numeric_helpers::ops","",null,null],[8,"WrappingAdd","coaster::plugin::numeric_helpers::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",53,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",54,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",55,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",56,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",57,[[["u32"],["self"]],["self"]]],[0,"pow","coaster::plugin::numeric_helpers","",null,null],[8,"Pow","coaster::plugin::numeric_helpers::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",58,null],[10,"pow","","Returns `self` to the power `rhs`.",58,[[["rhs"]]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["t"],["usize"]],["option"]]],[0,"real","coaster::plugin::numeric_helpers","",null,null],[8,"Real","coaster::plugin::numeric_helpers::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",59,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",59,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",59,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",59,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",59,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",59,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",59,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",59,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",59,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",59,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",59,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",59,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",59,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",59,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",59,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",59,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",59,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",59,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",59,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",59,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",59,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",59,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",59,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",59,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",59,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",59,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",59,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",59,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",59,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",59,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",59,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",59,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",59,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",59,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",59,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",59,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",59,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",59,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",59,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",59,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",59,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",59,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",59,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",59,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",59,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",59,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",59,[[],["self"]]],[0,"sign","coaster::plugin::numeric_helpers","",null,null],[8,"Signed","coaster::plugin::numeric_helpers::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",60,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",60,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",60,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",60,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",60,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",null,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",null,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","coaster::plugin::numeric_helpers","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",61,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",61,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",62,null],[13,"Invalid","","",62,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",63,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["t"]],["t"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["t"]],["t"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["t"]],["t"]]],[0,"prelude","coaster","A module meant to be glob imported when using Coaster.",null,null],[11,"from","coaster::backend","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","coaster::device","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","coaster::hardware","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","coaster::framework","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::native","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::native::device","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::native::flatbox","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::native::hardware","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::native::function","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::native::binary","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::cuda","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::cuda::device","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::cuda::context","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::cuda::function","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::cuda::memory","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","coaster::frameworks::cuda::module","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","coaster::tensor","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","coaster::error","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","coaster::plugin","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","coaster::plugin::numeric_helpers","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"device","coaster::backend","",1,[[["self"]],["cpu"]]],[11,"device","","",1,[[["self"]],["context"]]],[11,"synchronize","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"id","coaster::frameworks::native::device","",11,[[["self"]],["isize"]]],[11,"hardwares","","",11,[[["self"]],["vec"]]],[11,"alloc_memory","","",11,[[["self"],["usize"]],[["result",["flatbox","deviceerror"]],["deviceerror"],["flatbox"]]]],[11,"id","coaster::frameworks::cuda::context","",19,[[["self"]],["isize"]]],[11,"hardwares","","",19,[[["self"]],["vec"]]],[11,"alloc_memory","","",19,[[["self"],["size_t"]],[["result",["memory","deviceerror"]],["memory"],["deviceerror"]]]],[11,"sync_in","coaster::frameworks::native::device","",11,[[["any"],["any"],["self"]],[["deviceerror"],["result",["deviceerror"]]]]],[11,"sync_out","","",11,[[["any"],["self"],["any"]],[["deviceerror"],["result",["deviceerror"]]]]],[11,"sync_in","coaster::frameworks::cuda::context","",19,[[["any"],["any"],["self"]],[["deviceerror"],["result",["deviceerror"]]]]],[11,"sync_out","","",19,[[["any"],["self"],["any"]],[["deviceerror"],["result",["deviceerror"]]]]],[11,"id","coaster::frameworks::native::hardware","",13,[[["self"]],["isize"]]],[11,"name","","",13,[[["self"]],[["string"],["option",["string"]]]]],[11,"set_name","","",13,[[["self"],["string"],["option",["string"]]],["self"]]],[11,"hardware_type","","",13,[[["self"]],[["option",["hardwaretype"]],["hardwaretype"]]]],[11,"set_hardware_type","","",13,[[["option",["hardwaretype"]],["self"],["hardwaretype"]],["self"]]],[11,"compute_units","","",13,[[["self"]],[["option",["isize"]],["isize"]]]],[11,"set_compute_units","","",13,[[["option",["isize"]],["self"],["isize"]],["self"]]],[11,"build","","",13,[[],["hardware"]]],[11,"id","coaster::frameworks::cuda::device","",17,[[["self"]],["isize"]]],[11,"name","","",17,[[["self"]],[["string"],["option",["string"]]]]],[11,"set_name","","",17,[[["self"],["string"],["option",["string"]]],["self"]]],[11,"hardware_type","","",17,[[["self"]],[["option",["hardwaretype"]],["hardwaretype"]]]],[11,"set_hardware_type","","",17,[[["option",["hardwaretype"]],["self"],["hardwaretype"]],["self"]]],[11,"compute_units","","",17,[[["self"]],[["option",["isize"]],["isize"]]]],[11,"set_compute_units","","",17,[[["option",["isize"]],["self"],["isize"]],["self"]]],[11,"build","","",17,[[],["device"]]],[11,"ID","coaster::frameworks::native","",64,[[],["str"]]],[11,"new","","",64,[[],["native"]]],[11,"load_hardwares","","",64,[[],[["vec",["hardware"]],["error"],["result",["vec","error"]]]]],[11,"hardwares","","",64,[[["self"]]]],[11,"binary","","",64,[[["self"]],["binary"]]],[11,"new_device","","",64,[[["self"]],[["result",["error"]],["error"]]]],[11,"ID","coaster::frameworks::cuda","",65,[[],["str"]]],[11,"new","","",65,[[],["cuda"]]],[11,"load_hardwares","","",65,[[],[["result",["vec","error"]],["error"],["vec",["device"]]]]],[11,"hardwares","","",65,[[["self"]]]],[11,"binary","","",65,[[["self"]]]],[11,"new_device","","Creates a new Cuda context for computation.",65,[[["self"]],[["result",["error"]],["error"]]]],[11,"rank","coaster","",66,[[["self"]],["usize"]]],[11,"size","","",66,[[["self"]],["usize"]]],[11,"dims","","",66,[[["self"]],["vec"]]],[11,"dims_i32","","",66,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"drop","coaster::frameworks::native::flatbox","",12,[[["self"]]]],[11,"drop","coaster::frameworks::cuda::context","",19,[[["self"]]]],[11,"drop","coaster::frameworks::cuda::memory","",21,[[["self"]]]],[11,"from","coaster::device","",3,[[["nativeerror"]],["error"]]],[11,"from","","",3,[[["cudaerror"]],["error"]]],[11,"from","coaster::framework","",8,[[["cudaerror"]],["error"]]],[11,"from","coaster::error","",28,[[["error"]],["error"]]],[11,"from","coaster::tensor","",24,[[["deviceerror"]],["error"]]],[11,"from","coaster::error","",28,[[["error"]],["error"]]],[11,"from","","",28,[[["error"]],["error"]]],[11,"from","coaster::plugin","",30,[[["error"]],["error"]]],[11,"clone","coaster::backend","",1,[[["self"]],["backend"]]],[11,"clone","","",2,[[["self"]],["backendconfig"]]],[11,"clone","coaster::device","",3,[[["self"]],["error"]]],[11,"clone","coaster::hardware","",6,[[["self"]],["hardwaretype"]]],[11,"clone","coaster::frameworks::native::device","",11,[[["self"]],["cpu"]]],[11,"clone","coaster::frameworks::native::hardware","",13,[[["self"]],["hardware"]]],[11,"clone","coaster::frameworks::native::function","",14,[[["self"]],["function"]]],[11,"clone","coaster::frameworks::native::binary","",15,[[["self"]],["binary"]]],[11,"clone","coaster::frameworks::native","",10,[[["self"]],["error"]]],[11,"clone","","",64,[[["self"]],["native"]]],[11,"clone","coaster::frameworks::cuda::device","",17,[[["self"]],["device"]]],[11,"clone","","",18,[[["self"]],["deviceinfo"]]],[11,"clone","coaster::frameworks::cuda::context","",19,[[["self"]],["context"]]],[11,"clone","coaster::frameworks::cuda::function","",20,[[["self"]],["function"]]],[11,"clone","coaster::frameworks::cuda::module","",22,[[["self"]],["module"]]],[11,"clone","coaster::frameworks::cuda","",23,[[["self"]],["api"]]],[11,"clone","","",16,[[["self"]],["error"]]],[11,"clone","","",65,[[["self"]],["cuda"]]],[11,"clone","coaster::tensor","",24,[[["self"]],["error"]]],[11,"clone","coaster::plugin","",30,[[["self"]],["error"]]],[11,"default","coaster::frameworks::native::hardware","",13,[[],["self"]]],[11,"default","coaster::frameworks::cuda::device","",17,[[],["self"]]],[11,"eq","coaster::device","",3,[[["self"],["error"]],["bool"]]],[11,"ne","","",3,[[["self"],["error"]],["bool"]]],[11,"eq","coaster::hardware","",6,[[["self"],["hardwaretype"]],["bool"]]],[11,"eq","coaster::frameworks::native::device","",11,[[["self"]],["bool"]]],[11,"eq","coaster::frameworks::native","",10,[[["error"],["self"]],["bool"]]],[11,"ne","","",10,[[["error"],["self"]],["bool"]]],[11,"eq","coaster::frameworks::cuda::device","",17,[[["self"]],["bool"]]],[11,"eq","coaster::frameworks::cuda::context","",19,[[["self"]],["bool"]]],[11,"eq","coaster::frameworks::cuda","",16,[[["self"],["error"]],["bool"]]],[11,"ne","","",16,[[["self"],["error"]],["bool"]]],[11,"eq","coaster::tensor","",24,[[["self"],["error"]],["bool"]]],[11,"ne","","",24,[[["self"],["error"]],["bool"]]],[11,"fmt","coaster::backend","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::device","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::hardware","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::framework","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native::device","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native::flatbox","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native::hardware","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native::function","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native::binary","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda::device","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda::context","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda::function","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda::memory","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda::module","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::tensor","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::error","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::plugin","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::device","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::framework","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::native","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::frameworks::cuda::device","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","coaster::frameworks::cuda","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::tensor","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::error","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster::plugin","",30,[[["formatter"],["self"]],["result"]]],[11,"hash","coaster::hardware","",6,[[["self"],["__h"]]]],[11,"hash","coaster::frameworks::native::device","",11,[[["self"],["h"]]]],[11,"hash","coaster::frameworks::cuda::context","",19,[[["self"],["h"]]]],[11,"source","coaster::device","",3,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","coaster::framework","",8,[[["self"]],[["option",["error"]],["error"]]]],[11,"description","coaster::frameworks::native","",10,[[["self"]],["str"]]],[11,"cause","","",10,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","coaster::frameworks::cuda","",16,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","coaster::tensor","",24,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","coaster::error","",28,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","coaster::plugin","",30,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[8,"IBackend"],[3,"Backend"],[3,"BackendConfig"],[4,"Error"],[8,"IDevice"],[8,"MemorySync"],[4,"HardwareType"],[8,"IHardware"],[4,"Error"],[8,"IFramework"],[4,"Error"],[3,"Cpu"],[3,"FlatBox"],[3,"Hardware"],[3,"Function"],[3,"Binary"],[4,"DriverError"],[3,"Device"],[3,"DeviceInfo"],[3,"Context"],[3,"Function"],[3,"Memory"],[3,"Module"],[3,"Driver"],[4,"Error"],[8,"ITensorDesc"],[8,"IntoTensorDesc"],[3,"SharedTensor"],[4,"Error"],[8,"Float"],[4,"Error"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"Native"],[3,"Cuda"],[6,"TensorDesc"]]};
searchIndex["coaster_blas"] = {"doc":"Provides backend-agnostic BLAS operations for…","i":[[0,"binary","coaster_blas","Provides the IBlasBinary binary trait for Coaster's…",null,null],[8,"IBlasBinary","coaster_blas::binary","Describes the operation binding for a Blas Binary…",null,null],[16,"Asum","","Describes the Asum Operation.",0,null],[16,"Axpy","","Describes the Axpy Operation.",0,null],[16,"Copy","","Describes the Copy Operation.",0,null],[16,"Dot","","Describes the Dot Operation.",0,null],[16,"Nrm2","","Describes the Nrm2 Operation.",0,null],[16,"Scale","","Describes the Scale Operation.",0,null],[16,"Swap","","Describes the Swap Operation.",0,null],[10,"asum","","Returns an initialized Asum operation.",0,[[["self"]]]],[10,"axpy","","Returns an initialized Axpy operation.",0,[[["self"]]]],[10,"copy","","Returns an initialized Copy operation.",0,[[["self"]]]],[10,"dot","","Returns an initialized Dot operation.",0,[[["self"]]]],[10,"nrm2","","Returns an initialized Nrm2 operation.",0,[[["self"]]]],[10,"scale","","Returns an initialized Scale operation.",0,[[["self"]]]],[10,"swap","","Returns an initialized Swap operation.",0,[[["self"]]]],[0,"frameworks","coaster_blas","Provides the specific Framework implementations for the…",null,null],[0,"cuda","coaster_blas::frameworks","Provides BLAS for a CUDA backend.",null,null],[0,"helper","coaster_blas::frameworks::cuda","",null,null],[0,"native","coaster_blas::frameworks","Provides BLAS for a Native backend.",null,null],[0,"operation","coaster_blas","Provides the IOperationX operation traits for Coaster's…",null,null],[8,"IOperationAsum","coaster_blas::operation","Describes a Asum Operation.",null,null],[10,"compute","","Computes the Asum operation.",1,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationAxpy","","Describes a Axpy Operation.",null,null],[10,"compute","","Computes the Axpy operation.",2,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationCopy","","Describes a Copy Operation.",null,null],[10,"compute","","Computes the Copy operation.",3,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationDot","","Describes a Dot Operation.",null,null],[10,"compute","","Computes the Dot operation.",4,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationNrm2","","Describes a Nrm2 Operation.",null,null],[10,"compute","","Computes the Nrm2 operation.",5,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationScale","","Describes a Scale Operation.",null,null],[10,"compute","","Computes the Scale operation.",6,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationSwap","","Describes a Swap Operation.",null,null],[10,"compute","","Computes the Swap operation.",7,[[["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"IOperationGemm","","Describes a Gemm Operation.",null,null],[10,"compute","","Computes the Gemm operation.",8,[[["sharedtensor"],["sharedtensor"],["transpose"],["self"]],[["result",["error"]],["error"]]]],[0,"plugin","coaster_blas","Provides the IBlas library trait for Coaster implementation.",null,null],[8,"IBlas","coaster_blas::plugin","Provides the functionality for a backend to support Basic…",null,null],[8,"Asum","","Provides the asum operation.",null,null],[10,"asum","","Computes the absolute sum of vector `x`.",9,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Axpy","","Provides the axpy operation.",null,null],[10,"axpy","","Computes a vector `x` times a constant `a` plus a vector…",10,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Copy","","Provides the copy operation.",null,null],[10,"copy","","Copies `x.len()` elements of vector `x` into vector `y`.",11,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Dot","","Provides the dot operation.",null,null],[10,"dot","","Computes the [dot product][dot-product] over x and y.…",12,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Nrm2","","Provides the nrm2 operation.",null,null],[10,"nrm2","","Computes the L2 norm aka. euclidean length of vector `x`.",13,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Scal","","Provides the scal operation.",null,null],[10,"scal","","Scales a vector `x` by a constant `a` aka. `a * x`.",14,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Swap","","Provides the swap operation.",null,null],[10,"swap","","Swaps the content of vector `x` and vector `y` with…",15,[[["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Gbmv","","Provides the gbmv operation",null,null],[10,"gbmv","","Computes a matrix-vector product with a band matrix",16,[[["sharedtensor"],["sharedtensor"],["transpose"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Gemm","","Provides the gemm operation.",null,null],[10,"gemm","","Computes a matrix-matrix product with general matrices.",17,[[["sharedtensor"],["sharedtensor"],["transpose"],["self"]],[["result",["error"]],["error"]]]],[8,"BlasBinaryProvider","","Allows a BlasBinary to be provided which is used for a…",null,null],[10,"binary","","Returns the binary representation",18,[[["self"]],["b"]]],[0,"transpose","coaster_blas","Provides the Transpose functionality for Matrix operations.",null,null],[4,"Transpose","coaster_blas::transpose","Possible transpose operations that can be applied in Level…",null,null],[13,"NoTrans","","Take the matrix as it is.",19,null],[13,"Trans","","Take the transpose of the matrix.",19,null],[13,"ConjTrans","","Take the conjugate transpose of the matrix.",19,null],[11,"to_rblas","","Create a rust-blas `Transpose` from coaster-blas…",19,[[],["transpose"]]],[14,"iblas_asum_for_cuda","coaster_blas","asum with cuda",null,null],[14,"iblas_axpy_for_cuda","","axpy with cuda",null,null],[14,"iblas_copy_for_cuda","","copy for cuda",null,null],[14,"iblas_dot_for_cuda","","dot product for cuda",null,null],[14,"iblas_nrm2_for_cuda","","nrm2 for cuda",null,null],[14,"iblas_scal_for_cuda","","scalar mul for cuda",null,null],[14,"iblas_swap_for_cuda","","swap matrices for cuda",null,null],[14,"iblas_gbmv_for_cuda","","gbmv for cuda",null,null],[14,"iblas_gemm_for_cuda","","gemm for cuda",null,null],[11,"from","coaster_blas::transpose","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",19,[[["operation"]],["self"]]],[11,"clone","","",19,[[["self"]],["transpose"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]]],"p":[[8,"IBlasBinary"],[8,"IOperationAsum"],[8,"IOperationAxpy"],[8,"IOperationCopy"],[8,"IOperationDot"],[8,"IOperationNrm2"],[8,"IOperationScale"],[8,"IOperationSwap"],[8,"IOperationGemm"],[8,"Asum"],[8,"Axpy"],[8,"Copy"],[8,"Dot"],[8,"Nrm2"],[8,"Scal"],[8,"Swap"],[8,"Gbmv"],[8,"Gemm"],[8,"BlasBinaryProvider"],[4,"Transpose"]]};
searchIndex["coaster_nn"] = {"doc":"Provides a [Coaster][coaster] Plugin, to extend Coaster…","i":[[4,"ConvForwardAlgo","coaster_nn","Different algorithms to compute the convolution forward…",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all…",0,null],[13,"GEMM","","Compute the convolution as explicit matrix product.",0,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming…",0,null],[13,"ImplicitPrecompiledGEMM","","Similar to `ImplicitGEMM` but needs some workspace to…",0,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",0,null],[13,"FFTTiling","","Compute the convolution as Fast-Fourier Transform with…",0,null],[13,"Direct","","Compute the convolution without implicit or explicit…",0,null],[13,"Winograd","","Winograd  Transform",0,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",0,null],[4,"ConvBackwardFilterAlgo","","Different algorithms to compute the gradient with respect…",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all…",1,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming…",1,null],[13,"ImplicitGEMMSum","","Compute the convolution as sum of matrix product without…",1,null],[13,"ImplicitPrecompiledGEMMSum","","Similar to `ImplicitGEMMSum` but needs some workspace to…",1,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",1,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",1,null],[4,"ConvBackwardDataAlgo","","Different algorithms to compute the gradient with respect…",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all…",2,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming…",2,null],[13,"ImplicitGEMMSum","","Compute the convolution as sum of matrix product without…",2,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",2,null],[13,"FFTTiling","","Compute the convolution as Fast-Fourier Transform with…",2,null],[13,"Winograd","","Winograd  Transform",2,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",2,null],[4,"RnnNetworkMode","","Network Type for RNN Networks [cudnnRNNMOde_t][1] [1]:…",null,null],[13,"ReLU","","CUDNN_RNN_RELU - Single gate RNN with a ReLU activation…",3,null],[13,"Tanh","","Single-gate RNN with a tanh activation function",3,null],[13,"LSTM","","Four-gate LSTM Network with no peephole connection",3,null],[13,"GRU","","Three-gate network with Gated Recurrent Units",3,null],[4,"RnnInputMode","","Input Modes for RNN [cudnnRNNInputMode_t][1] [1]:…",null,null],[13,"LinearInput","","CUDNN_LINEAR_INPUT - A biased matrix multiplication is…",4,null],[13,"SkipInput","","CUDNN_SKIP_INPUT - No operation is performed at the input…",4,null],[4,"DirectionMode","","Direction Mode for RNN [cudnnDirectionMode_t][1] [1]:…",null,null],[13,"UniDirectional","","CUDNN_UNIDIRECTIONAL - The network iterates from first to…",5,null],[13,"BiDirectional","","CUDNN_BIDIRECTION - Concats recurrent output of First ->…",5,null],[4,"RnnAlgorithm","","Algorithm for RNN [cudnnRNNAlgo_t][1] [1]:…",null,null],[13,"Standard","","Sequence of Operations for each RNN Layer",6,null],[13,"PersistStatic","","Uses a Persistent Kernel - fast when the first D of the…",6,null],[13,"PersistDynamic","","RNN parts use a persistent kernel. Fast when the first…",6,null],[13,"Count","","Count - Cannot find in docs but is in Generated - FIXME",6,null],[4,"RnnPaddingMode","","Enables/Disables the padded input/output…",null,null],[13,"Disabled","","Padding disabled",7,null],[13,"Enabled","","Padding enabled",7,null],[4,"MathType","","Indicate if Tensor Core Operations are permitted…",null,null],[13,"Default","","No Tensor Core ops",8,null],[13,"TensorOPMath","","Uses Tensor Core ops",8,null],[13,"TensorOPMathAllowConversion","","Uses FP32 Tensors for input/output",8,null],[11,"is_auto","","Check if algorithim should be chosen automatically.",0,[[["self"]],["bool"]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",1,[[["self"]],["bool"]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",2,[[["self"]],["bool"]]],[11,"from_string","","Convert RnnNetworkMode to String Representation",3,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_string","","Convert to RnnInputMode from String Representation",4,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_string","","Convert to DirectionMode from String Representation",5,[[["str"]],[["result",["str"]],["str"]]]],[0,"frameworks","","Provides the specific Framework implementations for the…",null,null],[0,"native","coaster_nn::frameworks","Provides NN for a Native backend.",null,null],[0,"helper","coaster_nn::frameworks::native","Provides useful macros for easier NN implementation for…",null,null],[3,"NormalizationConfig","coaster_nn::frameworks::native::helper","",null,null],[3,"PoolingConfig","","",null,null],[12,"window","","",9,null],[12,"padding","","",9,null],[12,"stride","","",9,null],[3,"DropoutConfig","","",null,null],[12,"probability","","",10,null],[12,"seed","","",10,null],[3,"ConvolutionConfig","","",null,null],[12,"filter_shape","","",11,null],[12,"stride","","",11,null],[12,"padding","","",11,null],[3,"RnnConfig","","",null,null],[12,"hidden_size","","Size of the Hidden Layer",12,null],[12,"num_layers","","Number of Hidden Layers",12,null],[12,"dropout_probability","","Dropout Probability",12,null],[12,"dropout_seed","","Dropout Seed",12,null],[12,"rnn_type","","Type of RNN",12,null],[12,"input_mode","","Input Mode",12,null],[12,"direction_mode","","RNN Direction",12,null],[5,"write_to_memory","","Just a helper function until SharedTensor has a nice…",null,[[["flatbox"],["iterator"]]]],[5,"sigmoid","","Computes the Sigmoid Function on the CPU",null,[[["float"]],["float"]]],[5,"sigmoid_grad","","Computes the Sigmoid Gradient on the CPU",null,[[["float"]],["float"]]],[5,"relu","","Computes the ReLU Function on the CPU",null,[[["float"]],["float"]]],[5,"relu_grad","","Computes the ReLU Gradient on the CPU",null,[[["float"]],["float"]]],[5,"tanh","","Computes the Tanh Function on the CPU",null,[[["float"]],["float"]]],[5,"tanh_grad","","Computes the Tanh Gradient on the CPU",null,[[["float"]],["float"]]],[0,"cuda","coaster_nn::frameworks","Provides NN for a CUDA backend.",null,null],[4,"DataType","coaster_nn::frameworks::cuda","Defines the available data types for the CUDA cuDNN data…",null,null],[13,"Float","","F32",13,null],[13,"Double","","F64",13,null],[13,"Half","","F16 (no native Rust support yet)",13,null],[8,"DataTypeInfo","","CuDnn type info for generic use.",null,null],[10,"cudnn_data_type","","Mostly internal.",14,[[],["datatype"]]],[3,"RnnSequenceDescriptors","","Struct to hold all Sequence Descriptors for an RNN Pass",null,null],[12,"x_desc","","Input Descriptor",15,null],[12,"y_desc","","Output Descriptor",15,null],[12,"dx_desc","","Gradient Input Descriptor",15,null],[12,"dy_desc","","Gradient Output Descriptor",15,null],[12,"hx_desc","","Hidden Input Descriptor",15,null],[12,"cx_desc","","Cell Input Descriptor",15,null],[12,"hy_desc","","Hidden Output Descriptor",15,null],[12,"cy_desc","","Cell Output Descriptor",15,null],[12,"dhx_desc","","Gradient Hidden Input Descriptor",15,null],[12,"dcx_desc","","Gradient Cell Input Descriptor",15,null],[12,"dhy_desc","","Gradient Hidden Output Descriptor",15,null],[12,"dcy_desc","","Gradient Cell Output Descriptor",15,null],[0,"helper","","Provides useful macros for easier NN implementation for…",null,null],[8,"ICudnnDesc","","",null,null],[10,"cudnn_tensor_desc","","",16,[[["self"]],[["result",["tensordescriptor","pluginerror"]],["tensordescriptor"],["pluginerror"]]]],[10,"cudnn_tensor_desc_softmax","","Creates a TensorDescriptor similar to `cudnn_tensor_desc`,…",16,[[["self"]],[["result",["tensordescriptor","pluginerror"]],["tensordescriptor"],["pluginerror"]]]],[10,"cudnn_tensor_desc_flat","","Creates a TensorDescriptor similar to `cudnn_tensor_desc`,…",16,[[["self"]],[["result",["tensordescriptor","pluginerror"]],["tensordescriptor"],["pluginerror"]]]],[10,"cudnn_filter_desc","","",16,[[["self"]],[["filterdescriptor"],["pluginerror"],["result",["filterdescriptor","pluginerror"]]]]],[10,"cudnn_convolution_desc","","",16,[[["self"],["sharedtensor"]],[["result",["convolutiondescriptor","pluginerror"]],["convolutiondescriptor"],["pluginerror"]]]],[10,"cudnn_rnn_desc","","",16,[[["i32"],["cudnnrnninputmode_t"],["dropoutconfig"],["cudnndirectionmode_t"],["cudnnrnnalgo_t"],["cudnnrnnmode_t"],["cudnnrnnpaddingmode_t"],["self"]],[["rnndescriptor"],["result",["rnndescriptor","pluginerror"]],["pluginerror"]]]],[8,"NNOperationConfig","coaster_nn","Provides generic NN Operation Config functionality.",null,null],[8,"ConvolutionConfig","","Provides Convolution Config functionality.",null,null],[11,"workspace_size","","Returns the largest workspace size in bytes needed for any…",17,[[["self"]],["usize"]]],[8,"RnnConfig","","Provides Rnn Config functionality.",null,null],[11,"workspace_size","","Workspace Size - Overwritten by each plugin method except…",18,[[["self"]],["usize"]]],[8,"NN","","Provides the functionality for a backend to support Neural…",null,null],[16,"CC","","The Convolution Operation Config representation for this…",19,null],[16,"CLRN","","The LRN Operation Config representation for this Plugin.",19,null],[16,"CPOOL","","The Pooling Operation Config representation for this Plugin.",19,null],[16,"CDROP","","The Dropout Operation Config representation for this Plugin.",19,null],[16,"CRNN","","The RNN Operation Config representation for this Plugin",19,null],[10,"init_nn","","Initializes the Plugin.",19,[[]]],[8,"Sigmoid","","Provides the functionality for a Backend to support…",null,null],[10,"sigmoid","","Computes the [Sigmoid function][sigmoid] over the input…",20,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"sigmoid_grad","","Computes the gradient of a [Sigmoid function][sigmoid]…",20,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"SigmoidPointwise","","Provides the functionality for pointwise Sigmoid…",null,null],[10,"sigmoid_pointwise","","Computes the [Sigmoid function][sigmoid] over the input…",21,[[["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"sigmoid_pointwise_grad","","Computes the gradient of a [Sigmoid function][sigmoid]…",21,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"Relu","","Provides the functionality for a Backend to support ReLU…",null,null],[10,"relu","","Computes the [Rectified linear units][relu] over the input…",22,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"relu_grad","","Computes the gradient of [ReLU][relu] over the input…",22,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"ReluPointwise","","Provides the functionality for pointwise ReLU operations…",null,null],[10,"relu_pointwise","","Computes the [Rectified linear units][relu] over the input…",23,[[["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"relu_pointwise_grad","","Computes the gradient of [ReLU][relu] over the input…",23,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"Tanh","","Provides the functionality for a Backend to support TanH…",null,null],[10,"tanh","","Computes the [hyperbolic Tangent][tanh] over the input…",24,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"tanh_grad","","Computes the gradient of [hyperbolic Tangent][tanh] over…",24,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"TanhPointwise","","Provides the functionality for pointwise ReLU operations…",null,null],[10,"tanh_pointwise","","Computes the [hyperbolic Tangent][tanh] over the input…",25,[[["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"tanh_pointwise_grad","","Computes the gradient of [tanh][tanh] over the input…",25,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"Rnn","","Provide the functionality for a Backend to support RNN…",null,null],[10,"new_rnn_config","","Create a RnnConfig",26,[[["rnnnetworkmode"],["i32"],["u64"],["option",["u64"]],["f32"],["option",["f32"]],["rnninputmode"],["sharedtensor"],["directionmode"],["self"],["rnnalgorithm"]],[["error"],["result",["error"]]]]],[10,"generate_rnn_weight_description","","Generate Weights for RNN",26,[[["i32"],["self"]],[["error"],["result",["vec","error"]],["vec",["usize"]]]]],[10,"rnn_forward","","Train a LSTM Network and Return Results # Arguments *…",26,[[["sharedtensor"],["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"rnn_backward_data","","Calculates RNN Gradients for Input/Hidden/Cell",26,[[["sharedtensor"],["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"rnn_backward_weights","","Calculates RNN Gradients for Weights",26,[[["sharedtensor"],["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Convolution","","Provides the functionality for a Backend to support…",null,null],[10,"new_convolution_config","","Creates a new ConvolutionConfig, which needs to be passed…",27,[[["convbackwarddataalgo"],["sharedtensor"],["convforwardalgo"],["self"],["convbackwardfilteralgo"]],[["result",["error"]],["error"]]]],[10,"convolution","","Computes a [CNN convolution][convolution] over the input…",27,[[["sharedtensor"],["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"convolution_grad_filter","","Computes the gradient of a [CNN convolution][convolution]…",27,[[["sharedtensor"],["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"convolution_grad_data","","Computes the gradient of a [CNN convolution][convolution]…",27,[[["sharedtensor"],["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Softmax","","Provides the functionality for a Backend to support…",null,null],[10,"softmax","","Computes a [Softmax][softmax] over the input Tensor `x`.…",28,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"softmax_grad","","Computes the gradient of a [Softmax][softmax] over the…",28,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"LogSoftmax","","Provides the functionality for a Backend to support…",null,null],[10,"log_softmax","","Computes a logarithmic softmax over the input Tensor `x`.",29,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[10,"log_softmax_grad","","Computes the gradient of a logarithmic softmax over the…",29,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"LRN","","Provides the functionality for a Backend to support Local…",null,null],[10,"new_lrn_config","","Creates a new (Local Response Normalization) LRNConfig,…",30,[[["u32"],["f64"],["self"]],[["result",["error"]],["error"]]]],[10,"lrn","","Computes a [LRN][lrn] over the input Tensor `x`. [lrn]:…",30,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"lrn_grad","","Computes the gradient of a [LRN][lrn] over the input…",30,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Pooling","","Provides the functionality for a Backend to support…",null,null],[10,"new_pooling_config","","Creates a new PoolingConfig, which needs to be passed to…",31,[[["self"]],[["error"],["result",["error"]]]]],[10,"pooling_max","","Computes non-linear down-sampling ([max Pooling][pooling])…",31,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"pooling_max_grad","","Computes the gradient of [max Pooling][pooling] over the…",31,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"pooling_avg","","Computes non-linear down-sampling ([average…",31,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"pooling_avg_grad","","Computes the gradient of [average Pooling][pooling] over…",31,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[8,"Dropout","","Provides the functionality for a Backend to support…",null,null],[10,"new_dropout_config","","Creates a new DropoutConfig, which needs to be passed to…",32,[[["f32"],["self"],["u64"]],[["error"],["result",["error"]]]]],[10,"dropout","","Computes non-linear down-sampling ([max Pooling][pooling])…",32,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[10,"dropout_grad","","Computes non-linear down-sampling ([max Pooling][pooling])…",32,[[["sharedtensor"],["sharedtensor"],["self"]],[["result",["error"]],["error"]]]],[14,"impl_ops_sigmoid_for","","sigmoid impl generation macro",null,null],[14,"impl_ops_relu_for","","relu impl generation macro",null,null],[14,"impl_ops_tanh_for","","tanh impl generation macro",null,null],[14,"impl_ops_softmax_for","","softmax impl generation macro",null,null],[14,"impl_ops_log_softmax_for","","log softmax impl generation macro",null,null],[14,"impl_ops_lrn_for","","lrn impl generation macro TODO it's all unimplemented!()…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","coaster_nn::frameworks::native::helper","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","coaster_nn::frameworks::cuda","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clone","","",13,[[["self"]],["datatype"]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","coaster_nn","",0,[[["self"]],["convforwardalgo"]]],[11,"clone","","",1,[[["self"]],["convbackwardfilteralgo"]]],[11,"clone","","",2,[[["self"]],["convbackwarddataalgo"]]],[11,"clone","","",3,[[["self"]],["rnnnetworkmode"]]],[11,"clone","","",4,[[["self"]],["rnninputmode"]]],[11,"clone","","",5,[[["self"]],["directionmode"]]],[11,"clone","","",6,[[["self"]],["rnnalgorithm"]]],[11,"clone","","",7,[[["self"]],["rnnpaddingmode"]]],[11,"clone","","",8,[[["self"]],["mathtype"]]],[11,"clone","coaster_nn::frameworks::native::helper","",33,[[["self"]],["normalizationconfig"]]],[11,"clone","","",9,[[["self"]],["poolingconfig"]]],[11,"clone","","",10,[[["self"]],["dropoutconfig"]]],[11,"clone","","",11,[[["self"]],["convolutionconfig"]]],[11,"clone","","",12,[[["self"]],["rnnconfig"]]],[11,"fmt","coaster_nn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster_nn::frameworks::native::helper","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster_nn::frameworks::cuda","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","coaster_nn","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"workspace_size","","Returns the largest workspace size in bytes needed for any…",17,[[["self"]],["usize"]]],[11,"workspace_size","","Workspace Size - Overwritten by each plugin method except…",18,[[["self"]],["usize"]]]],"p":[[4,"ConvForwardAlgo"],[4,"ConvBackwardFilterAlgo"],[4,"ConvBackwardDataAlgo"],[4,"RnnNetworkMode"],[4,"RnnInputMode"],[4,"DirectionMode"],[4,"RnnAlgorithm"],[4,"RnnPaddingMode"],[4,"MathType"],[3,"PoolingConfig"],[3,"DropoutConfig"],[3,"ConvolutionConfig"],[3,"RnnConfig"],[4,"DataType"],[8,"DataTypeInfo"],[3,"RnnSequenceDescriptors"],[8,"ICudnnDesc"],[8,"ConvolutionConfig"],[8,"RnnConfig"],[8,"NN"],[8,"Sigmoid"],[8,"SigmoidPointwise"],[8,"Relu"],[8,"ReluPointwise"],[8,"Tanh"],[8,"TanhPointwise"],[8,"Rnn"],[8,"Convolution"],[8,"Softmax"],[8,"LogSoftmax"],[8,"LRN"],[8,"Pooling"],[8,"Dropout"],[3,"NormalizationConfig"]]};
searchIndex["greenglas"] = {"doc":"Greenglas provides convenient and universal Machine…","i":[[8,"Set","greenglas","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",0,[[["m"]],["self"]]],[11,"set_mut","","Modify self through a mutable reference with the provided…",0,[[["self"],["m"]],["self"]]],[0,"transformer","","Transformer",null,null],[4,"TransformerError","greenglas::transformer","The Transformer Errors",null,null],[13,"InvalidShape","","When the speficied shape capacitiy differs from the actual…",1,null],[13,"InvalidRgbPixels","","When The Image Pixel Buffer can't be converted to a RGB…",1,null],[13,"InvalidRgbaPixels","","When The Image Pixel Buffer can't be converted to a RGBA…",1,null],[13,"InvalidLumaPixels","","When The Image Pixel Buffer can't be converted to a…",1,null],[13,"InvalidLumaAlphaPixels","","When The Image Pixel Buffer can't be converted to a…",1,null],[8,"Transformer","","The Transformer Trait",null,null],[11,"transform","","Transforms non-numeric data into a numeric `SharedTensor`",2,[[["self"]],[["transformererror"],["result",["sharedtensor","transformererror"]],["sharedtensor",["f32"]]]]],[10,"transform_to_vec","","Transforms the non-numeric data into a numeric `Vec`",2,[[["self"]],[["f32"],["vec",["f32"]]]]],[11,"write_to_memory","","Write into a native Coaster Memory.",2,[[["flatbox"]],[["result",["transformererror"]],["transformererror"]]]],[11,"write_to_memory_offset","","Write into a native Coaster Memory with a offset.",2,[[["flatbox"],["usize"]],[["result",["transformererror"]],["transformererror"]]]],[0,"image","greenglas","The Image Struct and its Modifiers",null,null],[3,"Image","greenglas::image","The Transformable Data Type `Image`",null,null],[0,"modifiers","","The Modifiers form `Image`",null,null],[3,"Resize","greenglas::image::modifiers","Resize Modifier for `Image`",null,null],[12,"width","","The resized width of the new Image",3,null],[12,"height","","The resized heigt of the new Image",3,null],[3,"Crop","","Crop Modifier for `Image`",null,null],[12,"x","","The x value from where the new Image should start",4,null],[12,"y","","The y value from where the new Image should start",4,null],[12,"width","","The width for the new Image",4,null],[12,"height","","The height for the new Image",4,null],[3,"Grayscale","","Grayscale Modifier for `Image`",null,null],[11,"new","greenglas::image","Create a new Image from a DynamicImage",5,[[["dynamicimage"]],["image"]]],[11,"from_path","","Create a new Image from a Path",5,[[["p"]],["image"]]],[11,"from_buffer","","Create a new Image from Buffer",5,[[],["image"]]],[11,"from_rgb_pixels","","Create a new Image from RGB style pixel container such as…",5,[[["u32"],["vec",["u8"]],["u8"]],[["result",["image","transformererror"]],["image"],["transformererror"]]]],[11,"from_rgba_pixels","","Create a new Image from RGBa style pixel container such as…",5,[[["u32"],["vec",["u8"]],["u8"]],[["result",["image","transformererror"]],["image"],["transformererror"]]]],[11,"from_luma_pixels","","Create a new Image from Luma (greyscale) style pixel…",5,[[["u32"],["vec",["u8"]],["u8"]],[["result",["image","transformererror"]],["image"],["transformererror"]]]],[11,"from_lumaa_pixels","","Create a new Image from LumaA style pixel container such…",5,[[["u32"],["vec",["u8"]],["u8"]],[["result",["image","transformererror"]],["image"],["transformererror"]]]],[0,"word","greenglas","The Word Struct and its Modifiers",null,null],[3,"Word","greenglas::word","The Transformable Data Type `Word`",null,null],[0,"modifiers","","The Modifiers for `Word`",null,null],[11,"new","","Creates a new `Word`",6,[[["string"]],["word"]]],[0,"modifier","greenglas","Re-exports from the modifier crate.",null,null],[8,"Modifier","greenglas::modifier","Allows use of the implemented type as an argument to…",null,null],[10,"modify","","Modify `F` with self.",7,[[["f"]]]],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",0,[[["m"]],["self"]]],[11,"set_mut","","Modify self through a mutable reference with the provided…",0,[[["self"],["m"]],["self"]]],[11,"from","greenglas::transformer","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","greenglas::image","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","greenglas::image::modifiers","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","greenglas::word","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"transform_to_vec","greenglas::image","",5,[[["self"]],[["f32"],["vec",["f32"]]]]],[11,"transform_to_vec","greenglas::word","",6,[[["self"]],[["f32"],["vec",["f32"]]]]],[11,"clone","greenglas::transformer","",1,[[["self"]],["transformererror"]]],[11,"clone","greenglas::image::modifiers","",3,[[["self"]],["resize"]]],[11,"clone","","",4,[[["self"]],["crop"]]],[11,"clone","","",8,[[["self"]],["grayscale"]]],[11,"fmt","greenglas::transformer","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","greenglas::image::modifiers","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","greenglas::word","",6,[[["formatter"],["self"]],["result"]]],[11,"modify","greenglas::image::modifiers","",3,[[["image"]]]],[11,"modify","","",4,[[["image"]]]],[11,"modify","","",8,[[["image"]]]]],"p":[[8,"Set"],[4,"TransformerError"],[8,"Transformer"],[3,"Resize"],[3,"Crop"],[3,"Image"],[3,"Word"],[8,"Modifier"],[3,"Grayscale"]]};
searchIndex["juice"] = {"doc":"Juice is a open, modular and clear-designed Machine…","i":[[0,"layer","juice","Provides the generics and interfaces for the specific…",null,null],[3,"Layer","juice::layer","The generic Layer",null,null],[12,"name","","Identifies the Network",0,null],[12,"config","","The configuration of the Layer",0,null],[12,"worker","","The [implementation][1] of the Layer. [1]:…",0,null],[12,"weights_data","","The vector that stores shared references to the weights in…",0,null],[12,"weights_gradient","","The vector that stores shared references to the weights in…",0,null],[12,"input_blobs_data","","References to all the input blobs of the layer.",0,null],[12,"input_blobs_gradient","","References to all the input blobs of the layer.",0,null],[12,"input_blob_names","","Names for all the input blobs of the layer.",0,null],[12,"output_blobs_data","","References to all the output blobs of the layer.",0,null],[12,"output_blobs_gradient","","References to all the output blobs of the layer.",0,null],[12,"blob_names","","All the blobs of the layer that can be addressed by name.",0,null],[3,"LayerConfig","","Layer Configuration Struct",null,null],[12,"name","","The name of the Layer",1,null],[12,"layer_type","","The type of the Layer",1,null],[12,"outputs","","The name for each output Blob",1,null],[12,"inputs","","The name for each input Blob",1,null],[12,"params","","Specifies training configuration for each weight blob.",1,null],[12,"propagate_down","","Specifies on which inputs the backpropagation should be…",1,null],[4,"LayerType","","The Layer Types",null,null],[13,"Convolution","","Convolution Layer",2,null],[13,"Rnn","","RNN Layer",2,null],[13,"Linear","","Linear Layer",2,null],[13,"LogSoftmax","","LogSoftmax Layer",2,null],[13,"Pooling","","Pooling Layer",2,null],[13,"Sequential","","Sequential Layer",2,null],[13,"Softmax","","Softmax Layer",2,null],[13,"Dropout","","Dropout",2,null],[13,"ReLU","","ReLU Layer",2,null],[13,"TanH","","TanH Layer",2,null],[13,"Sigmoid","","Sigmoid Layer",2,null],[13,"NegativeLogLikelihood","","NegativeLogLikelihood Layer",2,null],[13,"MeanSquaredError","","MeanSquaredError Layer",2,null],[13,"Reshape","","Reshape Layer",2,null],[8,"ILayer","","A Layer in a Neural Network that can handle forward and…",null,null],[11,"init","","Initialize the layer for computation.",3,[[["self"],["rc"]]]],[11,"reshape","","Adjust to shapes of the output blobs to fit the shapes of…",3,[[["rc"],["self"],["vec"]]]],[11,"resize_shared_workspace","","Adjust size of shared workspace.",3,[[["option",["arclock"]],["rc"],["self"],["arclock",["sharedtensor"]]],[["option",["arclock"]],["arclock",["sharedtensor"]]]]],[11,"forward","","Compute the [feedforward][1] layer output using the…",3,[[["b"],["self"]]]],[11,"backward_input","","Compute the [backpropagation][1] input gradient using the…",3,[[["b"],["self"]]]],[11,"backward_parameters","","Compute the [backpropagation][1] parameters gradient using…",3,[[["b"],["self"]]]],[11,"auto_output_blobs","","Return whether \"anonymous\" output blobs are created…",3,[[["self"]],["bool"]]],[11,"min_output_blobs","","Returns the minimum number of output blobs required by the…",3,[[["self"]],["usize"]]],[11,"exact_num_output_blobs","","Returns the exact number of output blobs required by the…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"auto_weight_blobs","","Return whether weight blobs are created automatically for…",3,[[["self"]],["bool"]]],[11,"exact_num_input_blobs","","Returns the exact number of input blobs required by the…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"allow_force_backward","","Return whether to allow force_backward for a given input…",3,[[["self"],["usize"]],["bool"]]],[11,"sync_native","","Return wether a simple native backend should be used to…",3,[[["self"]],["bool"]]],[11,"compute_in_place","","Return wether the computations of a layer should be done…",3,[[["self"]],["bool"]]],[11,"is_container","","Return wether the layer is a container.",3,[[["self"]],["bool"]]],[11,"loss_weight","","Return the associated loss weight for a given output blob…",3,[[["self"],["usize"]],[["f32"],["option",["f32"]]]]],[11,"inputs_data","","Return the input tensors of the layer.",3,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"inputs_gradients","","Return the gradients of the input tensors of the layer.",3,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"outputs_data","","Return the output tensors of the layer.",3,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"outputs_gradients","","Return the gradients of the output tensors of the layer.",3,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"learnable_weights","","Return the learnable weights inside the layer.",3,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"learnable_weights_gradients","","Return the gradients for the learnable weights inside the…",3,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"learnable_weights_names","","Return the names of the learnable weights inside the layer.",3,[[["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"learnable_weights_lr","","Return the learning rates for the learnable weights inside…",3,[[["self"]],[["option",["vec"]],["vec",["option"]]]]],[8,"ComputeOutput","","A Layer that can compute the output for a given input.",null,null],[10,"compute_output","","Compute output for given input and write them into…",4,[[["b"],["self"]]]],[8,"ComputeInputGradient","","A Layer that can compute the gradient with respect to its…",null,null],[10,"compute_input_gradient","","Compute gradients with respect to the inputs and write…",5,[[["b"],["self"]]]],[8,"ComputeParametersGradient","","A Layer that can compute the gradient with respect to its…",null,null],[11,"compute_parameters_gradient","","Compute gradients with respect to the parameters and write…",6,[[["b"],["self"]]]],[11,"connect","","Connect the layer to another layers and set up tensors for…",0,[[["hashmap"],["self"],["hashmap"]]]],[11,"init_backprop","","Initializes layer for [backpropagation][1] [1]:…",0,[[["self"],["hashset"]]]],[11,"init_force_backward","","Set [backpropagation][1] flags to force this layer to…",0,[[["self"]]]],[11,"forward","","Uses the underlying layer implementation to compute a…",0,[[["self"]],[["arclock",["sharedtensor"]],["vec",["arclock"]]]]],[11,"backward","","Uses the underlying layer implementation to compute a…",0,[[["self"]],[["arclock",["sharedtensor"]],["vec",["arclock"]]]]],[11,"backward_input","","Calculate the gradient w.r.t. input.",0,[[["self"]],[["arclock",["sharedtensor"]],["vec",["arclock"]]]]],[11,"backward_parameters","","Calculate the gradient w.r.t. parameters.",0,[[["self"]]]],[11,"synchronize","","Synchronize the layers backend.",0,[[["self"]]]],[11,"update_weights","","Updates the [weights][1] with the weight update computed…",0,[[["self"],["solverb"]]]],[11,"clear_weights_gradients","","Clears the [weights][1] gradients and zero-inits them.…",0,[[["self"]]]],[11,"save","","Serialize the Layer and it's weights to a Cap'n Proto file…",0,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"load","","Read a Cap'n Proto file at the specified path and…",0,[[["f32"],["asref",["path"]],["ibackend"],["path"],["rc"],["layerops",["f32"]]],[["layer"],["result",["layer"]]]]],[11,"set_weight_propagate_down","","Sets whether the layer should compute gradients w.r.t. a…",0,[[["self"],["usize"],["bool"]]]],[11,"is_using_in_place","","Returns `true` when the layer is using in-place computation.",0,[[["self"]],["bool"]]],[11,"input_blob_names","","Returns the names of all the input blobs.",0,[[["self"]]]],[11,"loss","","Returns the [loss weight][1] associated with the weight…",0,[[["self"],["usize"]],[["f32"],["option",["f32"]]]]],[11,"learnable_weights_data","","Returns all the learnable weights in the layer.",0,[[["self"]],[["arclock",["sharedtensor"]],["vec",["arclock"]]]]],[11,"learnable_weights_gradients","","Returns the gradients for all the learnable weights in the…",0,[[["self"]],[["arclock",["sharedtensor"]],["vec",["arclock"]]]]],[11,"learnable_weights_names","","Returns the names of all the learnable weights in the layer.",0,[[["self"]],[["string"],["vec",["string"]]]]],[11,"learnable_weights_lr","","Returns the learning rate for all the learnable weights in…",0,[[["self"]],[["option",["f32"]],["vec",["option"]]]]],[11,"from_config","","Creates a new Layer from a [LayerConfig][1]. [1]:…",0,[[["layerconfig"],["rc"]],["layer"]]],[11,"supports_in_place","","Returns wether the LayerType supports in-place operations.",2,[[["self"]],["bool"]]],[11,"new","","Creates a new LayerConfig",1,[[["str"],["into",["layertype"]],["layertype"]],["layerconfig"]]],[11,"output","","Returns the Name of the requested output Blob",1,[[["self"],["usize"]],[["option",["string"]],["string"]]]],[11,"outputs_len","","Returns the number of output Blobs",1,[[["self"]],["usize"]]],[11,"add_output","","Add a output by name",1,[[["str"],["self"]]]],[11,"input","","Returns the Name of the requested input Blob",1,[[["self"],["usize"]],[["option",["string"]],["string"]]]],[11,"inputs_len","","Returns the number of input Blobs",1,[[["self"]],["usize"]]],[11,"add_input","","Add a input by name",1,[[["str"],["self"]]]],[11,"param","","Returns the requested WeightConfig",1,[[["self"],["usize"]],[["weightconfig"],["option",["weightconfig"]]]]],[11,"params_len","","Returns the number of params",1,[[["self"]],["usize"]]],[11,"validate","","Check if the configured parameters make sense.",1,[[["self"]],[["result",["str"]],["str"]]]],[0,"layers","juice","Provides the fundamental units of computation in a Neural…",null,null],[0,"activation","juice::layers","Provides nonlinear activation methods.",null,null],[0,"relu","juice::layers::activation","Applies the nonlinear Rectified Linear Unit.",null,null],[3,"ReLU","juice::layers::activation::relu","ReLU Activation Layer",null,null],[0,"sigmoid","juice::layers::activation","Applies the nonlinear Log-Sigmoid function.",null,null],[3,"Sigmoid","juice::layers::activation::sigmoid","Sigmoid Activation Layer",null,null],[0,"tanh","juice::layers::activation","Applies the nonlinear TanH function.",null,null],[3,"TanH","juice::layers::activation::tanh","TanH Activation Layer",null,null],[0,"common","juice::layers","Provides common neural network layers.",null,null],[0,"convolution","juice::layers::common","Convolves the input tensor.",null,null],[3,"Convolution","juice::layers::common::convolution","Convolution Layer",null,null],[3,"ConvolutionConfig","","Specifies configuration parameters for a Convolution Layer.",null,null],[12,"num_output","","The number of output feature maps",7,null],[12,"filter_shape","","The size of the kernel",7,null],[12,"stride","","The stride size",7,null],[12,"padding","","The padding size",7,null],[11,"from_config","","Create a Convolution layer from a ConvolutionConfig.",8,[[["convolutionconfig"]],["convolution"]]],[0,"rnn","juice::layers::common","Create a Recursive Layer",null,null],[3,"Rnn","juice::layers::common::rnn","",null,null],[3,"RnnConfig","","Specifies configuration parameters for a RNN Layer. TODO:…",null,null],[12,"hidden_size","","Size of the Hidden Layer",9,null],[12,"num_layers","","Number of Hidden Layers",9,null],[12,"dropout_probability","","Dropout Probability",9,null],[12,"dropout_seed","","Dropout Seed",9,null],[12,"rnn_type","","Type of RNN",9,null],[12,"input_mode","","Input Mode",9,null],[12,"direction_mode","","RNN Direction",9,null],[11,"from_config","","Create a RNN from a RNNConfig",10,[[["rnnconfig"]],["rnn"]]],[0,"linear","juice::layers::common","Applies a linear transformation to the input data `y = a *…",null,null],[3,"Linear","juice::layers::common::linear","Linear Layer",null,null],[3,"LinearConfig","","Specifies configuration parameters for a Linear Layer.",null,null],[12,"output_size","","The number of output values",11,null],[11,"from_config","","Create a Linear layer from a LinearConfig.",12,[[["linearconfig"]],["linear"]]],[0,"log_softmax","juice::layers::common","Computes the logarithmic softmax of its input.",null,null],[3,"LogSoftmax","juice::layers::common::log_softmax","LogSoftmax Layer",null,null],[0,"pooling","juice::layers::common","Applies pooling to the input.",null,null],[3,"Pooling","juice::layers::common::pooling","Pooling Layer",null,null],[3,"PoolingConfig","","Specifies configuration parameters for a Pooling Layer.",null,null],[12,"mode","","The PoolingMode to use",13,null],[12,"filter_shape","","The shape of the filter",13,null],[12,"stride","","The stride size",13,null],[12,"padding","","The padding size",13,null],[4,"PoolingMode","","The different modes of pooling that can be calculated.",null,null],[13,"Max","","The maximum value inside the pooling window will be used…",14,null],[13,"Average","","The average of all values inside the pooling window will…",14,null],[11,"from_config","","Create a Pooling layer from a PoolingConfig.",15,[[["poolingconfig"]],["pooling"]]],[0,"softmax","juice::layers::common","Computes the softmax of its input.",null,null],[3,"Softmax","juice::layers::common::softmax","Softmax Layer",null,null],[0,"dropout","juice::layers::common","Applies a Dropout layer to the input data `x`",null,null],[3,"Dropout","juice::layers::common::dropout","Dropout Layer",null,null],[3,"DropoutConfig","","Specifies configuration parameters for a Dropout Layer.",null,null],[12,"probability","","The probability to clamp a value to zero",16,null],[12,"seed","","The initial seed for the (pseudo-)random generator",16,null],[11,"from_config","","Create a Dropout layer from a DropoutConfig.",17,[[["dropoutconfig"]],["dropout"]]],[8,"FilterLayer","juice::layers::common","Provides common utilities for Layers that utilize a filter…",null,null],[11,"calculate_spatial_output_dims","","Computes the shape of the spatial dimensions.",18,[[],[["usize"],["vec",["usize"]]]]],[10,"calculate_output_shape","","Calculate output shape based on the shape of filter,…",18,[[["self"]],[["usize"],["vec",["usize"]]]]],[10,"num_spatial_dims","","Calculates the number of spatial dimensions for the…",18,[[["self"]],["usize"]]],[11,"spatial_filter_dims","","Retrievs the spatial dimensions for the filter based on…",18,[[["self"],["usize"]],[["usize"],["vec",["usize"]]]]],[11,"stride_dims","","Retrievs the stride for the convolution based on…",18,[[["self"],["usize"]],[["usize"],["vec",["usize"]]]]],[11,"padding_dims","","Retrievs the padding for the convolution based on…",18,[[["self"],["usize"]],[["usize"],["vec",["usize"]]]]],[10,"filter_shape","","The filter_shape that will be used by `spatial_filter_dims`.",18,[[["self"]]]],[10,"stride","","The stride that will be used by `stride_dims`.",18,[[["self"]]]],[10,"padding","","The padding that will be used by `padding_dims`.",18,[[["self"]]]],[0,"loss","juice::layers","Provides methods to calculate the loss (cost) of some…",null,null],[0,"negative_log_likelihood","juice::layers::loss","TODO: DOC",null,null],[3,"NegativeLogLikelihood","juice::layers::loss::negative_log_likelihood","NegativeLogLikelihood Loss Layer",null,null],[3,"NegativeLogLikelihoodConfig","","Specifies configuration parameters for a…",null,null],[12,"num_classes","","How many different classes can be classified.",19,null],[11,"from_config","","Create a NegativeLogLikelihood layer from a…",20,[[["negativeloglikelihoodconfig"]],["negativeloglikelihood"]]],[0,"mean_squared_error","juice::layers::loss","Provides Loss & Gradient for Mean Squared Error",null,null],[3,"MeanSquaredError","juice::layers::loss::mean_squared_error","Mean Squared Error Layer",null,null],[0,"utility","juice::layers","Provides various helpful layers, which might be not…",null,null],[0,"flatten","juice::layers::utility","Flattens the bottom Blob into a simpler top Blob.",null,null],[3,"Flatten","juice::layers::utility::flatten","Flattening Utility Layer",null,null],[0,"reshape","juice::layers::utility","Utility layer to give a tensor another shape.",null,null],[3,"Reshape","juice::layers::utility::reshape","Reshape Utility Layer",null,null],[3,"ReshapeConfig","","Specifies configuration parameters for a Reshape Layer.",null,null],[12,"shape","","The target shape that the input should assume.",21,null],[11,"from_config","","Create a Reshape layer from a ReshapeConfig.",22,[[["reshapeconfig"]],["reshape"]]],[11,"of_shape","","Create a ReshapeConfig that describes a Reshape layer with…",21,[[],["reshapeconfig"]]],[0,"container","juice::layers","Provides container layers.",null,null],[0,"sequential","juice::layers::container","A container layer that runs operations sequentially on the…",null,null],[3,"Sequential","juice::layers::container::sequential","Sequential Layer",null,null],[3,"SequentialConfig","","Specifies configuration parameters for a Sequential Layer.",null,null],[12,"layers","","Defines the layers of the container via…",23,null],[12,"inputs","","Defines the names and shapes of the input tensors.",23,null],[12,"force_backward","","Defines if the container will force every layer to do…",23,null],[11,"empty","","Create a empty Sequential container layer.",24,[[],["sequential"]]],[11,"from_config","","Create a Sequential layer from a SequentialConfig.",24,[[["sequentialconfig"],["rc"]],["sequential"]]],[11,"init_layers","","Initializes a sequential container.",24,[[["sequentialconfig"],["self"],["rc"]]]],[11,"find_in_place_output","","Tries to find the output of a previous layer that is…",23,[[["self"],["usize"]],[["string"],["option",["string"]]]]],[11,"add_layer","","Add layer at the end of the sequential container.",23,[[["self"],["layerconfig"]]]],[11,"add_input","","Add a input to the network.",23,[[["str"],["self"]]]],[0,"solver","juice","Provides the generics and interfaces for the specific…",null,null],[3,"Solver","juice::solver","Solver that optimizes a [Layer][1] with a given objective.…",null,null],[12,"worker","","The implementation of the Solver",25,null],[3,"SolverConfig","","Configuration for a Solver",null,null],[12,"name","","Name of the solver.",26,null],[12,"network","","The [LayerConfig][1] that is used to initialize the…",26,null],[12,"objective","","The [LayerConfig][1] that is used to initialize the…",26,null],[12,"solver","","The [Solver implementation][1] to be used. [1]:…",26,null],[12,"minibatch_size","","Accumulate gradients over `minibatch_size` instances.",26,null],[12,"lr_policy","","The learning rate policy to be used.",26,null],[12,"base_lr","","The base learning rate.",26,null],[12,"gamma","","gamma as used in the calculation of most learning rate…",26,null],[12,"stepsize","","The stepsize used in Step and Sigmoid learning policies.",26,null],[12,"clip_gradients","","The threshold for clipping gradients.",26,null],[12,"weight_decay","","The global [weight decay][1] multiplier for…",26,null],[12,"regularization_method","","The method of [regularization][1] to use. [1]:…",26,null],[12,"momentum","","The [momentum][1] multiplier for [SGD solvers][2]. [1]:…",26,null],[4,"SolverKind","","All available types of solvers.",null,null],[13,"SGD","","Stochastic Gradient Descent. See [SGDKind][1] for all…",27,null],[4,"SGDKind","","All available types of Stochastic Gradient Descent solvers.",null,null],[13,"Momentum","","Stochastic Gradient Descent with Momentum. See…",28,null],[4,"LRPolicy","","Learning Rate Policy for a [Solver][1] [1]:…",null,null],[13,"Fixed","","always return base_lr",29,null],[13,"Step","","learning rate decays every `step` iterations. return…",29,null],[13,"Exp","","return base_lr * gamma ^ iter",29,null],[4,"RegularizationMethod","","[Regularization][1] method for a [Solver][2]. [1]:…",null,null],[13,"L2","","L2 regularization",30,null],[0,"confusion_matrix","","TODO: DOC",null,null],[3,"ConfusionMatrix","juice::solver::confusion_matrix","A [ConfusionMatrix][wiki].",null,null],[3,"Sample","","A single prediction Sample.",null,null],[3,"Accuracy","","The accuracy of the predictions in a ConfusionMatrix.",null,null],[11,"new","","Create a ConfusionMatrix that analyzes the prediction of…",31,[[["usize"]],["confusionmatrix"]]],[11,"add_sample","","Add a sample by providing the expected `target` class and…",31,[[["self"],["usize"]]]],[11,"add_samples","","Add a batch of samples.",31,[[["self"]]]],[11,"get_predictions","","Get the predicted classes from the output of a network.",31,[[["sharedtensor"],["self"]],[["usize"],["vec",["usize"]]]]],[11,"set_capacity","","Set the `capacity` of the ConfusionMatrix",31,[[["self"],["option",["usize"]],["usize"]]]],[11,"samples","","Return all collected samples.",31,[[["self"]],["vecdeque"]]],[11,"accuracy","","Return the accuracy of the collected predictions.",31,[[["self"]],["accuracy"]]],[11,"correct","","Returns if the prediction is equal to the expected target.",32,[[["self"]],["bool"]]],[0,"regression_evaluator","juice::solver","Set of Evaluators for Regression Problems",null,null],[3,"RegressionEvaluator","juice::solver::regression_evaluator","Sampled Evaluator for Regression Problems",null,null],[3,"Sample","","A single prediction sample.",null,null],[3,"MeanSquaredErrorAccuracy","","Provides loss calculated by Mean Squared Error for sampled…",null,null],[8,"RegressionLoss","","Trait to show loss & metric for a Regression Evaluator",null,null],[10,"loss","","Loss function to produce metric",33,[[["self"]],["f32"]]],[11,"new","","Create an evaluator for Regression Problems",34,[[["string"],["option",["string"]]],["regressionevaluator"]]],[11,"add_sample","","Add a sample by providing the expected `target` value and…",34,[[["f32"],["self"]]]],[11,"add_samples","","Add a batch of samples.",34,[[["self"]]]],[11,"get_predictions","","Get the predicted value from the output of a network.",34,[[["sharedtensor"],["self"]],[["f32"],["vec",["f32"]]]]],[11,"set_capacity","","Set the `capacity` of the Regression Evaluator",34,[[["self"],["option",["usize"]],["usize"]]]],[11,"samples","","Return all collected samples.",34,[[["self"]],["vecdeque"]]],[11,"accuracy","","Return the accuracy of the collected predictions.",34,[[["self"]]]],[8,"ISolver","juice::solver","Implementation of a specific Solver.",null,null],[11,"init","","Initialize the solver, setting up any network related data.",35,[[["self"],["layer"]]]],[10,"compute_update","","Update the weights of the net with part of the gradient.",35,[[["usize"],["self"],["solverconfig"],["layer"]]]],[10,"backend","","Returns the backend used by the solver.",35,[[["self"]],["solverb"]]],[11,"from_config","","Create Solver from [SolverConfig][1] [1]:…",25,[[["rc"],["solverconfig"],["rc"]],["solver"]]],[11,"train_minibatch","","Train the network with one minibatch",25,[[["self"],["arclock",["sharedtensor"]],["sharedtensor",["f32"]]],[["arclock",["sharedtensor"]],["sharedtensor",["f32"]]]]],[11,"network","","Returns the network trained by the solver.",25,[[["self"]],["layer"]]],[11,"mut_network","","Returns the network trained by the solver.",25,[[["self"]],["layer"]]],[11,"get_learning_rate","","Return the learning rate for a supplied iteration.",26,[[["self"],["usize"]],["f32"]]],[11,"with_config","","Create a Solver of the specified kind with the supplied…",27,[[["f32"],["ibackend"],["rc"],["solverops",["f32"]],["self"],["solverconfig"]],[["box",["isolver"]],["isolver"]]]],[11,"with_config","","Create a Solver of the specified kind with the supplied…",28,[[["f32"],["ibackend"],["rc"],["solverops",["f32"]],["self"],["solverconfig"]],[["box",["isolver"]],["isolver"]]]],[0,"solvers","juice","Provides the trainers for the Layers.",null,null],[0,"sgd","juice::solvers","Provides ISolver implementations based on [Stochastic…",null,null],[0,"momentum","juice::solvers::sgd","A [Stochastic Gradient Descent with Momentum][1] [1]:…",null,null],[3,"Momentum","juice::solvers::sgd::momentum","Stochastic Gradient Descent with Momentum.",null,null],[11,"new","","Create a new SGD Momentum solver.",36,[[["rc"]],["momentum"]]],[0,"weight","juice","Provides configuration of weights and their initialization.",null,null],[3,"WeightConfig","juice::weight","Specifies training configuration for a weight blob.",null,null],[12,"name","","The name of the weight blob -- useful for sharing weights…",37,null],[12,"share_mode","","Whether to require shared weights to have the same shape,…",37,null],[12,"lr_mult","","The multiplier on the global learning rate for this…",37,null],[12,"decay_mult","","The multiplier on the global weight decay for this…",37,null],[12,"filler","","The filler that initializes the weights in the weight blob.",37,null],[4,"DimCheckMode","","Enum for specifing the shared weights behaviour",null,null],[13,"Strict","","Strict requires that shapes match.",38,null],[13,"Permissive","","Permissive requires only the count of weights to match.",38,null],[4,"FillerType","","Enum for specifing the type of Filler.",null,null],[13,"Constant","","Fills the weight blob with a constant `value` (all values…",39,null],[12,"value","juice::weight::FillerType","The value that will be used to fill the blob.",39,null],[13,"Glorot","juice::weight","Fills the weight blobs based on the paper:",39,null],[12,"input_size","juice::weight::FillerType","Number of input nodes for each output.",39,null],[12,"output_size","","Number of output nodes for each input.",39,null],[11,"check_dimensions","juice::weight","Checks dimensions of two blobs according to the…",37,[[["string"],["sharedtensor"],["self"]],[["result",["string"]],["string"]]]],[11,"lr_mult","","The multiplier on the global learning rate for this weight…",37,[[["self"]],["f32"]]],[11,"decay_mult","","The multiplier on the global weight decay for this weight…",37,[[["self"]],["f32"]]],[11,"fill","","Uses a filler as specified by this FillerType to fill the…",39,[[["sharedtensor"],["self"]]]],[11,"fill_constant","","Directly use the Constant Filler.",39,[[["f32"],["sharedtensor"]]]],[11,"fill_glorot","","Directly use the Glorot Filler.",39,[[["sharedtensor"],["usize"]]]],[0,"util","juice","Provides common utility functions",null,null],[5,"native_backend","juice::util","Create a simple native backend.",null,[[],[["backend",["native"]],["native"]]]],[5,"write_to_memory","","Write into a native Coaster Memory.",null,[[["flatbox"]]]],[5,"write_to_memory_offset","","Write into a native Coaster Memory with a offset.",null,[[["usize"],["flatbox"]]]],[5,"write_batch_sample","","Write the `i`th sample of a batch into a SharedTensor.",null,[[["sharedtensor"],["usize"]]]],[5,"native_scalar","","Create a Coaster SharedTensor for a scalar value.",null,[[["copy"],["numcast"]],[["sharedtensor"],["copy"],["numcast"]]]],[5,"cast_vec_usize_to_i32","","Casts a Vec to as Vec",null,[[["usize"],["vec",["usize"]]],[["i32"],["vec",["i32"]]]]],[6,"ArcLock","","Shared Lock used for our tensors",null,null],[8,"Axpby","","Extends IBlas with Axpby",null,null],[11,"axpby","","Performs the operation y := ax + by .",40,[[["sharedtensor"],["self"],["sharedtensor"]],[["result",["error"]],["error"]]]],[8,"SolverOps","","Encapsulates all traits required by Solvers.",null,null],[8,"LayerOps","","Encapsulates all traits used in Layers.",null,null],[14,"impl_ilayer_activation","juice","macro helper to implement activation trait TODO see common",null,null],[14,"impl_ilayer_common","","macro to implement ilayer common TODO use Some(1) as a…",null,null],[14,"impl_ilayer_loss","","macro helper for default loss",null,null],[14,"impl_isolver_sgd","","Implement [ISolver][1] for [SGD solvers][2]. [1]:…",null,null],[11,"from","juice::layer","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","juice::layers::activation::relu","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","juice::layers::activation::sigmoid","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","juice::layers::activation::tanh","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","juice::layers::common::convolution","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","juice::layers::common::rnn","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","juice::layers::common::linear","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","juice::layers::common::log_softmax","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","juice::layers::common::pooling","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","juice::layers::common::softmax","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","juice::layers::common::dropout","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","juice::layers::loss::negative_log_likelihood","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","juice::layers::loss::mean_squared_error","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","juice::layers::utility::flatten","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","juice::layers::utility::reshape","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","juice::layers::container::sequential","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","juice::solver","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","juice::solver::confusion_matrix","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","juice::solver::regression_evaluator","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","juice::solvers::sgd::momentum","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","juice::weight","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"exact_num_output_blobs","juice::layers::activation::relu","",41,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",41,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"compute_in_place","","",41,[[["self"]],["bool"]]],[11,"reshape","","",41,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","juice::layers::activation::sigmoid","",42,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",42,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"compute_in_place","","",42,[[["self"]],["bool"]]],[11,"reshape","","",42,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","juice::layers::activation::tanh","",43,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",43,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"compute_in_place","","",43,[[["self"]],["bool"]]],[11,"reshape","","",43,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","juice::layers::common::convolution","",8,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",8,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"auto_weight_blobs","","",8,[[["self"]],["bool"]]],[11,"reshape","","",8,[[["rc"],["self"],["vec"]]]],[11,"resize_shared_workspace","","",8,[[["option",["arclock"]],["rc"],["self"],["arclock",["sharedtensor"]]],[["option",["arclock"]],["arclock",["sharedtensor"]]]]],[11,"exact_num_output_blobs","juice::layers::common::rnn","",10,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",10,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"auto_weight_blobs","","",10,[[["self"]],["bool"]]],[11,"reshape","","",10,[[["rc"],["self"],["vec"]]]],[11,"resize_shared_workspace","","",10,[[["option",["arclock"]],["rc"],["self"],["arclock",["sharedtensor"]]],[["option",["arclock"]],["arclock",["sharedtensor"]]]]],[11,"auto_weight_blobs","juice::layers::common::linear","",12,[[["self"]],["bool"]]],[11,"reshape","","",12,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","","",12,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"reshape","juice::layers::common::log_softmax","",44,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","juice::layers::common::pooling","",15,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",15,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"reshape","","",15,[[["rc"],["self"],["vec"]]]],[11,"reshape","juice::layers::common::softmax","",45,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","juice::layers::common::dropout","",17,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",17,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"reshape","","",17,[[["rc"],["self"],["vec"]]]],[11,"exact_num_output_blobs","juice::layers::loss::negative_log_likelihood","",20,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"exact_num_input_blobs","","",20,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"auto_output_blobs","","",20,[[["self"]],["bool"]]],[11,"loss_weight","","",20,[[["self"],["usize"]],[["f32"],["option",["f32"]]]]],[11,"sync_native","","",20,[[["self"]],["bool"]]],[11,"reshape","","",20,[[["rc"],["self"],["vec"]]]],[11,"reshape","juice::layers::loss::mean_squared_error","",46,[[["rc"],["self"],["vec"]]]],[11,"compute_in_place","juice::layers::utility::reshape","",22,[[["self"]],["bool"]]],[11,"auto_output_blobs","","",22,[[["self"]],["bool"]]],[11,"reshape","","",22,[[["rc"],["self"],["vec"]]]],[11,"is_container","juice::layers::container::sequential","",24,[[["self"]],["bool"]]],[11,"inputs_data","","",24,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"inputs_gradients","","",24,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"outputs_data","","",24,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"outputs_gradients","","",24,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"learnable_weights","","",24,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"learnable_weights_gradients","","",24,[[["self"]],[["option",["vec"]],["vec",["arclock"]]]]],[11,"learnable_weights_names","","",24,[[["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"resize_shared_workspace","","",24,[[["option",["arclock"]],["rc"],["self"],["arclock",["sharedtensor"]]],[["option",["arclock"]],["arclock",["sharedtensor"]]]]],[11,"forward","","",24,[[["b"],["self"]]]],[11,"backward_input","","",24,[[["b"],["self"]]]],[11,"backward_parameters","","",24,[[["b"],["self"]]]],[11,"compute_output","juice::layers::activation::relu","",41,[[["b"],["self"]]]],[11,"compute_output","juice::layers::activation::sigmoid","",42,[[["b"],["self"]]]],[11,"compute_output","juice::layers::activation::tanh","",43,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::convolution","",8,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::rnn","",10,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::linear","Basically, x has the shape (k, n) where k is the batch…",12,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::log_softmax","",44,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::pooling","",15,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::softmax","",45,[[["b"],["self"]]]],[11,"compute_output","juice::layers::common::dropout","",17,[[["b"],["self"]]]],[11,"compute_output","juice::layers::loss::negative_log_likelihood","",20,[[["b"],["self"]]]],[11,"compute_output","juice::layers::loss::mean_squared_error","",46,[[["b"],["self"]]]],[11,"compute_output","juice::layers::utility::reshape","",22,[[["b"],["self"]]]],[11,"compute_output","juice::layers::container::sequential","",24,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::activation::relu","",41,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::activation::sigmoid","",42,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::activation::tanh","",43,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::convolution","",8,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::rnn","",10,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::linear","Since we have row vectors instead of columns, xW^T =…",12,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::log_softmax","",44,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::pooling","",15,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::softmax","",45,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::common::dropout","",17,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::loss::negative_log_likelihood","",20,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::loss::mean_squared_error","",46,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::utility::reshape","",22,[[["b"],["self"]]]],[11,"compute_input_gradient","juice::layers::container::sequential","",24,[[["b"],["self"]]]],[11,"compute_parameters_gradient","juice::layers::common::convolution","",8,[[["b"],["self"]]]],[11,"compute_parameters_gradient","juice::layers::common::rnn","",10,[[["b"],["self"]]]],[11,"compute_parameters_gradient","juice::layers::common::linear","",12,[[["b"],["self"]]]],[11,"compute_parameters_gradient","juice::layers::container::sequential","",24,[[["b"],["self"]]]],[11,"num_spatial_dims","juice::layers::common::convolution","Calculates the number of spatial dimensions for the…",8,[[["self"]],["usize"]]],[11,"calculate_output_shape","","",8,[[["self"]],[["usize"],["vec",["usize"]]]]],[11,"filter_shape","","",8,[[["self"]]]],[11,"stride","","",8,[[["self"]]]],[11,"padding","","",8,[[["self"]]]],[11,"num_spatial_dims","juice::layers::common::pooling","Calculates the number of spatial dimensions for the…",15,[[["self"]],["usize"]]],[11,"calculate_output_shape","","",15,[[["self"]],[["usize"],["vec",["usize"]]]]],[11,"filter_shape","","",15,[[["self"]]]],[11,"stride","","",15,[[["self"]]]],[11,"padding","","",15,[[["self"]]]],[11,"loss","juice::solver::regression_evaluator","",50,[[["self"]],["f32"]]],[11,"init","juice::solvers::sgd::momentum","Initialize the SGD Momentum solver, allocating memory for…",36,[[["self"],["layer"]]]],[11,"compute_update","","",36,[[["usize"],["self"],["solverconfig"],["layer"]]]],[11,"backend","","",36,[[["self"]],["solverb"]]],[11,"into","juice::layers::common::convolution","",7,[[],["layertype"]]],[11,"into","juice::layers::common::rnn","",9,[[],["layertype"]]],[11,"into","juice::layers::common::linear","",11,[[],["layertype"]]],[11,"into","juice::layers::common::pooling","",13,[[],["layertype"]]],[11,"into","juice::layers::common::dropout","",16,[[],["layertype"]]],[11,"into","juice::layers::loss::negative_log_likelihood","",19,[[],["layertype"]]],[11,"into","juice::layers::utility::reshape","",21,[[],["layertype"]]],[11,"into","juice::layers::container::sequential","",23,[[],["layertype"]]],[11,"clone","juice::layer","",1,[[["self"]],["layerconfig"]]],[11,"clone","","",2,[[["self"]],["layertype"]]],[11,"clone","juice::layers::activation::relu","",41,[[["self"]],["relu"]]],[11,"clone","juice::layers::activation::sigmoid","",42,[[["self"]],["sigmoid"]]],[11,"clone","juice::layers::activation::tanh","",43,[[["self"]],["tanh"]]],[11,"clone","juice::layers::common::convolution","",8,[[["self"]],["convolution"]]],[11,"clone","","",7,[[["self"]],["convolutionconfig"]]],[11,"clone","juice::layers::common::rnn","",10,[[["self"]],["rnn"]]],[11,"clone","","",9,[[["self"]],["rnnconfig"]]],[11,"clone","juice::layers::common::linear","",11,[[["self"]],["linearconfig"]]],[11,"clone","juice::layers::common::log_softmax","",44,[[["self"]],["logsoftmax"]]],[11,"clone","juice::layers::common::pooling","",15,[[["self"]],["pooling"]]],[11,"clone","","",13,[[["self"]],["poolingconfig"]]],[11,"clone","","",14,[[["self"]],["poolingmode"]]],[11,"clone","juice::layers::common::softmax","",45,[[["self"]],["softmax"]]],[11,"clone","juice::layers::common::dropout","",17,[[["self"]],["dropout"]]],[11,"clone","","",16,[[["self"]],["dropoutconfig"]]],[11,"clone","juice::layers::loss::negative_log_likelihood","",20,[[["self"]],["negativeloglikelihood"]]],[11,"clone","","",19,[[["self"]],["negativeloglikelihoodconfig"]]],[11,"clone","juice::layers::loss::mean_squared_error","",46,[[["self"]],["meansquarederror"]]],[11,"clone","juice::layers::utility::flatten","",47,[[["self"]],["flatten"]]],[11,"clone","juice::layers::utility::reshape","",22,[[["self"]],["reshape"]]],[11,"clone","","",21,[[["self"]],["reshapeconfig"]]],[11,"clone","juice::layers::container::sequential","",23,[[["self"]],["sequentialconfig"]]],[11,"clone","juice::solver::confusion_matrix","",32,[[["self"]],["sample"]]],[11,"clone","","",48,[[["self"]],["accuracy"]]],[11,"clone","juice::solver::regression_evaluator","",49,[[["self"]],["sample"]]],[11,"clone","","",50,[[["self"]],["meansquarederroraccuracy"]]],[11,"clone","juice::solver","",26,[[["self"]],["solverconfig"]]],[11,"clone","","",27,[[["self"]],["solverkind"]]],[11,"clone","","",28,[[["self"]],["sgdkind"]]],[11,"clone","","",29,[[["self"]],["lrpolicy"]]],[11,"clone","","",30,[[["self"]],["regularizationmethod"]]],[11,"clone","juice::weight","",37,[[["self"]],["weightconfig"]]],[11,"clone","","",38,[[["self"]],["dimcheckmode"]]],[11,"clone","","",39,[[["self"]],["fillertype"]]],[11,"default","juice::layers::common::linear","",12,[[],["linear"]]],[11,"default","juice::layers::common::log_softmax","",44,[[],["logsoftmax"]]],[11,"default","juice::layers::common::softmax","",45,[[],["softmax"]]],[11,"default","juice::layers::common::dropout","",16,[[],["dropoutconfig"]]],[11,"default","juice::layers::loss::mean_squared_error","",46,[[],["meansquarederror"]]],[11,"default","juice::layers::container::sequential","",23,[[],["sequentialconfig"]]],[11,"default","juice::solver","",26,[[],["solverconfig"]]],[11,"default","juice::weight","",37,[[],["weightconfig"]]],[11,"fmt","juice::layer","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::activation::relu","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::activation::sigmoid","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::activation::tanh","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::convolution","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::rnn","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::linear","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::log_softmax","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::pooling","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::softmax","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::common::dropout","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::loss::negative_log_likelihood","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::loss::mean_squared_error","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::utility::flatten","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::utility::reshape","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::layers::container::sequential","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::solver::confusion_matrix","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::solver::regression_evaluator","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::solver","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::solvers::sgd::momentum","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::weight","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::solver::confusion_matrix","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","juice::solver::regression_evaluator","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Layer"],[3,"LayerConfig"],[4,"LayerType"],[8,"ILayer"],[8,"ComputeOutput"],[8,"ComputeInputGradient"],[8,"ComputeParametersGradient"],[3,"ConvolutionConfig"],[3,"Convolution"],[3,"RnnConfig"],[3,"Rnn"],[3,"LinearConfig"],[3,"Linear"],[3,"PoolingConfig"],[4,"PoolingMode"],[3,"Pooling"],[3,"DropoutConfig"],[3,"Dropout"],[8,"FilterLayer"],[3,"NegativeLogLikelihoodConfig"],[3,"NegativeLogLikelihood"],[3,"ReshapeConfig"],[3,"Reshape"],[3,"SequentialConfig"],[3,"Sequential"],[3,"Solver"],[3,"SolverConfig"],[4,"SolverKind"],[4,"SGDKind"],[4,"LRPolicy"],[4,"RegularizationMethod"],[3,"ConfusionMatrix"],[3,"Sample"],[8,"RegressionLoss"],[3,"RegressionEvaluator"],[8,"ISolver"],[3,"Momentum"],[3,"WeightConfig"],[4,"DimCheckMode"],[4,"FillerType"],[8,"Axpby"],[3,"ReLU"],[3,"Sigmoid"],[3,"TanH"],[3,"LogSoftmax"],[3,"Softmax"],[3,"MeanSquaredError"],[3,"Flatten"],[3,"Accuracy"],[3,"Sample"],[3,"MeanSquaredErrorAccuracy"]]};
searchIndex["juice_examples"] = {"doc":"","i":[[3,"Args","juice_examples","",null,null],[12,"arg_dataset_name","","",0,null],[12,"arg_model_name","","",0,null],[12,"arg_batch_size","","",0,null],[12,"arg_learning_rate","","",0,null],[12,"arg_momentum","","",0,null],[12,"cmd_load_dataset","","",0,null],[12,"cmd_mnist","","",0,null],[12,"cmd_fashion","","",0,null],[12,"cmd_mackey_glass","","",0,null],[5,"download_dataset","","",null,[[["str"]]]],[5,"download_datasets","","",null,[[["str"]]]],[5,"unzip_datasets","","",null,[[]]],[5,"main","","",null,[[]]],[5,"get_mnist_iter","","",null,[[["usize"]]]],[5,"run_mnist","","",null,[[["f32"],["string"],["usize"],["option",["usize"]],["option",["f32"]],["option",["string"]]]]],[5,"run_fashion","","",null,[[["f32"],["string"],["usize"],["option",["usize"]],["option",["f32"]],["option",["string"]]]]],[5,"run_mackey_glass","","",null,[[["f32"],["string"],["usize"],["option",["usize"]],["option",["f32"]],["option",["string"]]]]],[5,"get_regr_iter","","",null,[[]]],[5,"get_packed_regr_iter","","",null,[[]]],[17,"MAIN_USAGE","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"p":[[3,"Args"]]};
searchIndex["rcublas"] = {"doc":"","i":[[3,"Context","rcublas","Provides a the low-level cuBLAS context.",null,null],[3,"API","","Defines the cuBLAS API.",null,null],[0,"api","","",null,null],[3,"Context","rcublas::api","Provides a the low-level cuBLAS context.",null,null],[4,"Operation","","",null,null],[13,"NoTrans","","",0,null],[13,"Trans","","",0,null],[13,"ConjTrans","","",0,null],[4,"PointerMode","","",null,null],[13,"Host","","",1,null],[13,"Device","","",1,null],[11,"new","rcublas","Create a new cuBLAS Context by calling the low-level API.",2,[[],[["result",["context","error"]],["error"],["context"]]]],[11,"from_c","","Create a new cuBLAS Context from its C type.",2,[[["cublashandle_t"]],["context"]]],[11,"id_c","","Returns the cuBLAS Context as its C type.",2,[[["self"]],["cublashandle_t"]]],[11,"pointer_mode","","",2,[[["self"]],[["error"],["pointermode"],["result",["pointermode","error"]]]]],[11,"set_pointer_mode","","",2,[[["self"],["pointermode"]],[["error"],["result",["error"]]]]],[11,"asum","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"axpy","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"copy","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"dot","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"nrm2","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"scal","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"swap","","",2,[[["option",["i32"]],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"gemm","","",2,[[["operation"],["i32"],["self"]],[["error"],["result",["error"]]]]],[11,"asum","","Compute the sum of magnitudes of the provided vector…",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"axpy","","Computes a vector-scalar product and adds the result to a…",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"copy","","Copies a vector into another vector.",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"dot","","TODO: DOC",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"nrm2","","TODO: DOC",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"scal","","TODO: DOC",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"swap","","TODO: DOC",3,[[["option",["i32"]],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"gemm","","Performs a general matrix-matrix multiplication.",3,[[["operation"],["i32"],["context"]],[["error"],["result",["error"]]]]],[11,"create","","Create a new cuBLAS context, allocating resources on the…",3,[[],[["result",["context","error"]],["error"],["context"]]]],[11,"destroy","","Destroys the cuBLAS context, freeing its resources.",3,[[["context"]],[["error"],["result",["error"]]]]],[11,"get_pointer_mode","","Retrieve the pointer mode for a given cuBLAS context.",3,[[["context"]],[["error"],["pointermode"],["result",["pointermode","error"]]]]],[11,"set_pointer_mode","","Set the pointer mode for a given cuBLAS context.",3,[[["context"],["pointermode"]],[["error"],["result",["error"]]]]],[11,"from_c","rcublas::api","",1,[[["cublaspointermode_t"]],["pointermode"]]],[11,"as_c","","",1,[[],["cublaspointermode_t"]]],[11,"from_c","","",0,[[["cublasoperation_t"]],["operation"]]],[11,"as_c","","",0,[[],["cublasoperation_t"]]],[0,"error","rcublas","Provides Rust Errors for every cuBLAS status.",null,null],[4,"Error","rcublas::error","Defines cuBLAS errors.",null,null],[13,"NotInitialized","","Failure with cuBLAS initialization.",4,null],[13,"AllocFailed","","Failure with allocation.",4,null],[13,"InternalError","","Failure with cuDNN.",4,null],[13,"InvalidValue","","Failure with provided value.",4,null],[13,"ArchMismatch","","Failure with the hardware architecture.",4,null],[13,"MappingError","","Failure with memory access or internal error/bug.",4,null],[13,"ExecutionFailed","","Failure with Kernel execution.",4,null],[13,"NotSupported","","Failure with an unsupported request.",4,null],[13,"LicenseError","","Failure CUDA License.",4,null],[13,"Unknown","","Failure",4,null],[11,"from","rcublas","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rcublas::api","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","rcublas::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"drop","rcublas","",2,[[["self"]]]],[11,"clone","","",3,[[["self"]],["api"]]],[11,"clone","","",2,[[["self"]],["context"]]],[11,"clone","rcublas::api","",1,[[["self"]],["pointermode"]]],[11,"clone","","",0,[[["self"]],["operation"]]],[11,"clone","rcublas::error","",4,[[["self"]],["error"]]],[11,"eq","rcublas::api","",1,[[["self"],["pointermode"]],["bool"]]],[11,"eq","","",0,[[["operation"],["self"]],["bool"]]],[11,"fmt","rcublas","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rcublas::api","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rcublas::error","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"description","","",4,[[["self"]],["str"]]],[11,"cause","","",4,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"Operation"],[4,"PointerMode"],[3,"Context"],[3,"API"],[4,"Error"]]};
searchIndex["rcublas_sys"] = {"doc":"","i":[[3,"Struct_float2","rcublas_sys","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"Struct_double2","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"Struct_Unnamed6","","",null,null],[12,"x","","",2,null],[4,"Struct_CUstream_st","","",null,null],[4,"cublasStatus_t","","",null,null],[13,"CUBLAS_STATUS_SUCCESS","","",3,null],[13,"CUBLAS_STATUS_NOT_INITIALIZED","","",3,null],[13,"CUBLAS_STATUS_ALLOC_FAILED","","",3,null],[13,"CUBLAS_STATUS_INVALID_VALUE","","",3,null],[13,"CUBLAS_STATUS_ARCH_MISMATCH","","",3,null],[13,"CUBLAS_STATUS_MAPPING_ERROR","","",3,null],[13,"CUBLAS_STATUS_EXECUTION_FAILED","","",3,null],[13,"CUBLAS_STATUS_INTERNAL_ERROR","","",3,null],[13,"CUBLAS_STATUS_NOT_SUPPORTED","","",3,null],[13,"CUBLAS_STATUS_LICENSE_ERROR","","",3,null],[4,"cublasFillMode_t","","",null,null],[13,"CUBLAS_FILL_MODE_LOWER","","",4,null],[13,"CUBLAS_FILL_MODE_UPPER","","",4,null],[4,"cublasDiagType_t","","",null,null],[13,"CUBLAS_DIAG_NON_UNIT","","",5,null],[13,"CUBLAS_DIAG_UNIT","","",5,null],[4,"cublasSideMode_t","","",null,null],[13,"CUBLAS_SIDE_LEFT","","",6,null],[13,"CUBLAS_SIDE_RIGHT","","",6,null],[4,"cublasOperation_t","","",null,null],[13,"CUBLAS_OP_N","","",7,null],[13,"CUBLAS_OP_T","","",7,null],[13,"CUBLAS_OP_C","","",7,null],[4,"cublasPointerMode_t","","",null,null],[13,"CUBLAS_POINTER_MODE_HOST","","",8,null],[13,"CUBLAS_POINTER_MODE_DEVICE","","",8,null],[4,"cublasAtomicsMode_t","","",null,null],[13,"CUBLAS_ATOMICS_NOT_ALLOWED","","",9,null],[13,"CUBLAS_ATOMICS_ALLOWED","","",9,null],[4,"cublasDataType_t","","",null,null],[13,"CUBLAS_DATA_FLOAT","","",10,null],[13,"CUBLAS_DATA_DOUBLE","","",10,null],[13,"CUBLAS_DATA_HALF","","",10,null],[13,"CUBLAS_DATA_INT8","","",10,null],[4,"Enum_Unnamed1","","",null,null],[13,"CUBLAS_STATUS_SUCCESS","","",3,null],[13,"CUBLAS_STATUS_NOT_INITIALIZED","","",3,null],[13,"CUBLAS_STATUS_ALLOC_FAILED","","",3,null],[13,"CUBLAS_STATUS_INVALID_VALUE","","",3,null],[13,"CUBLAS_STATUS_ARCH_MISMATCH","","",3,null],[13,"CUBLAS_STATUS_MAPPING_ERROR","","",3,null],[13,"CUBLAS_STATUS_EXECUTION_FAILED","","",3,null],[13,"CUBLAS_STATUS_INTERNAL_ERROR","","",3,null],[13,"CUBLAS_STATUS_NOT_SUPPORTED","","",3,null],[13,"CUBLAS_STATUS_LICENSE_ERROR","","",3,null],[4,"Enum_Unnamed2","","",null,null],[13,"CUBLAS_FILL_MODE_LOWER","","",4,null],[13,"CUBLAS_FILL_MODE_UPPER","","",4,null],[4,"Enum_Unnamed3","","",null,null],[13,"CUBLAS_DIAG_NON_UNIT","","",5,null],[13,"CUBLAS_DIAG_UNIT","","",5,null],[4,"Enum_Unnamed4","","",null,null],[13,"CUBLAS_SIDE_LEFT","","",6,null],[13,"CUBLAS_SIDE_RIGHT","","",6,null],[4,"Enum_Unnamed5","","",null,null],[13,"CUBLAS_OP_N","","",7,null],[13,"CUBLAS_OP_T","","",7,null],[13,"CUBLAS_OP_C","","",7,null],[4,"Enum_Unnamed6","","",null,null],[13,"CUBLAS_POINTER_MODE_HOST","","",8,null],[13,"CUBLAS_POINTER_MODE_DEVICE","","",8,null],[4,"Enum_Unnamed7","","",null,null],[13,"CUBLAS_ATOMICS_NOT_ALLOWED","","",9,null],[13,"CUBLAS_ATOMICS_ALLOWED","","",9,null],[4,"Enum_Unnamed8","","",null,null],[13,"CUBLAS_DATA_FLOAT","","",10,null],[13,"CUBLAS_DATA_DOUBLE","","",10,null],[13,"CUBLAS_DATA_HALF","","",10,null],[13,"CUBLAS_DATA_INT8","","",10,null],[4,"Struct_cublasContext","","",null,null],[5,"cublasCreate_v2","","",null,null],[5,"cublasDestroy_v2","","",null,null],[5,"cublasGetVersion_v2","","",null,null],[5,"cublasSetStream_v2","","",null,null],[5,"cublasGetStream_v2","","",null,null],[5,"cublasGetPointerMode_v2","","",null,null],[5,"cublasSetPointerMode_v2","","",null,null],[5,"cublasGetAtomicsMode","","",null,null],[5,"cublasSetAtomicsMode","","",null,null],[5,"cublasSetVector","","",null,null],[5,"cublasGetVector","","",null,null],[5,"cublasSetMatrix","","",null,null],[5,"cublasGetMatrix","","",null,null],[5,"cublasSetVectorAsync","","",null,null],[5,"cublasGetVectorAsync","","",null,null],[5,"cublasSetMatrixAsync","","",null,null],[5,"cublasGetMatrixAsync","","",null,null],[5,"cublasXerbla","","",null,null],[5,"cublasSnrm2_v2","","",null,null],[5,"cublasDnrm2_v2","","",null,null],[5,"cublasScnrm2_v2","","",null,null],[5,"cublasDznrm2_v2","","",null,null],[5,"cublasSdot_v2","","",null,null],[5,"cublasDdot_v2","","",null,null],[5,"cublasCdotu_v2","","",null,null],[5,"cublasCdotc_v2","","",null,null],[5,"cublasZdotu_v2","","",null,null],[5,"cublasZdotc_v2","","",null,null],[5,"cublasSscal_v2","","",null,null],[5,"cublasDscal_v2","","",null,null],[5,"cublasCscal_v2","","",null,null],[5,"cublasCsscal_v2","","",null,null],[5,"cublasZscal_v2","","",null,null],[5,"cublasZdscal_v2","","",null,null],[5,"cublasSaxpy_v2","","",null,null],[5,"cublasDaxpy_v2","","",null,null],[5,"cublasCaxpy_v2","","",null,null],[5,"cublasZaxpy_v2","","",null,null],[5,"cublasScopy_v2","","",null,null],[5,"cublasDcopy_v2","","",null,null],[5,"cublasCcopy_v2","","",null,null],[5,"cublasZcopy_v2","","",null,null],[5,"cublasSswap_v2","","",null,null],[5,"cublasDswap_v2","","",null,null],[5,"cublasCswap_v2","","",null,null],[5,"cublasZswap_v2","","",null,null],[5,"cublasIsamax_v2","","",null,null],[5,"cublasIdamax_v2","","",null,null],[5,"cublasIcamax_v2","","",null,null],[5,"cublasIzamax_v2","","",null,null],[5,"cublasIsamin_v2","","",null,null],[5,"cublasIdamin_v2","","",null,null],[5,"cublasIcamin_v2","","",null,null],[5,"cublasIzamin_v2","","",null,null],[5,"cublasSasum_v2","","",null,null],[5,"cublasDasum_v2","","",null,null],[5,"cublasScasum_v2","","",null,null],[5,"cublasDzasum_v2","","",null,null],[5,"cublasSrot_v2","","",null,null],[5,"cublasDrot_v2","","",null,null],[5,"cublasCrot_v2","","",null,null],[5,"cublasCsrot_v2","","",null,null],[5,"cublasZrot_v2","","",null,null],[5,"cublasZdrot_v2","","",null,null],[5,"cublasSrotg_v2","","",null,null],[5,"cublasDrotg_v2","","",null,null],[5,"cublasCrotg_v2","","",null,null],[5,"cublasZrotg_v2","","",null,null],[5,"cublasSrotm_v2","","",null,null],[5,"cublasDrotm_v2","","",null,null],[5,"cublasSrotmg_v2","","",null,null],[5,"cublasDrotmg_v2","","",null,null],[5,"cublasSgemv_v2","","",null,null],[5,"cublasDgemv_v2","","",null,null],[5,"cublasCgemv_v2","","",null,null],[5,"cublasZgemv_v2","","",null,null],[5,"cublasSgbmv_v2","","",null,null],[5,"cublasDgbmv_v2","","",null,null],[5,"cublasCgbmv_v2","","",null,null],[5,"cublasZgbmv_v2","","",null,null],[5,"cublasStrmv_v2","","",null,null],[5,"cublasDtrmv_v2","","",null,null],[5,"cublasCtrmv_v2","","",null,null],[5,"cublasZtrmv_v2","","",null,null],[5,"cublasStbmv_v2","","",null,null],[5,"cublasDtbmv_v2","","",null,null],[5,"cublasCtbmv_v2","","",null,null],[5,"cublasZtbmv_v2","","",null,null],[5,"cublasStpmv_v2","","",null,null],[5,"cublasDtpmv_v2","","",null,null],[5,"cublasCtpmv_v2","","",null,null],[5,"cublasZtpmv_v2","","",null,null],[5,"cublasStrsv_v2","","",null,null],[5,"cublasDtrsv_v2","","",null,null],[5,"cublasCtrsv_v2","","",null,null],[5,"cublasZtrsv_v2","","",null,null],[5,"cublasStpsv_v2","","",null,null],[5,"cublasDtpsv_v2","","",null,null],[5,"cublasCtpsv_v2","","",null,null],[5,"cublasZtpsv_v2","","",null,null],[5,"cublasStbsv_v2","","",null,null],[5,"cublasDtbsv_v2","","",null,null],[5,"cublasCtbsv_v2","","",null,null],[5,"cublasZtbsv_v2","","",null,null],[5,"cublasSsymv_v2","","",null,null],[5,"cublasDsymv_v2","","",null,null],[5,"cublasCsymv_v2","","",null,null],[5,"cublasZsymv_v2","","",null,null],[5,"cublasChemv_v2","","",null,null],[5,"cublasZhemv_v2","","",null,null],[5,"cublasSsbmv_v2","","",null,null],[5,"cublasDsbmv_v2","","",null,null],[5,"cublasChbmv_v2","","",null,null],[5,"cublasZhbmv_v2","","",null,null],[5,"cublasSspmv_v2","","",null,null],[5,"cublasDspmv_v2","","",null,null],[5,"cublasChpmv_v2","","",null,null],[5,"cublasZhpmv_v2","","",null,null],[5,"cublasSger_v2","","",null,null],[5,"cublasDger_v2","","",null,null],[5,"cublasCgeru_v2","","",null,null],[5,"cublasCgerc_v2","","",null,null],[5,"cublasZgeru_v2","","",null,null],[5,"cublasZgerc_v2","","",null,null],[5,"cublasSsyr_v2","","",null,null],[5,"cublasDsyr_v2","","",null,null],[5,"cublasCsyr_v2","","",null,null],[5,"cublasZsyr_v2","","",null,null],[5,"cublasCher_v2","","",null,null],[5,"cublasZher_v2","","",null,null],[5,"cublasSspr_v2","","",null,null],[5,"cublasDspr_v2","","",null,null],[5,"cublasChpr_v2","","",null,null],[5,"cublasZhpr_v2","","",null,null],[5,"cublasSsyr2_v2","","",null,null],[5,"cublasDsyr2_v2","","",null,null],[5,"cublasCsyr2_v2","","",null,null],[5,"cublasZsyr2_v2","","",null,null],[5,"cublasCher2_v2","","",null,null],[5,"cublasZher2_v2","","",null,null],[5,"cublasSspr2_v2","","",null,null],[5,"cublasDspr2_v2","","",null,null],[5,"cublasChpr2_v2","","",null,null],[5,"cublasZhpr2_v2","","",null,null],[5,"cublasSgemm_v2","","",null,null],[5,"cublasDgemm_v2","","",null,null],[5,"cublasCgemm_v2","","",null,null],[5,"cublasZgemm_v2","","",null,null],[5,"cublasHgemm","","",null,null],[5,"cublasSgemmEx","","",null,null],[5,"cublasSsyrk_v2","","",null,null],[5,"cublasDsyrk_v2","","",null,null],[5,"cublasCsyrk_v2","","",null,null],[5,"cublasZsyrk_v2","","",null,null],[5,"cublasCherk_v2","","",null,null],[5,"cublasZherk_v2","","",null,null],[5,"cublasSsyr2k_v2","","",null,null],[5,"cublasDsyr2k_v2","","",null,null],[5,"cublasCsyr2k_v2","","",null,null],[5,"cublasZsyr2k_v2","","",null,null],[5,"cublasCher2k_v2","","",null,null],[5,"cublasZher2k_v2","","",null,null],[5,"cublasSsyrkx","","",null,null],[5,"cublasDsyrkx","","",null,null],[5,"cublasCsyrkx","","",null,null],[5,"cublasZsyrkx","","",null,null],[5,"cublasCherkx","","",null,null],[5,"cublasZherkx","","",null,null],[5,"cublasSsymm_v2","","",null,null],[5,"cublasDsymm_v2","","",null,null],[5,"cublasCsymm_v2","","",null,null],[5,"cublasZsymm_v2","","",null,null],[5,"cublasChemm_v2","","",null,null],[5,"cublasZhemm_v2","","",null,null],[5,"cublasStrsm_v2","","",null,null],[5,"cublasDtrsm_v2","","",null,null],[5,"cublasCtrsm_v2","","",null,null],[5,"cublasZtrsm_v2","","",null,null],[5,"cublasStrmm_v2","","",null,null],[5,"cublasDtrmm_v2","","",null,null],[5,"cublasCtrmm_v2","","",null,null],[5,"cublasZtrmm_v2","","",null,null],[5,"cublasSgemmBatched","","",null,null],[5,"cublasDgemmBatched","","",null,null],[5,"cublasCgemmBatched","","",null,null],[5,"cublasZgemmBatched","","",null,null],[5,"cublasSgeam","","",null,null],[5,"cublasDgeam","","",null,null],[5,"cublasCgeam","","",null,null],[5,"cublasZgeam","","",null,null],[5,"cublasSgetrfBatched","","",null,null],[5,"cublasDgetrfBatched","","",null,null],[5,"cublasCgetrfBatched","","",null,null],[5,"cublasZgetrfBatched","","",null,null],[5,"cublasSgetriBatched","","",null,null],[5,"cublasDgetriBatched","","",null,null],[5,"cublasCgetriBatched","","",null,null],[5,"cublasZgetriBatched","","",null,null],[5,"cublasSgetrsBatched","","",null,null],[5,"cublasDgetrsBatched","","",null,null],[5,"cublasCgetrsBatched","","",null,null],[5,"cublasZgetrsBatched","","",null,null],[5,"cublasStrsmBatched","","",null,null],[5,"cublasDtrsmBatched","","",null,null],[5,"cublasCtrsmBatched","","",null,null],[5,"cublasZtrsmBatched","","",null,null],[5,"cublasSmatinvBatched","","",null,null],[5,"cublasDmatinvBatched","","",null,null],[5,"cublasCmatinvBatched","","",null,null],[5,"cublasZmatinvBatched","","",null,null],[5,"cublasSgeqrfBatched","","",null,null],[5,"cublasDgeqrfBatched","","",null,null],[5,"cublasCgeqrfBatched","","",null,null],[5,"cublasZgeqrfBatched","","",null,null],[5,"cublasSgelsBatched","","",null,null],[5,"cublasDgelsBatched","","",null,null],[5,"cublasCgelsBatched","","",null,null],[5,"cublasZgelsBatched","","",null,null],[5,"cublasSdgmm","","",null,null],[5,"cublasDdgmm","","",null,null],[5,"cublasCdgmm","","",null,null],[5,"cublasZdgmm","","",null,null],[5,"cublasStpttr","","",null,null],[5,"cublasDtpttr","","",null,null],[5,"cublasCtpttr","","",null,null],[5,"cublasZtpttr","","",null,null],[5,"cublasStrttp","","",null,null],[5,"cublasDtrttp","","",null,null],[5,"cublasCtrttp","","",null,null],[5,"cublasZtrttp","","",null,null],[6,"size_t","","",null,null],[6,"cuFloatComplex","","",null,null],[6,"cuComplex","","",null,null],[6,"cuDoubleComplex","","",null,null],[6,"cudaStream_t","","",null,null],[6,"float2","","",null,null],[6,"double2","","",null,null],[6,"__half","","",null,null],[6,"cublasHandle_t","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["enum_unnamed1"]]],[11,"clone","","",4,[[["self"]],["enum_unnamed2"]]],[11,"clone","","",5,[[["self"]],["enum_unnamed3"]]],[11,"clone","","",6,[[["self"]],["enum_unnamed4"]]],[11,"clone","","",7,[[["self"]],["enum_unnamed5"]]],[11,"clone","","",8,[[["self"]],["enum_unnamed6"]]],[11,"clone","","",9,[[["self"]],["enum_unnamed7"]]],[11,"clone","","",10,[[["self"]],["enum_unnamed8"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"eq","","",3,[[["enum_unnamed1"],["self"]],["bool"]]],[11,"eq","","",4,[[["enum_unnamed2"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["enum_unnamed3"]],["bool"]]],[11,"eq","","",6,[[["enum_unnamed4"],["self"]],["bool"]]],[11,"eq","","",7,[[["enum_unnamed5"],["self"]],["bool"]]],[11,"eq","","",8,[[["enum_unnamed6"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["enum_unnamed7"]],["bool"]]],[11,"eq","","",10,[[["self"],["enum_unnamed8"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Struct_float2"],[3,"Struct_double2"],[3,"Struct_Unnamed6"],[4,"cublasStatus_t"],[4,"cublasFillMode_t"],[4,"cublasDiagType_t"],[4,"cublasSideMode_t"],[4,"cublasOperation_t"],[4,"cublasPointerMode_t"],[4,"cublasAtomicsMode_t"],[4,"cublasDataType_t"],[4,"Struct_CUstream_st"],[4,"Struct_cublasContext"]]};
searchIndex["rcudnn"] = {"doc":"Provides a safe and convenient wrapper for the [CUDA…","i":[[17,"CUDNN_MAJOR","rcudnn","",null,null],[17,"CUDNN_MINOR","","",null,null],[17,"CUDNN_PATCHLEVEL","","",null,null],[17,"CUDNN_VERSION","","",null,null],[17,"_SAL_VERSION","","",null,null],[17,"__SAL_H_VERSION","","",null,null],[17,"_USE_DECLSPECS_FOR_SAL","","",null,null],[17,"_USE_ATTRIBUTES_FOR_SAL","","",null,null],[17,"_CRT_PACKING","","",null,null],[17,"_HAS_EXCEPTIONS","","",null,null],[17,"CHAR_BIT","","",null,null],[17,"SCHAR_MIN","","",null,null],[17,"SCHAR_MAX","","",null,null],[17,"UCHAR_MAX","","",null,null],[17,"CHAR_MIN","","",null,null],[17,"CHAR_MAX","","",null,null],[17,"MB_LEN_MAX","","",null,null],[17,"SHRT_MIN","","",null,null],[17,"SHRT_MAX","","",null,null],[17,"USHRT_MAX","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"UINT_MAX","","",null,null],[17,"LONG_MIN","","",null,null],[17,"LONG_MAX","","",null,null],[17,"ULONG_MAX","","",null,null],[17,"_ARGMAX","","",null,null],[17,"_CRT_INT_MAX","","",null,null],[17,"_CRT_FUNCTIONS_REQUIRED","","",null,null],[17,"_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE","","",null,null],[17,"_CRT_BUILD_DESKTOP_APP","","",null,null],[17,"__STDC_SECURE_LIB__","","",null,null],[17,"__GOT_SECURE_LIB__","","",null,null],[17,"__STDC_WANT_SECURE_LIB__","","",null,null],[17,"_SECURECRT_FILL_BUFFER_PATTERN","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY","","",null,null],[17,"cudaHostAllocDefault","","",null,null],[17,"cudaHostAllocPortable","","",null,null],[17,"cudaHostAllocMapped","","",null,null],[17,"cudaHostAllocWriteCombined","","",null,null],[17,"cudaHostRegisterDefault","","",null,null],[17,"cudaHostRegisterPortable","","",null,null],[17,"cudaHostRegisterMapped","","",null,null],[17,"cudaHostRegisterIoMemory","","",null,null],[17,"cudaPeerAccessDefault","","",null,null],[17,"cudaStreamDefault","","",null,null],[17,"cudaStreamNonBlocking","","",null,null],[17,"cudaEventDefault","","",null,null],[17,"cudaEventBlockingSync","","",null,null],[17,"cudaEventDisableTiming","","",null,null],[17,"cudaEventInterprocess","","",null,null],[17,"cudaDeviceScheduleAuto","","",null,null],[17,"cudaDeviceScheduleSpin","","",null,null],[17,"cudaDeviceScheduleYield","","",null,null],[17,"cudaDeviceScheduleBlockingSync","","",null,null],[17,"cudaDeviceBlockingSync","","",null,null],[17,"cudaDeviceScheduleMask","","",null,null],[17,"cudaDeviceMapHost","","",null,null],[17,"cudaDeviceLmemResizeToMax","","",null,null],[17,"cudaDeviceMask","","",null,null],[17,"cudaArrayDefault","","",null,null],[17,"cudaArrayLayered","","",null,null],[17,"cudaArraySurfaceLoadStore","","",null,null],[17,"cudaArrayCubemap","","",null,null],[17,"cudaArrayTextureGather","","",null,null],[17,"cudaArrayColorAttachment","","",null,null],[17,"cudaIpcMemLazyEnablePeerAccess","","",null,null],[17,"cudaMemAttachGlobal","","",null,null],[17,"cudaMemAttachHost","","",null,null],[17,"cudaMemAttachSingle","","",null,null],[17,"cudaOccupancyDefault","","",null,null],[17,"cudaOccupancyDisableCachingOverride","","",null,null],[17,"cudaCooperativeLaunchMultiDeviceNoPreSync","","",null,null],[17,"cudaCooperativeLaunchMultiDeviceNoPostSync","","",null,null],[17,"CUDA_IPC_HANDLE_SIZE","","",null,null],[17,"cudaExternalMemoryDedicated","","",null,null],[17,"cudaExternalSemaphoreSignalSkipNvSciBufMemSync","","",null,null],[17,"cudaExternalSemaphoreWaitSkipNvSciBufMemSync","","",null,null],[17,"cudaNvSciSyncAttrSignal","","",null,null],[17,"cudaNvSciSyncAttrWait","","",null,null],[17,"cudaSurfaceType1D","","",null,null],[17,"cudaSurfaceType2D","","",null,null],[17,"cudaSurfaceType3D","","",null,null],[17,"cudaSurfaceTypeCubemap","","",null,null],[17,"cudaSurfaceType1DLayered","","",null,null],[17,"cudaSurfaceType2DLayered","","",null,null],[17,"cudaSurfaceTypeCubemapLayered","","",null,null],[17,"cudaTextureType1D","","",null,null],[17,"cudaTextureType2D","","",null,null],[17,"cudaTextureType3D","","",null,null],[17,"cudaTextureTypeCubemap","","",null,null],[17,"cudaTextureType1DLayered","","",null,null],[17,"cudaTextureType2DLayered","","",null,null],[17,"cudaTextureTypeCubemapLayered","","",null,null],[17,"CUDART_VERSION","","",null,null],[17,"WCHAR_MIN","","",null,null],[17,"WCHAR_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"CUDNN_DIM_MAX","","",null,null],[17,"CUDNN_LRN_MIN_N","","",null,null],[17,"CUDNN_LRN_MAX_N","","",null,null],[17,"CUDNN_LRN_MIN_K","","",null,null],[17,"CUDNN_LRN_MIN_BETA","","",null,null],[17,"CUDNN_BN_MIN_EPSILON","","",null,null],[17,"CUDNN_SEQDATA_DIM_COUNT","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","","",null,null],[17,"CUDNN_ATTN_DISABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_ENABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_WKIND_COUNT","","",null,null],[6,"va_list","","",null,null],[5,"__va_start","","",null,[[]]],[6,"__vcrt_bool","","",null,null],[6,"wchar_t","","",null,null],[5,"__security_init_cookie","","",null,[[]]],[5,"__security_check_cookie","","",null,[[["usize"]]]],[5,"__report_gsfailure","","",null,[[["usize"]]]],[7,"__security_cookie","","",null,null],[6,"__crt_bool","","",null,null],[5,"_invalid_parameter_noinfo","","",null,[[]]],[5,"_invalid_parameter_noinfo_noreturn","","",null,[[]]],[5,"_invoke_watson","","",null,[[["u32"],["usize"]]]],[6,"errno_t","","",null,null],[6,"wint_t","","",null,null],[6,"wctype_t","","",null,null],[6,"__time32_t","","",null,null],[6,"__time64_t","","",null,null],[6,"_locale_t","","",null,null],[6,"mbstate_t","","",null,null],[6,"time_t","","",null,null],[6,"rsize_t","","",null,null],[5,"_errno","","",null,[[]]],[5,"_set_errno","","",null,[[["i32"]],["i32"]]],[5,"_get_errno","","",null,[[],["i32"]]],[5,"__threadid","","",null,[[],["u64"]]],[5,"__threadhandle","","",null,[[],["usize"]]],[17,"cudaChannelFormatKind_cudaChannelFormatKindSigned","","< Signed channel format",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindUnsigned","","< Unsigned channel format",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindFloat","","< Float channel format",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindNone","","< No channel format",null,null],[6,"cudaChannelFormatKind","","Channel format kind",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[17,"cudaMemoryType_cudaMemoryTypeUnregistered","","< Unregistered memory",null,null],[17,"cudaMemoryType_cudaMemoryTypeHost","","< Host memory",null,null],[17,"cudaMemoryType_cudaMemoryTypeDevice","","< Device memory",null,null],[17,"cudaMemoryType_cudaMemoryTypeManaged","","< Managed memory",null,null],[6,"cudaMemoryType","","CUDA memory types",null,null],[17,"cudaMemcpyKind_cudaMemcpyHostToHost","","< Host   -> Host",null,null],[17,"cudaMemcpyKind_cudaMemcpyHostToDevice","","< Host   -> Device",null,null],[17,"cudaMemcpyKind_cudaMemcpyDeviceToHost","","< Device -> Host",null,null],[17,"cudaMemcpyKind_cudaMemcpyDeviceToDevice","","< Device -> Device",null,null],[17,"cudaMemcpyKind_cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer…",null,null],[6,"cudaMemcpyKind","","CUDA memory copy types",null,null],[6,"cudaHostFn_t","","CUDA host function \\param userData Argument value passed…",null,null],[17,"cudaStreamCaptureStatus_cudaStreamCaptureStatusNone","","< Stream is not capturing",null,null],[17,"cudaStreamCaptureStatus_cudaStreamCaptureStatusActive","","< Stream is actively capturing",null,null],[17,"cudaStreamCaptureStatus_cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been…",null,null],[6,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by…",null,null],[17,"cudaStreamCaptureMode_cudaStreamCaptureModeGlobal","","",null,null],[17,"cudaStreamCaptureMode_cudaStreamCaptureModeThreadLocal","","",null,null],[17,"cudaStreamCaptureMode_cudaStreamCaptureModeRelaxed","","",null,null],[6,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. For…",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsNone","","< Default",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this…",null,null],[6,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[17,"cudaGraphicsMapFlags_cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",null,null],[17,"cudaGraphicsMapFlags_cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",null,null],[17,"cudaGraphicsMapFlags_cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",null,null],[6,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",null,null],[6,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[17,"cudaResourceType_cudaResourceTypeArray","","< Array resource",null,null],[17,"cudaResourceType_cudaResourceTypeMipmappedArray","","< Mipmapped array resource",null,null],[17,"cudaResourceType_cudaResourceTypeLinear","","< Linear resource",null,null],[17,"cudaResourceType_cudaResourceTypePitch2D","","< Pitch 2D resource",null,null],[6,"cudaResourceType","","CUDA resource types",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatNone","","< No resource view format (use underlying resource format)",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",null,null],[6,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[17,"cudaFuncAttribute_cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",null,null],[17,"cudaFuncAttribute_cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",null,null],[17,"cudaFuncAttribute_cudaFuncAttributeMax","","",null,null],[6,"cudaFuncAttribute","","CUDA function attributes that can be set using…",null,null],[17,"cudaFuncCache_cudaFuncCachePreferNone","","< Default function cache configuration, no preference",null,null],[17,"cudaFuncCache_cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",null,null],[17,"cudaFuncCache_cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",null,null],[17,"cudaFuncCache_cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",null,null],[6,"cudaFuncCache","","CUDA function cache configurations",null,null],[17,"cudaSharedMemConfig_cudaSharedMemBankSizeDefault","","",null,null],[17,"cudaSharedMemConfig_cudaSharedMemBankSizeFourByte","","",null,null],[17,"cudaSharedMemConfig_cudaSharedMemBankSizeEightByte","","",null,null],[6,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[17,"cudaSharedCarveout_cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",null,null],[17,"cudaSharedCarveout_cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",null,null],[17,"cudaSharedCarveout_cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",null,null],[6,"cudaSharedCarveout","","Shared memory carveout configurations. These may be passed…",null,null],[17,"cudaComputeMode_cudaComputeModeDefault","","< Default compute mode (Multiple threads can use…",null,null],[17,"cudaComputeMode_cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one…",null,null],[17,"cudaComputeMode_cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use…",null,null],[17,"cudaComputeMode_cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one…",null,null],[6,"cudaComputeMode","","CUDA device compute modes",null,null],[17,"cudaLimit_cudaLimitStackSize","","< GPU thread stack size",null,null],[17,"cudaLimit_cudaLimitPrintfFifoSize","","< GPU printf FIFO size",null,null],[17,"cudaLimit_cudaLimitMallocHeapSize","","< GPU malloc heap size",null,null],[17,"cudaLimit_cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",null,null],[17,"cudaLimit_cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",null,null],[17,"cudaLimit_cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum…",null,null],[6,"cudaLimit","","CUDA Limits",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the specified…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page…",null,null],[6,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only…",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for…",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",null,null],[6,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[17,"cudaOutputMode_cudaKeyValuePair","","< Output mode Key-Value pair format.",null,null],[17,"cudaOutputMode_cudaCSV","","< Output mode Comma separated values format.",null,null],[6,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",null,null],[17,"cudaDeviceAttr_cudaDevAttrTotalConstantMemory","","< Memory available on device for constant variables in a…",null,null],[17,"cudaDeviceAttr_cudaDevAttrWarpSize","","< Warp size in threads",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",null,null],[17,"cudaDeviceAttr_cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",null,null],[17,"cudaDeviceAttr_cudaDevAttrTextureAlignment","","< Alignment requirement for textures",null,null],[17,"cudaDeviceAttr_cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel…",null,null],[17,"cudaDeviceAttr_cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",null,null],[17,"cudaDeviceAttr_cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",null,null],[17,"cudaDeviceAttr_cudaDevAttrIntegrated","","< Device is integrated with host memory",null,null],[17,"cudaDeviceAttr_cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",null,null],[17,"cudaDeviceAttr_cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",null,null],[17,"cudaDeviceAttr_cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels concurrently",null,null],[17,"cudaDeviceAttr_cudaDevAttrEccEnabled","","< Device has ECC support enabled",null,null],[17,"cudaDeviceAttr_cudaDevAttrPciBusId","","< PCI bus ID of the device",null,null],[17,"cudaDeviceAttr_cudaDevAttrPciDeviceId","","< PCI device ID of the device",null,null],[17,"cudaDeviceAttr_cudaDevAttrTccDriver","","< Device is using TCC driver model",null,null],[17,"cudaDeviceAttr_cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",null,null],[17,"cudaDeviceAttr_cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",null,null],[17,"cudaDeviceAttr_cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",null,null],[17,"cudaDeviceAttr_cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",null,null],[17,"cudaDeviceAttr_cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is set",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is set",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",null,null],[17,"cudaDeviceAttr_cudaDevAttrPciDomainId","","< PCI domain ID of the device",null,null],[17,"cudaDeviceAttr_cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",null,null],[17,"cudaDeviceAttr_cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",null,null],[17,"cudaDeviceAttr_cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in…",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per…",null,null],[17,"cudaDeviceAttr_cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",null,null],[17,"cudaDeviceAttr_cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",null,null],[17,"cudaDeviceAttr_cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",null,null],[17,"cudaDeviceAttr_cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native…",null,null],[17,"cudaDeviceAttr_cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",null,null],[17,"cudaDeviceAttr_cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory…",null,null],[17,"cudaDeviceAttr_cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory concurrently…",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",null,null],[17,"cudaDeviceAttr_cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",null,null],[17,"cudaDeviceAttr_cudaDevAttrReserved92","","",null,null],[17,"cudaDeviceAttr_cudaDevAttrReserved93","","",null,null],[17,"cudaDeviceAttr_cudaDevAttrReserved94","","",null,null],[17,"cudaDeviceAttr_cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via…",null,null],[17,"cudaDeviceAttr_cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value…",null,null],[17,"cudaDeviceAttr_cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",null,null],[17,"cudaDeviceAttr_cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via…",null,null],[17,"cudaDeviceAttr_cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host's page…",null,null],[17,"cudaDeviceAttr_cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",null,null],[6,"cudaDeviceAttr","","CUDA device attributes",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link…",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrAccessSupported","","< Peer access is enabled",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",null,null],[6,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[6,"cudaIpcEventHandle_t","","",null,null],[6,"cudaIpcMemHandle_t","","",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",null,null],[6,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence…",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence…",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed…",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed…",null,null],[6,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[17,"cudaCGScope_cudaCGScopeInvalid","","< Invalid cooperative group scope",null,null],[17,"cudaCGScope_cudaCGScopeGrid","","< Scope represented by a grid_group",null,null],[17,"cudaCGScope_cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",null,null],[6,"cudaCGScope","","CUDA cooperative group scope",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeKernel","","< GPU kernel node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeMemcpy","","< Memcpy node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeMemset","","< Memset node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeHost","","< Host (executable) node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeEmpty","","< Empty (no-op) node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeCount","","",null,null],[6,"cudaGraphNodeType","","CUDA Graph node types",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateSuccess","","< The update succeeded",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is…",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node…",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a…",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is…",null,null],[6,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[17,"cudaRoundMode_cudaRoundNearest","","",null,null],[17,"cudaRoundMode_cudaRoundZero","","",null,null],[17,"cudaRoundMode_cudaRoundPosInf","","",null,null],[17,"cudaRoundMode_cudaRoundMinInf","","",null,null],[6,"cudaRoundMode","","",null,null],[17,"cudaSurfaceBoundaryMode_cudaBoundaryModeZero","","< Zero boundary mode",null,null],[17,"cudaSurfaceBoundaryMode_cudaBoundaryModeClamp","","< Clamp boundary mode",null,null],[17,"cudaSurfaceBoundaryMode_cudaBoundaryModeTrap","","< Trap boundary mode",null,null],[6,"cudaSurfaceBoundaryMode","","CUDA Surface boundary modes",null,null],[17,"cudaSurfaceFormatMode_cudaFormatModeForced","","< Forced format mode",null,null],[17,"cudaSurfaceFormatMode_cudaFormatModeAuto","","< Auto format mode",null,null],[6,"cudaSurfaceFormatMode","","CUDA Surface format modes",null,null],[6,"cudaSurfaceObject_t","","An opaque value that represents a CUDA Surface object",null,null],[17,"cudaTextureAddressMode_cudaAddressModeWrap","","< Wrapping address mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeClamp","","< Clamp to edge address mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeMirror","","< Mirror address mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeBorder","","< Border address mode",null,null],[6,"cudaTextureAddressMode","","CUDA texture address modes",null,null],[17,"cudaTextureFilterMode_cudaFilterModePoint","","< Point filter mode",null,null],[17,"cudaTextureFilterMode_cudaFilterModeLinear","","< Linear filter mode",null,null],[6,"cudaTextureFilterMode","","CUDA texture filter modes",null,null],[17,"cudaTextureReadMode_cudaReadModeElementType","","< Read texture as specified element type",null,null],[17,"cudaTextureReadMode_cudaReadModeNormalizedFloat","","< Read texture as normalized float",null,null],[6,"cudaTextureReadMode","","CUDA texture read modes",null,null],[6,"cudaTextureObject_t","","An opaque value that represents a CUDA texture object",null,null],[17,"cudaDataType_t_CUDA_R_16F","","",null,null],[17,"cudaDataType_t_CUDA_C_16F","","",null,null],[17,"cudaDataType_t_CUDA_R_32F","","",null,null],[17,"cudaDataType_t_CUDA_C_32F","","",null,null],[17,"cudaDataType_t_CUDA_R_64F","","",null,null],[17,"cudaDataType_t_CUDA_C_64F","","",null,null],[17,"cudaDataType_t_CUDA_R_8I","","",null,null],[17,"cudaDataType_t_CUDA_C_8I","","",null,null],[17,"cudaDataType_t_CUDA_R_8U","","",null,null],[17,"cudaDataType_t_CUDA_C_8U","","",null,null],[17,"cudaDataType_t_CUDA_R_32I","","",null,null],[17,"cudaDataType_t_CUDA_C_32I","","",null,null],[17,"cudaDataType_t_CUDA_R_32U","","",null,null],[17,"cudaDataType_t_CUDA_C_32U","","",null,null],[6,"cudaDataType_t","","",null,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[6,"libraryPropertyType_t","","",null,null],[5,"cudaDeviceReset","","\\brief Destroy all allocations and reset all state on the…",null,[[],["cudaerror"]]],[5,"cudaDeviceSynchronize","","\\brief Wait for compute device to finish",null,[[],["cudaerror"]]],[5,"cudaDeviceSetLimit","","\\brief Set resource limits",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaDeviceGetLimit","","\\brief Returns resource limits",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceGetCacheConfig","","\\brief Returns the preferred cache configuration for the…",null,[[],["cudaerror"]]],[5,"cudaDeviceGetStreamPriorityRange","","\\brief Returns numerical values that correspond to the…",null,[[],["cudaerror"]]],[5,"cudaDeviceSetCacheConfig","","\\brief Sets the preferred cache configuration for the…",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceGetSharedMemConfig","","\\brief Returns the shared memory configuration for the…",null,[[],["cudaerror"]]],[5,"cudaDeviceSetSharedMemConfig","","\\brief Sets the shared memory configuration for the…",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceGetByPCIBusId","","\\brief Returns a handle to a compute device",null,[[],["cudaerror"]]],[5,"cudaDeviceGetPCIBusId","","\\brief Returns a PCI Bus Id string for the device",null,[[["i32"]],["cudaerror"]]],[5,"cudaIpcGetEventHandle","","\\brief Gets an interprocess handle for a previously…",null,[[],["cudaerror"]]],[5,"cudaIpcOpenEventHandle","","\\brief Opens an interprocess event handle for use in the…",null,[[["cudaipceventhandle_st"]],["cudaerror"]]],[5,"cudaIpcGetMemHandle","","\\brief Gets an interprocess memory handle for an existing…",null,[[],["cudaerror"]]],[5,"cudaIpcOpenMemHandle","","\\brief Opens an interprocess memory handle exported from…",null,[[["cudaipcmemhandle_st"],["u32"]],["cudaerror"]]],[5,"cudaIpcCloseMemHandle","","\\brief Close memory mapped with cudaIpcOpenMemHandle",null,[[],["cudaerror"]]],[5,"cudaThreadExit","","\\brief Exit and clean up from CUDA launches",null,[[],["cudaerror"]]],[5,"cudaThreadSynchronize","","\\brief Wait for compute device to finish",null,[[],["cudaerror"]]],[5,"cudaThreadSetLimit","","\\brief Set resource limits",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaThreadGetLimit","","\\brief Returns resource limits",null,[[["i32"]],["cudaerror"]]],[5,"cudaThreadGetCacheConfig","","\\brief Returns the preferred cache configuration for the…",null,[[],["cudaerror"]]],[5,"cudaThreadSetCacheConfig","","\\brief Sets the preferred cache configuration for the…",null,[[["i32"]],["cudaerror"]]],[5,"cudaGetLastError","","\\brief Returns the last error from a runtime call",null,[[],["cudaerror"]]],[5,"cudaPeekAtLastError","","\\brief Returns the last error from a runtime call",null,[[],["cudaerror"]]],[5,"cudaGetErrorName","","\\brief Returns the string representation of an error code…",null,[[["cudaerror"]]]],[5,"cudaGetErrorString","","\\brief Returns the description string for an error code",null,[[["cudaerror"]]]],[5,"cudaGetDeviceCount","","\\brief Returns the number of compute-capable devices",null,[[],["cudaerror"]]],[5,"cudaGetDeviceProperties","","\\brief Returns information about the compute-device",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceGetAttribute","","\\brief Returns information about the device",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceGetNvSciSyncAttributes","","\\brief Return NvSciSync attributes that this device can…",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceGetP2PAttribute","","\\brief Queries attributes of the link between two devices.",null,[[["i32"]],["cudaerror"]]],[5,"cudaChooseDevice","","\\brief Select compute-device which best matches criteria",null,[[],["cudaerror"]]],[5,"cudaSetDevice","","\\brief Set device to be used for GPU executions",null,[[["i32"]],["cudaerror"]]],[5,"cudaGetDevice","","\\brief Returns which device is currently being used",null,[[],["cudaerror"]]],[5,"cudaSetValidDevices","","\\brief Set a list of devices that can be used for CUDA",null,[[["i32"]],["cudaerror"]]],[5,"cudaSetDeviceFlags","","\\brief Sets flags to be used for device executions",null,[[["u32"]],["cudaerror"]]],[5,"cudaGetDeviceFlags","","\\brief Gets the flags for the current device",null,[[],["cudaerror"]]],[5,"cudaStreamCreate","","\\brief Create an asynchronous stream",null,[[],["cudaerror"]]],[5,"cudaStreamCreateWithFlags","","\\brief Create an asynchronous stream",null,[[["u32"]],["cudaerror"]]],[5,"cudaStreamCreateWithPriority","","\\brief Create an asynchronous stream with the specified…",null,[[["u32"],["i32"]],["cudaerror"]]],[5,"cudaStreamGetPriority","","\\brief Query the priority of a stream",null,[[],["cudaerror"]]],[5,"cudaStreamGetFlags","","\\brief Query the flags of a stream",null,[[],["cudaerror"]]],[5,"cudaStreamDestroy","","\\brief Destroys and cleans up an asynchronous stream",null,[[],["cudaerror"]]],[5,"cudaStreamWaitEvent","","\\brief Make a compute stream wait on an event",null,[[["u32"]],["cudaerror"]]],[6,"cudaStreamCallback_t","","Type of stream callback functions. \\param stream The…",null,null],[5,"cudaStreamAddCallback","","\\brief Add a callback to a compute stream",null,[[["u32"],["option"]],["cudaerror"]]],[5,"cudaStreamSynchronize","","\\brief Waits for stream tasks to complete",null,[[],["cudaerror"]]],[5,"cudaStreamQuery","","\\brief Queries an asynchronous stream for completion status",null,[[],["cudaerror"]]],[5,"cudaStreamAttachMemAsync","","\\brief Attach memory to a stream asynchronously",null,[[["u32"],["usize"]],["cudaerror"]]],[5,"cudaStreamBeginCapture","","\\brief Begins graph capture on a stream",null,[[["i32"]],["cudaerror"]]],[5,"cudaThreadExchangeStreamCaptureMode","","\\brief Swaps the stream capture interaction mode for a…",null,[[],["cudaerror"]]],[5,"cudaStreamEndCapture","","\\brief Ends capture on a stream, returning the captured…",null,[[],["cudaerror"]]],[5,"cudaStreamIsCapturing","","\\brief Returns a stream's capture status",null,[[],["cudaerror"]]],[5,"cudaStreamGetCaptureInfo","","\\brief Query capture status of a stream",null,[[],["cudaerror"]]],[5,"cudaEventCreate","","\\brief Creates an event object",null,[[],["cudaerror"]]],[5,"cudaEventCreateWithFlags","","\\brief Creates an event object with the specified flags",null,[[["u32"]],["cudaerror"]]],[5,"cudaEventRecord","","\\brief Records an event",null,[[],["cudaerror"]]],[5,"cudaEventQuery","","\\brief Queries an event's status",null,[[],["cudaerror"]]],[5,"cudaEventSynchronize","","\\brief Waits for an event to complete",null,[[],["cudaerror"]]],[5,"cudaEventDestroy","","\\brief Destroys an event object",null,[[],["cudaerror"]]],[5,"cudaEventElapsedTime","","\\brief Computes the elapsed time between events",null,[[],["cudaerror"]]],[5,"cudaImportExternalMemory","","\\brief Imports an external memory object",null,[[],["cudaerror"]]],[5,"cudaExternalMemoryGetMappedBuffer","","\\brief Maps a buffer onto an imported memory object",null,[[],["cudaerror"]]],[5,"cudaExternalMemoryGetMappedMipmappedArray","","\\brief Maps a CUDA mipmapped array onto an external memory…",null,[[],["cudaerror"]]],[5,"cudaDestroyExternalMemory","","\\brief Destroys an external memory object.",null,[[],["cudaerror"]]],[5,"cudaImportExternalSemaphore","","\\brief Imports an external semaphore",null,[[],["cudaerror"]]],[5,"cudaSignalExternalSemaphoresAsync","","\\brief Signals a set of external semaphore objects",null,[[["u32"]],["cudaerror"]]],[5,"cudaWaitExternalSemaphoresAsync","","\\brief Waits on a set of external semaphore objects",null,[[["u32"]],["cudaerror"]]],[5,"cudaDestroyExternalSemaphore","","\\brief Destroys an external semaphore",null,[[],["cudaerror"]]],[5,"cudaLaunchKernel","","\\brief Launches a device function",null,[[["usize"],["dim3"]],["cudaerror"]]],[5,"cudaLaunchCooperativeKernel","","\\brief Launches a device function where thread blocks can…",null,[[["usize"],["dim3"]],["cudaerror"]]],[5,"cudaLaunchCooperativeKernelMultiDevice","","\\brief Launches device functions on multiple devices where…",null,[[["u32"]],["cudaerror"]]],[5,"cudaFuncSetCacheConfig","","\\brief Sets the preferred cache configuration for a device…",null,[[["i32"]],["cudaerror"]]],[5,"cudaFuncSetSharedMemConfig","","\\brief Sets the shared memory configuration for a device…",null,[[["i32"]],["cudaerror"]]],[5,"cudaFuncGetAttributes","","\\brief Find out attributes for a given function",null,[[],["cudaerror"]]],[5,"cudaFuncSetAttribute","","\\brief Set attributes for a given function",null,[[["i32"]],["cudaerror"]]],[5,"cudaSetDoubleForDevice","","\\brief Converts a double argument to be executed on a device",null,[[],["cudaerror"]]],[5,"cudaSetDoubleForHost","","\\brief Converts a double argument after execution on a…",null,[[],["cudaerror"]]],[5,"cudaLaunchHostFunc","","\\brief Enqueues a host function call in a stream",null,[[["option"]],["cudaerror"]]],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessor","","\\brief Returns occupancy for a device function",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","","\\brief Returns occupancy for a device function with the…",null,[[["u32"],["usize"],["i32"]],["cudaerror"]]],[5,"cudaMallocManaged","","\\brief Allocates memory that will be automatically managed…",null,[[["usize"],["u32"]],["cudaerror"]]],[5,"cudaMalloc","","\\brief Allocate memory on the device",null,[[["usize"]],["cudaerror"]]],[5,"cudaMallocHost","","\\brief Allocates page-locked memory on the host",null,[[["usize"]],["cudaerror"]]],[5,"cudaMallocPitch","","\\brief Allocates pitched memory on the device",null,[[["usize"]],["cudaerror"]]],[5,"cudaMallocArray","","\\brief Allocate an array on the device",null,[[["u32"],["usize"]],["cudaerror"]]],[5,"cudaFree","","\\brief Frees memory on the device",null,[[],["cudaerror"]]],[5,"cudaFreeHost","","\\brief Frees page-locked memory",null,[[],["cudaerror"]]],[5,"cudaFreeArray","","\\brief Frees an array on the device",null,[[],["cudaerror"]]],[5,"cudaFreeMipmappedArray","","\\brief Frees a mipmapped array on the device",null,[[],["cudaerror"]]],[5,"cudaHostAlloc","","\\brief Allocates page-locked memory on the host",null,[[["usize"],["u32"]],["cudaerror"]]],[5,"cudaHostRegister","","\\brief Registers an existing host memory range for use by…",null,[[["u32"],["usize"]],["cudaerror"]]],[5,"cudaHostUnregister","","\\brief Unregisters a memory range that was registered with…",null,[[],["cudaerror"]]],[5,"cudaHostGetDevicePointer","","\\brief Passes back device pointer of mapped host memory…",null,[[["u32"]],["cudaerror"]]],[5,"cudaHostGetFlags","","\\brief Passes back flags used to allocate pinned host…",null,[[],["cudaerror"]]],[5,"cudaMalloc3D","","\\brief Allocates logical 1D, 2D, or 3D memory objects on…",null,[[["cudaextent"]],["cudaerror"]]],[5,"cudaMalloc3DArray","","\\brief Allocate an array on the device",null,[[["cudaextent"],["u32"]],["cudaerror"]]],[5,"cudaMallocMipmappedArray","","\\brief Allocate a mipmapped array on the device",null,[[["cudaextent"],["u32"]],["cudaerror"]]],[5,"cudaGetMipmappedArrayLevel","","\\brief Gets a mipmap level of a CUDA mipmapped array",null,[[["u32"]],["cudaerror"]]],[5,"cudaMemcpy3D","","\\brief Copies data between 3D objects",null,[[],["cudaerror"]]],[5,"cudaMemcpy3DPeer","","\\brief Copies memory between devices",null,[[],["cudaerror"]]],[5,"cudaMemcpy3DAsync","","\\brief Copies data between 3D objects",null,[[],["cudaerror"]]],[5,"cudaMemcpy3DPeerAsync","","\\brief Copies memory between devices asynchronously.",null,[[],["cudaerror"]]],[5,"cudaMemGetInfo","","\\brief Gets free and total device memory",null,[[],["cudaerror"]]],[5,"cudaArrayGetInfo","","\\brief Gets info about the specified cudaArray",null,[[],["cudaerror"]]],[5,"cudaMemcpy","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyPeer","","\\brief Copies memory between two devices",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2D","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2DToArray","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2DFromArray","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2DArrayToArray","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyToSymbol","","\\brief Copies data to the given symbol on the device",null,[[["i32"],["usize"]],["cudaerror"]]],[5,"cudaMemcpyFromSymbol","","\\brief Copies data from the given symbol on the device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyAsync","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyPeerAsync","","\\brief Copies memory between two devices asynchronously.",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2DAsync","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2DToArrayAsync","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpy2DFromArrayAsync","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyToSymbolAsync","","\\brief Copies data to the given symbol on the device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyFromSymbolAsync","","\\brief Copies data from the given symbol on the device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemset","","\\brief Initializes or sets device memory to a value",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemset2D","","\\brief Initializes or sets device memory to a value",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemset3D","","\\brief Initializes or sets device memory to a value",null,[[["cudapitchedptr"],["cudaextent"],["i32"]],["cudaerror"]]],[5,"cudaMemsetAsync","","\\brief Initializes or sets device memory to a value",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemset2DAsync","","\\brief Initializes or sets device memory to a value",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemset3DAsync","","\\brief Initializes or sets device memory to a value",null,[[["cudaextent"],["i32"],["cudapitchedptr"]],["cudaerror"]]],[5,"cudaGetSymbolAddress","","\\brief Finds the address associated with a CUDA symbol",null,[[],["cudaerror"]]],[5,"cudaGetSymbolSize","","\\brief Finds the size of the object associated with a CUDA…",null,[[],["cudaerror"]]],[5,"cudaMemPrefetchAsync","","\\brief Prefetches memory to the specified destination device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemAdvise","","\\brief Advise about the usage of a given memory range",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemRangeGetAttribute","","\\brief Query an attribute of a given memory range",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemRangeGetAttributes","","\\brief Query attributes of a given memory range.",null,[[["usize"]],["cudaerror"]]],[5,"cudaMemcpyToArray","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyFromArray","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyArrayToArray","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyToArrayAsync","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaMemcpyFromArrayAsync","","\\brief Copies data between host and device",null,[[["usize"],["i32"]],["cudaerror"]]],[5,"cudaPointerGetAttributes","","\\brief Returns attributes about a specified pointer",null,[[],["cudaerror"]]],[5,"cudaDeviceCanAccessPeer","","\\brief Queries if a device may directly access a peer…",null,[[["i32"]],["cudaerror"]]],[5,"cudaDeviceEnablePeerAccess","","\\brief Enables direct access to memory allocations on a…",null,[[["u32"],["i32"]],["cudaerror"]]],[5,"cudaDeviceDisablePeerAccess","","\\brief Disables direct access to memory allocations on a…",null,[[["i32"]],["cudaerror"]]],[5,"cudaGraphicsUnregisterResource","","\\brief Unregisters a graphics resource for access by CUDA",null,[[],["cudaerror"]]],[5,"cudaGraphicsResourceSetMapFlags","","\\brief Set usage flags for mapping a graphics resource",null,[[["u32"]],["cudaerror"]]],[5,"cudaGraphicsMapResources","","\\brief Map graphics resources for access by CUDA",null,[[["i32"]],["cudaerror"]]],[5,"cudaGraphicsUnmapResources","","\\brief Unmap graphics resources.",null,[[["i32"]],["cudaerror"]]],[5,"cudaGraphicsResourceGetMappedPointer","","\\brief Get an device pointer through which to access a…",null,[[],["cudaerror"]]],[5,"cudaGraphicsSubResourceGetMappedArray","","\\brief Get an array through which to access a subresource…",null,[[["u32"]],["cudaerror"]]],[5,"cudaGraphicsResourceGetMappedMipmappedArray","","\\brief Get a mipmapped array through which to access a…",null,[[],["cudaerror"]]],[5,"cudaBindTexture","","\\brief Binds a memory area to a texture",null,[[["usize"]],["cudaerror"]]],[5,"cudaBindTexture2D","","\\brief Binds a 2D memory area to a texture",null,[[["usize"]],["cudaerror"]]],[5,"cudaBindTextureToArray","","\\brief Binds an array to a texture",null,[[],["cudaerror"]]],[5,"cudaBindTextureToMipmappedArray","","\\brief Binds a mipmapped array to a texture",null,[[],["cudaerror"]]],[5,"cudaUnbindTexture","","\\brief Unbinds a texture",null,[[],["cudaerror"]]],[5,"cudaGetTextureAlignmentOffset","","\\brief Get the alignment offset of a texture",null,[[],["cudaerror"]]],[5,"cudaGetTextureReference","","\\brief Get the texture reference associated with a symbol",null,[[],["cudaerror"]]],[5,"cudaBindSurfaceToArray","","\\brief Binds an array to a surface",null,[[],["cudaerror"]]],[5,"cudaGetSurfaceReference","","\\brief Get the surface reference associated with a symbol",null,[[],["cudaerror"]]],[5,"cudaGetChannelDesc","","\\brief Get the channel descriptor of an array",null,[[],["cudaerror"]]],[5,"cudaCreateChannelDesc","","\\brief Returns a channel descriptor using the specified…",null,[[["i32"]],["cudachannelformatdesc"]]],[5,"cudaCreateTextureObject","","\\brief Creates a texture object",null,[[],["cudaerror"]]],[5,"cudaDestroyTextureObject","","\\brief Destroys a texture object",null,[[["u64"]],["cudaerror"]]],[5,"cudaGetTextureObjectResourceDesc","","\\brief Returns a texture object's resource descriptor",null,[[["u64"]],["cudaerror"]]],[5,"cudaGetTextureObjectTextureDesc","","\\brief Returns a texture object's texture descriptor",null,[[["u64"]],["cudaerror"]]],[5,"cudaGetTextureObjectResourceViewDesc","","\\brief Returns a texture object's resource view descriptor",null,[[["u64"]],["cudaerror"]]],[5,"cudaCreateSurfaceObject","","\\brief Creates a surface object",null,[[],["cudaerror"]]],[5,"cudaDestroySurfaceObject","","\\brief Destroys a surface object",null,[[["u64"]],["cudaerror"]]],[5,"cudaGetSurfaceObjectResourceDesc","","\\brief Returns a surface object's resource descriptor…",null,[[["u64"]],["cudaerror"]]],[5,"cudaDriverGetVersion","","\\brief Returns the latest version of CUDA supported by the…",null,[[],["cudaerror"]]],[5,"cudaRuntimeGetVersion","","\\brief Returns the CUDA Runtime version",null,[[],["cudaerror"]]],[5,"cudaGraphCreate","","\\brief Creates a graph",null,[[["u32"]],["cudaerror"]]],[5,"cudaGraphAddKernelNode","","\\brief Creates a kernel execution node and adds it to a…",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphKernelNodeGetParams","","\\brief Returns a kernel node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphKernelNodeSetParams","","\\brief Sets a kernel node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphAddMemcpyNode","","\\brief Creates a memcpy node and adds it to a graph",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphMemcpyNodeGetParams","","\\brief Returns a memcpy node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphMemcpyNodeSetParams","","\\brief Sets a memcpy node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphAddMemsetNode","","\\brief Creates a memset node and adds it to a graph",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphMemsetNodeGetParams","","\\brief Returns a memset node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphMemsetNodeSetParams","","\\brief Sets a memset node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphAddHostNode","","\\brief Creates a host execution node and adds it to a graph",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphHostNodeGetParams","","\\brief Returns a host node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphHostNodeSetParams","","\\brief Sets a host node's parameters",null,[[],["cudaerror"]]],[5,"cudaGraphAddChildGraphNode","","\\brief Creates a child graph node and adds it to a graph",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphChildGraphNodeGetGraph","","\\brief Gets a handle to the embedded graph of a child…",null,[[],["cudaerror"]]],[5,"cudaGraphAddEmptyNode","","\\brief Creates an empty node and adds it to a graph",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphClone","","\\brief Clones a graph",null,[[],["cudaerror"]]],[5,"cudaGraphNodeFindInClone","","\\brief Finds a cloned version of a node",null,[[],["cudaerror"]]],[5,"cudaGraphNodeGetType","","\\brief Returns a node's type",null,[[],["cudaerror"]]],[5,"cudaGraphGetNodes","","\\brief Returns a graph's nodes",null,[[],["cudaerror"]]],[5,"cudaGraphGetRootNodes","","\\brief Returns a graph's root nodes",null,[[],["cudaerror"]]],[5,"cudaGraphGetEdges","","\\brief Returns a graph's dependency edges",null,[[],["cudaerror"]]],[5,"cudaGraphNodeGetDependencies","","\\brief Returns a node's dependencies",null,[[],["cudaerror"]]],[5,"cudaGraphNodeGetDependentNodes","","\\brief Returns a node's dependent nodes",null,[[],["cudaerror"]]],[5,"cudaGraphAddDependencies","","\\brief Adds dependency edges to a graph.",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphRemoveDependencies","","\\brief Removes dependency edges from a graph.",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphDestroyNode","","\\brief Remove a node from the graph",null,[[],["cudaerror"]]],[5,"cudaGraphInstantiate","","\\brief Creates an executable graph from a graph",null,[[["usize"]],["cudaerror"]]],[5,"cudaGraphExecKernelNodeSetParams","","\\brief Sets the parameters for a kernel node in the given…",null,[[],["cudaerror"]]],[5,"cudaGraphExecMemcpyNodeSetParams","","\\brief Sets the parameters for a memcpy node in the given…",null,[[],["cudaerror"]]],[5,"cudaGraphExecMemsetNodeSetParams","","\\brief Sets the parameters for a memset node in the given…",null,[[],["cudaerror"]]],[5,"cudaGraphExecHostNodeSetParams","","\\brief Sets the parameters for a host node in the given…",null,[[],["cudaerror"]]],[5,"cudaGraphExecUpdate","","\\brief Check whether an executable graph can be updated…",null,[[],["cudaerror"]]],[5,"cudaGraphLaunch","","\\brief Launches an executable graph in a stream",null,[[],["cudaerror"]]],[5,"cudaGraphExecDestroy","","\\brief Destroys an executable graph",null,[[],["cudaerror"]]],[5,"cudaGraphDestroy","","\\brief Destroys a graph",null,[[],["cudaerror"]]],[5,"cudaGetExportTable","","\\cond impl_private",null,[[],["cudaerror"]]],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"cudnnHandle_t","","",null,null],[5,"cudnnGetVersion","","",null,[[],["usize"]]],[5,"cudnnGetCudartVersion","","",null,[[],["usize"]]],[5,"cudnnGetErrorString","","",null,[[["cudnnstatus_t"]]]],[5,"cudnnQueryRuntimeError","","",null,[[["cudnnerrquerymode_t"]],["cudnnstatus_t"]]],[5,"cudnnGetProperty","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnCreate","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroy","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetStream","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetStream","","",null,[[],["cudnnstatus_t"]]],[6,"cudnnTensorDescriptor_t","","",null,null],[6,"cudnnConvolutionDescriptor_t","","",null,null],[6,"cudnnPoolingDescriptor_t","","",null,null],[6,"cudnnFilterDescriptor_t","","",null,null],[6,"cudnnLRNDescriptor_t","","",null,null],[6,"cudnnActivationDescriptor_t","","",null,null],[6,"cudnnSpatialTransformerDescriptor_t","","",null,null],[6,"cudnnOpTensorDescriptor_t","","",null,null],[6,"cudnnReduceTensorDescriptor_t","","",null,null],[6,"cudnnCTCLossDescriptor_t","","",null,null],[6,"cudnnTensorTransformDescriptor_t","","",null,null],[5,"cudnnCreateTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetTensor4dDescriptor","","",null,[[["i32"],["cudnntensorformat_t"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnSetTensor4dDescriptorEx","","",null,[[["i32"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetTensor4dDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetTensorNdDescriptor","","",null,[[["i32"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnSetTensorNdDescriptorEx","","",null,[[["i32"],["cudnntensorformat_t"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetTensorNdDescriptor","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetTensorSizeInBytes","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnInitTransformDest","","Create a destination descriptor for cudnnTransformTensor",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateTensorTransformDescriptor","","Create an empty tensor transform descriptor",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetTensorTransformDescriptor","","Initialize a previously created tensor transform descriptor.",null,[[["u32"],["cudnnfoldingdirection_t"],["cudnntensorformat_t"]],["cudnnstatus_t"]]],[5,"cudnnGetTensorTransformDescriptor","","Retrieves the values stored in a previously initialized…",null,[[["u32"]],["cudnnstatus_t"]]],[5,"cudnnDestroyTensorTransformDescriptor","","Destroys a previously created tensor transform descriptor.",null,[[],["cudnnstatus_t"]]],[5,"cudnnTransformTensor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnTransformTensorEx","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetFoldedConvBackwardDataDescriptors","","",null,[[["cudnntensorformat_t"]],["cudnnstatus_t"]]],[5,"cudnnAddTensor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateOpTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetOpTensorDescriptor","","",null,[[["cudnnoptensorop_t"],["cudnndatatype_t"],["cudnnnanpropagation_t"]],["cudnnstatus_t"]]],[5,"cudnnGetOpTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyOpTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnOpTensor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateReduceTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetReduceTensorDescriptor","","",null,[[["cudnnreducetensorindices_t"],["cudnnreducetensorop_t"],["cudnnindicestype_t"],["cudnndatatype_t"],["cudnnnanpropagation_t"]],["cudnnstatus_t"]]],[5,"cudnnGetReduceTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyReduceTensorDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetReductionIndicesSize","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetReductionWorkspaceSize","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnReduceTensor","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnSetTensor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnScaleTensor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateFilterDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetFilter4dDescriptor","","",null,[[["cudnntensorformat_t"],["cudnndatatype_t"],["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetFilter4dDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetFilterNdDescriptor","","",null,[[["cudnntensorformat_t"],["cudnndatatype_t"],["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetFilterNdDescriptor","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetFilterSizeInBytes","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnTransformFilter","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyFilterDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnReorderFilterAndBias","","",null,[[["cudnnreordertype_t"],["i32"]],["cudnnstatus_t"]]],[5,"cudnnCreateConvolutionDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetConvolutionMathType","","",null,[[["cudnnmathtype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionMathType","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetConvolutionGroupCount","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionGroupCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetConvolutionReorderType","","",null,[[["cudnnreordertype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionReorderType","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetConvolution2dDescriptor","","",null,[[["cudnnconvolutionmode_t"],["i32"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolution2dDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetConvolution2dForwardOutputDim","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetConvolutionNdDescriptor","","",null,[[["cudnnconvolutionmode_t"],["i32"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionNdDescriptor","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionNdForwardOutputDim","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnDestroyConvolutionDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionForwardAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindConvolutionForwardAlgorithm","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnFindConvolutionForwardAlgorithmEx","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionForwardAlgorithm","","",null,[[["usize"],["cudnnconvolutionfwdpreference_t"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionForwardAlgorithm_v7","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionForwardWorkspaceSize","","",null,[[["cudnnconvolutionfwdalgo_t"]],["cudnnstatus_t"]]],[5,"cudnnConvolutionForward","","",null,[[["cudnnconvolutionfwdalgo_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnConvolutionBiasActivationForward","","",null,[[["cudnnconvolutionfwdalgo_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnConvolutionBackwardBias","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindConvolutionBackwardFilterAlgorithm","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnFindConvolutionBackwardFilterAlgorithmEx","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithm","","",null,[[["cudnnconvolutionbwdfilterpreference_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithm_v7","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardFilterWorkspaceSize","","",null,[[["cudnnconvolutionbwdfilteralgo_t"]],["cudnnstatus_t"]]],[5,"cudnnConvolutionBackwardFilter","","",null,[[["cudnnconvolutionbwdfilteralgo_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardDataAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindConvolutionBackwardDataAlgorithm","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnFindConvolutionBackwardDataAlgorithmEx","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardDataAlgorithm","","",null,[[["cudnnconvolutionbwddatapreference_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardDataAlgorithm_v7","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetConvolutionBackwardDataWorkspaceSize","","",null,[[["cudnnconvolutionbwddataalgo_t"]],["cudnnstatus_t"]]],[5,"cudnnConvolutionBackwardData","","",null,[[["cudnnconvolutionbwddataalgo_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnIm2Col","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSoftmaxForward","","",null,[[["cudnnsoftmaxalgorithm_t"],["cudnnsoftmaxmode_t"]],["cudnnstatus_t"]]],[5,"cudnnSoftmaxBackward","","",null,[[["cudnnsoftmaxalgorithm_t"],["cudnnsoftmaxmode_t"]],["cudnnstatus_t"]]],[5,"cudnnCreatePoolingDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetPooling2dDescriptor","","",null,[[["i32"],["cudnnpoolingmode_t"],["cudnnnanpropagation_t"]],["cudnnstatus_t"]]],[5,"cudnnGetPooling2dDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetPoolingNdDescriptor","","",null,[[["i32"],["cudnnpoolingmode_t"],["cudnnnanpropagation_t"]],["cudnnstatus_t"]]],[5,"cudnnGetPoolingNdDescriptor","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetPoolingNdForwardOutputDim","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetPooling2dForwardOutputDim","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyPoolingDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnPoolingForward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnPoolingBackward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateActivationDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetActivationDescriptor","","",null,[[["cudnnactivationmode_t"],["f64"],["cudnnnanpropagation_t"]],["cudnnstatus_t"]]],[5,"cudnnGetActivationDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyActivationDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnActivationForward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnActivationBackward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateLRNDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetLRNDescriptor","","",null,[[["u32"],["f64"]],["cudnnstatus_t"]]],[5,"cudnnGetLRNDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyLRNDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnLRNCrossChannelForward","","",null,[[["cudnnlrnmode_t"]],["cudnnstatus_t"]]],[5,"cudnnLRNCrossChannelBackward","","",null,[[["cudnnlrnmode_t"]],["cudnnstatus_t"]]],[5,"cudnnDivisiveNormalizationForward","","",null,[[["cudnndivnormmode_t"]],["cudnnstatus_t"]]],[5,"cudnnDivisiveNormalizationBackward","","",null,[[["cudnndivnormmode_t"]],["cudnnstatus_t"]]],[5,"cudnnDeriveBNTensorDescriptor","","",null,[[["cudnnbatchnormmode_t"]],["cudnnstatus_t"]]],[5,"cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","","",null,[[["cudnnbatchnormmode_t"],["cudnnbatchnormops_t"]],["cudnnstatus_t"]]],[5,"cudnnGetBatchNormalizationBackwardExWorkspaceSize","","",null,[[["cudnnbatchnormmode_t"],["cudnnbatchnormops_t"]],["cudnnstatus_t"]]],[5,"cudnnGetBatchNormalizationTrainingExReserveSpaceSize","","",null,[[["cudnnbatchnormmode_t"],["cudnnbatchnormops_t"]],["cudnnstatus_t"]]],[5,"cudnnBatchNormalizationForwardTraining","","",null,[[["cudnnbatchnormmode_t"],["f64"]],["cudnnstatus_t"]]],[5,"cudnnBatchNormalizationForwardTrainingEx","","",null,[[["cudnnbatchnormops_t"],["cudnnbatchnormmode_t"],["usize"],["f64"]],["cudnnstatus_t"]]],[5,"cudnnBatchNormalizationForwardInference","","",null,[[["cudnnbatchnormmode_t"],["f64"]],["cudnnstatus_t"]]],[5,"cudnnBatchNormalizationBackward","","",null,[[["cudnnbatchnormmode_t"],["f64"]],["cudnnstatus_t"]]],[5,"cudnnBatchNormalizationBackwardEx","","",null,[[["cudnnbatchnormops_t"],["cudnnbatchnormmode_t"],["usize"],["f64"]],["cudnnstatus_t"]]],[5,"cudnnCreateSpatialTransformerDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetSpatialTransformerNdDescriptor","","",null,[[["i32"],["cudnnsamplertype_t"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnDestroySpatialTransformerDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSpatialTfGridGeneratorForward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSpatialTfGridGeneratorBackward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSpatialTfSamplerForward","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSpatialTfSamplerBackward","","",null,[[],["cudnnstatus_t"]]],[6,"cudnnDropoutDescriptor_t","","",null,null],[5,"cudnnCreateDropoutDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyDropoutDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDropoutGetStatesSize","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDropoutGetReserveSpaceSize","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetDropoutDescriptor","","",null,[[["f32"],["usize"],["u64"]],["cudnnstatus_t"]]],[5,"cudnnRestoreDropoutDescriptor","","",null,[[["f32"],["usize"],["u64"]],["cudnnstatus_t"]]],[5,"cudnnGetDropoutDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDropoutForward","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnDropoutBackward","","",null,[[["usize"]],["cudnnstatus_t"]]],[6,"cudnnRNNDescriptor_t","","",null,null],[6,"cudnnPersistentRNNPlan_t","","",null,null],[6,"cudnnRNNDataDescriptor_t","","",null,null],[5,"cudnnCreateRNNDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyRNNDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetRNNDescriptor","","",null,[[["cudnnrnnalgo_t"],["i32"],["cudnnrnninputmode_t"],["cudnndirectionmode_t"],["cudnnrnnmode_t"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetRNNMatrixMathType","","",null,[[["cudnnmathtype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNMatrixMathType","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetRNNBiasMode","","",null,[[["cudnnrnnbiasmode_t"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNBiasMode","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnRNNSetClip","","",null,[[["f64"],["cudnnrnnclipmode_t"],["cudnnnanpropagation_t"]],["cudnnstatus_t"]]],[5,"cudnnRNNGetClip","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetRNNProjectionLayers","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNProjectionLayers","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreatePersistentRNNPlan","","",null,[[["i32"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnDestroyPersistentRNNPlan","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetPersistentRNNPlan","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetRNNWorkspaceSize","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNTrainingReserveSize","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNParamsSize","","",null,[[["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNLinLayerMatrixParams","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNLinLayerBiasParams","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnRNNForwardInference","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnRNNForwardTraining","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnRNNBackwardData","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnRNNBackwardWeights","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnSetRNNPaddingMode","","",null,[[["cudnnrnnpaddingmode_t"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNPaddingMode","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateRNNDataDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyRNNDataDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetRNNDataDescriptor","","",null,[[["i32"],["cudnndatatype_t"],["cudnnrnndatalayout_t"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNDataDescriptor","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnRNNForwardTrainingEx","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnRNNForwardInferenceEx","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnRNNBackwardDataEx","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnRNNBackwardWeightsEx","","",null,[[["usize"]],["cudnnstatus_t"]]],[6,"cudnnAlgorithmDescriptor_t","","",null,null],[6,"cudnnAlgorithmPerformance_t","","",null,null],[5,"cudnnSetRNNAlgorithmDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetRNNForwardInferenceAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindRNNForwardInferenceAlgorithmEx","","",null,[[["i32"],["f32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNForwardTrainingAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindRNNForwardTrainingAlgorithmEx","","",null,[[["i32"],["f32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNBackwardDataAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindRNNBackwardDataAlgorithmEx","","",null,[[["i32"],["f32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetRNNBackwardWeightsAlgorithmMaxCount","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFindRNNBackwardWeightsAlgorithmEx","","",null,[[["i32"],["f32"],["usize"]],["cudnnstatus_t"]]],[6,"cudnnSeqDataDescriptor_t","","",null,null],[5,"cudnnCreateSeqDataDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroySeqDataDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetSeqDataDescriptor","","",null,[[["i32"],["cudnndatatype_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetSeqDataDescriptor","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[6,"cudnnAttnQueryMap_t","","",null,null],[6,"cudnnAttnDescriptor_t","","",null,null],[5,"cudnnCreateAttnDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyAttnDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetAttnDescriptor","","",null,[[["u32"],["i32"],["cudnnmathtype_t"],["f64"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnGetAttnDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetMultiHeadAttnBuffers","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetMultiHeadAttnWeights","","",null,[[["usize"],["cudnnmultiheadattnweightkind_t"]],["cudnnstatus_t"]]],[5,"cudnnMultiHeadAttnForward","","",null,[[["i32"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnMultiHeadAttnBackwardData","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnMultiHeadAttnBackwardWeights","","",null,[[["usize"],["cudnnwgradmode_t"]],["cudnnstatus_t"]]],[5,"cudnnCreateCTCLossDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetCTCLossDescriptor","","",null,[[["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnSetCTCLossDescriptorEx","","",null,[[["cudnnnanpropagation_t"],["cudnndatatype_t"],["cudnnlossnormalizationmode_t"]],["cudnnstatus_t"]]],[5,"cudnnGetCTCLossDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnGetCTCLossDescriptorEx","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyCTCLossDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCTCLoss","","",null,[[["cudnnctclossalgo_t"],["usize"]],["cudnnstatus_t"]]],[5,"cudnnGetCTCLossWorkspaceSize","","",null,[[["cudnnctclossalgo_t"]],["cudnnstatus_t"]]],[5,"cudnnCreateAlgorithmDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetAlgorithmDescriptor","","",null,[[["cudnnalgorithm_t"]],["cudnnstatus_t"]]],[5,"cudnnGetAlgorithmDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCopyAlgorithmDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyAlgorithmDescriptor","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnCreateAlgorithmPerformance","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnSetAlgorithmPerformance","","",null,[[["f32"],["usize"],["cudnnstatus_t"]],["cudnnstatus_t"]]],[5,"cudnnGetAlgorithmPerformance","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnDestroyAlgorithmPerformance","","",null,[[["i32"]],["cudnnstatus_t"]]],[5,"cudnnGetAlgorithmSpaceSize","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSaveAlgorithm","","",null,[[["usize"]],["cudnnstatus_t"]]],[5,"cudnnRestoreAlgorithm","","",null,[[["usize"]],["cudnnstatus_t"]]],[6,"cudnnCallback_t","","",null,null],[5,"cudnnSetCallback","","",null,[[["option"],["u32"]],["cudnnstatus_t"]]],[5,"cudnnGetCallback","","",null,[[],["cudnnstatus_t"]]],[6,"cudnnFusedOpsConstParamPack_t","","",null,null],[6,"cudnnFusedOpsVariantParamPack_t","","",null,null],[6,"cudnnFusedOpsPlan_t","","",null,null],[5,"cudnnCreateFusedOpsConstParamPack","","",null,[[["cudnnfusedops_t"]],["cudnnstatus_t"]]],[5,"cudnnDestroyFusedOpsConstParamPack","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetFusedOpsConstParamPackAttribute","","",null,[[["cudnnfusedopsconstparamlabel_t"]],["cudnnstatus_t"]]],[5,"cudnnGetFusedOpsConstParamPackAttribute","","",null,[[["cudnnfusedopsconstparamlabel_t"]],["cudnnstatus_t"]]],[5,"cudnnCreateFusedOpsVariantParamPack","","",null,[[["cudnnfusedops_t"]],["cudnnstatus_t"]]],[5,"cudnnDestroyFusedOpsVariantParamPack","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetFusedOpsVariantParamPackAttribute","","",null,[[["cudnnfusedopsvariantparamlabel_t"]],["cudnnstatus_t"]]],[5,"cudnnGetFusedOpsVariantParamPackAttribute","","",null,[[["cudnnfusedopsvariantparamlabel_t"]],["cudnnstatus_t"]]],[5,"cudnnCreateFusedOpsPlan","","",null,[[["cudnnfusedops_t"]],["cudnnstatus_t"]]],[5,"cudnnDestroyFusedOpsPlan","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnMakeFusedOpsPlan","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnFusedOpsExecute","","",null,[[],["cudnnstatus_t"]]],[5,"cudnnSetRNNDescriptor_v6","","",null,[[["cudnnrnnalgo_t"],["i32"],["cudnnrnninputmode_t"],["cudnndirectionmode_t"],["cudnnrnnmode_t"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[5,"cudnnSetRNNDescriptor_v5","","",null,[[["cudnndirectionmode_t"],["cudnnrnnmode_t"],["i32"],["cudnnrnninputmode_t"],["cudnndatatype_t"]],["cudnnstatus_t"]]],[3,"char1","","",null,null],[12,"x","","",0,null],[3,"uchar1","","",null,null],[12,"x","","",1,null],[3,"char2","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[3,"uchar2","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"char3","","",null,null],[12,"x","","",4,null],[12,"y","","",4,null],[12,"z","","",4,null],[3,"uchar3","","",null,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"z","","",5,null],[3,"char4","","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"z","","",6,null],[12,"w","","",6,null],[3,"uchar4","","",null,null],[12,"x","","",7,null],[12,"y","","",7,null],[12,"z","","",7,null],[12,"w","","",7,null],[3,"short1","","",null,null],[12,"x","","",8,null],[3,"ushort1","","",null,null],[12,"x","","",9,null],[3,"short2","","",null,null],[12,"x","","",10,null],[12,"y","","",10,null],[3,"ushort2","","",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[3,"short3","","",null,null],[12,"x","","",12,null],[12,"y","","",12,null],[12,"z","","",12,null],[3,"ushort3","","",null,null],[12,"x","","",13,null],[12,"y","","",13,null],[12,"z","","",13,null],[3,"short4","","",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[12,"z","","",14,null],[12,"w","","",14,null],[3,"ushort4","","",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[12,"z","","",15,null],[12,"w","","",15,null],[3,"int1","","",null,null],[12,"x","","",16,null],[3,"uint1","","",null,null],[12,"x","","",17,null],[3,"int2","","",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[3,"uint2","","",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[3,"int3","","",null,null],[12,"x","","",20,null],[12,"y","","",20,null],[12,"z","","",20,null],[3,"uint3","","",null,null],[12,"x","","",21,null],[12,"y","","",21,null],[12,"z","","",21,null],[3,"int4","","",null,null],[12,"x","","",22,null],[12,"y","","",22,null],[12,"z","","",22,null],[12,"w","","",22,null],[3,"uint4","","",null,null],[12,"x","","",23,null],[12,"y","","",23,null],[12,"z","","",23,null],[12,"w","","",23,null],[3,"long1","","",null,null],[12,"x","","",24,null],[3,"ulong1","","",null,null],[12,"x","","",25,null],[3,"long2","","",null,null],[12,"x","","",26,null],[12,"y","","",26,null],[3,"ulong2","","",null,null],[12,"x","","",27,null],[12,"y","","",27,null],[3,"long3","","",null,null],[12,"x","","",28,null],[12,"y","","",28,null],[12,"z","","",28,null],[3,"ulong3","","",null,null],[12,"x","","",29,null],[12,"y","","",29,null],[12,"z","","",29,null],[3,"long4","","",null,null],[12,"x","","",30,null],[12,"y","","",30,null],[12,"z","","",30,null],[12,"w","","",30,null],[3,"ulong4","","",null,null],[12,"x","","",31,null],[12,"y","","",31,null],[12,"z","","",31,null],[12,"w","","",31,null],[3,"float1","","",null,null],[12,"x","","",32,null],[3,"float2","","",null,null],[12,"x","","",33,null],[12,"y","","",33,null],[3,"float3","","",null,null],[12,"x","","",34,null],[12,"y","","",34,null],[12,"z","","",34,null],[3,"float4","","",null,null],[12,"x","","",35,null],[12,"y","","",35,null],[12,"z","","",35,null],[12,"w","","",35,null],[3,"longlong1","","",null,null],[12,"x","","",36,null],[3,"ulonglong1","","",null,null],[12,"x","","",37,null],[3,"longlong2","","",null,null],[12,"x","","",38,null],[12,"y","","",38,null],[3,"ulonglong2","","",null,null],[12,"x","","",39,null],[12,"y","","",39,null],[3,"longlong3","","",null,null],[12,"x","","",40,null],[12,"y","","",40,null],[12,"z","","",40,null],[3,"ulonglong3","","",null,null],[12,"x","","",41,null],[12,"y","","",41,null],[12,"z","","",41,null],[3,"longlong4","","",null,null],[12,"x","","",42,null],[12,"y","","",42,null],[12,"z","","",42,null],[12,"w","","",42,null],[3,"ulonglong4","","",null,null],[12,"x","","",43,null],[12,"y","","",43,null],[12,"z","","",43,null],[12,"w","","",43,null],[3,"double1","","",null,null],[12,"x","","",44,null],[3,"double2","","",null,null],[12,"x","","",45,null],[12,"y","","",45,null],[3,"double3","","",null,null],[12,"x","","",46,null],[12,"y","","",46,null],[12,"z","","",46,null],[3,"double4","","",null,null],[12,"x","","",47,null],[12,"y","","",47,null],[12,"z","","",47,null],[12,"w","","",47,null],[3,"dim3","","",null,null],[12,"x","","",48,null],[12,"y","","",48,null],[12,"z","","",48,null],[3,"__crt_locale_data_public","","",null,null],[12,"_locale_pctype","","",49,null],[12,"_locale_mb_cur_max","","",49,null],[12,"_locale_lc_codepage","","",49,null],[3,"__crt_locale_pointers","","",null,null],[12,"locinfo","","",50,null],[12,"mbcinfo","","",50,null],[3,"_Mbstatet","","",null,null],[12,"_Wchar","","",51,null],[12,"_Byte","","",51,null],[12,"_State","","",51,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",52,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",52,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",52,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",52,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",52,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",52,null],[13,"cudaErrorProfilerNotInitialized","","\\deprecated This error return is deprecated as of CUDA…",52,null],[13,"cudaErrorProfilerAlreadyStarted","","\\deprecated This error return is deprecated as of CUDA…",52,null],[13,"cudaErrorProfilerAlreadyStopped","","\\deprecated This error return is deprecated as of CUDA…",52,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",52,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",52,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",52,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",52,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",52,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",52,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",52,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",52,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",52,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",52,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",52,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",52,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",52,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",52,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",52,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",52,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",52,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",52,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",52,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",52,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",52,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",52,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",52,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",52,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",52,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",52,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",52,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",52,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",52,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",52,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",52,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",52,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",52,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",52,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",52,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",52,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",52,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",52,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",52,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",52,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",52,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",52,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",52,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",52,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",52,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",52,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",52,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",52,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",52,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",52,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",52,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",52,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",52,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",52,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",52,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",52,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",52,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",52,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",52,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",52,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",52,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",52,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",52,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",52,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",52,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",52,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",52,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",52,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",52,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",52,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",52,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",52,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",52,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",52,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",52,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",52,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",52,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",52,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",52,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",52,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",52,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",52,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",52,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",52,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",52,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",52,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",52,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",52,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",52,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",52,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",52,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",52,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",52,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",52,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",52,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",52,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",52,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",52,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",52,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",52,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",52,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",53,null],[12,"y","","< y",53,null],[12,"z","","< z",53,null],[12,"w","","< w",53,null],[12,"f","","< Channel format kind",53,null],[3,"cudaArray","","",null,null],[3,"cudaMipmappedArray","","",null,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",54,null],[12,"pitch","","< Pitch of allocated memory in bytes",54,null],[12,"xsize","","< Logical width of allocation in elements",54,null],[12,"ysize","","< Logical height of allocation in elements",54,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in…",55,null],[12,"height","","< Height in elements",55,null],[12,"depth","","< Depth in elements",55,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",56,null],[12,"y","","< y",56,null],[12,"z","","< z",56,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",57,null],[12,"srcPos","","< Source position offset",57,null],[12,"srcPtr","","< Pitched source memory address",57,null],[12,"dstArray","","< Destination memory address",57,null],[12,"dstPos","","< Destination position offset",57,null],[12,"dstPtr","","< Pitched destination memory address",57,null],[12,"extent","","< Requested memory copy size",57,null],[12,"kind","","< Type of transfer",57,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",58,null],[12,"srcPos","","< Source position offset",58,null],[12,"srcPtr","","< Pitched source memory address",58,null],[12,"srcDevice","","< Source device",58,null],[12,"dstArray","","< Destination memory address",58,null],[12,"dstPos","","< Destination position offset",58,null],[12,"dstPtr","","< Pitched destination memory address",58,null],[12,"dstDevice","","< Destination device",58,null],[12,"extent","","< Requested memory copy size",58,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",59,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height is 1",59,null],[12,"value","","< Value to be set",59,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",59,null],[12,"width","","< Width in bytes, of the row",59,null],[12,"height","","< Number of rows",59,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",60,null],[12,"userData","","< Argument to pass to the function",60,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",61,null],[12,"res","","",61,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",62,null],[12,"mipmap","","",62,null],[12,"linear","","",62,null],[12,"pitch2D","","",62,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",63,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",64,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",65,null],[12,"desc","","< Channel descriptor",65,null],[12,"sizeInBytes","","< Size in bytes",65,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",66,null],[12,"desc","","< Channel descriptor",66,null],[12,"width","","< Width of the array in elements",66,null],[12,"height","","< Height of the array in elements",66,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",66,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",67,null],[12,"width","","< Width of the resource view",67,null],[12,"height","","< Height of the resource view",67,null],[12,"depth","","< Depth of the resource view",67,null],[12,"firstMipmapLevel","","< First defined mipmap level",67,null],[12,"lastMipmapLevel","","< Last defined mipmap level",67,null],[12,"firstLayer","","< First layer index",67,null],[12,"lastLayer","","< Last layer index",67,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"memoryType","","\\deprecated",68,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered,…",68,null],[12,"device","","The device against which the memory was allocated or…",68,null],[12,"devicePointer","","The address which may be dereferenced on the current…",68,null],[12,"hostPointer","","The address which may be dereferenced on the host to…",68,null],[12,"isManaged","","\\deprecated",68,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory…",69,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory…",69,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of…",69,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a…",69,null],[12,"numRegs","","The number of registers used by each thread of this…",69,null],[12,"ptxVersion","","The PTX virtual architecture version for which the…",69,null],[12,"binaryVersion","","The binary architecture version for which the function was…",69,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been…",69,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per…",69,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the…",69,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",70,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",71,null],[12,"uuid","","< 16-byte unique identifier",71,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on…",71,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and…",71,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",71,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",71,null],[12,"regsPerBlock","","< 32-bit registers available per block",71,null],[12,"warpSize","","< Warp size in threads",71,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",71,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",71,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",71,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",71,null],[12,"clockRate","","< Clock frequency in kilohertz",71,null],[12,"totalConstMem","","< Constant memory available on device in bytes",71,null],[12,"major","","< Major compute capability",71,null],[12,"minor","","< Minor compute capability",71,null],[12,"textureAlignment","","< Alignment requirement for textures",71,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references bound…",71,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a…",71,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",71,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",71,null],[12,"integrated","","< Device is integrated as opposed to discrete",71,null],[12,"canMapHostMemory","","< Device can map host memory with…",71,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",71,null],[12,"maxTexture1D","","< Maximum 1D texture size",71,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",71,null],[12,"maxTexture1DLinear","","< Maximum size for 1D textures bound to linear memory",71,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",71,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",71,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D…",71,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather…",71,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",71,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",71,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",71,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",71,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",71,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",71,null],[12,"maxSurface1D","","< Maximum 1D surface size",71,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",71,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",71,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",71,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",71,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",71,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",71,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",71,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels concurrently",71,null],[12,"ECCEnabled","","< Device has ECC support enabled",71,null],[12,"pciBusID","","< PCI bus ID of the device",71,null],[12,"pciDeviceID","","< PCI device ID of the device",71,null],[12,"pciDomainID","","< PCI domain ID of the device",71,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0…",71,null],[12,"asyncEngineCount","","< Number of asynchronous engines",71,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",71,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",71,null],[12,"memoryBusWidth","","< Global memory bus width in bits",71,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",71,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",71,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",71,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",71,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",71,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",71,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",71,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",71,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",71,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",71,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native…",71,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",71,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory…",71,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory concurrently…",71,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",71,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",71,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via…",71,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",71,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by…",71,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host's page tables",71,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",71,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",72,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",73,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",74,null],[12,"handle","","",74,null],[12,"size","","Size of the memory allocation",74,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",74,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when…",75,null],[12,"win32","","",75,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is…",75,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if 'name' is non-NULL",76,null],[12,"name","","Name of a valid memory object. Must be NULL if 'handle' is…",76,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer's base is",77,null],[12,"size","","Size of the buffer",77,null],[12,"flags","","Flags reserved for future use. Must be zero.",77,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the…",78,null],[12,"formatDesc","","Format of base level of the mipmap chain",78,null],[12,"extent","","Dimensions of base level of the mipmap chain",78,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See…",78,null],[12,"numLevels","","Total number of levels in the mipmap chain",78,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",79,null],[12,"handle","","",79,null],[12,"flags","","Flags reserved for the future. Must be zero.",79,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid…",80,null],[12,"win32","","",80,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",80,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if 'name' is non-NULL",81,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL if…",81,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore  signal parameters",null,null],[12,"params","","",82,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",82,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",83,null],[12,"nvSciSync","","",83,null],[12,"keyedMutex","","",83,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",84,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",85,null],[12,"reserved","","",85,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",86,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters",null,null],[12,"params","","",87,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",87,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",88,null],[12,"nvSciSync","","",88,null],[12,"keyedMutex","","",88,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",89,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",90,null],[12,"reserved","","",90,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",91,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",91,null],[3,"CUstream_st","","",null,null],[3,"CUevent_st","","",null,null],[3,"CUexternalMemory_st","","",null,null],[3,"CUexternalSemaphore_st","","",null,null],[3,"CUgraph_st","","",null,null],[3,"CUgraphNode_st","","",null,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",92,null],[12,"gridDim","","< Grid dimentions",92,null],[12,"blockDim","","< Block dimentions",92,null],[12,"args","","< Arguments",92,null],[12,"sharedMem","","< Shared memory",92,null],[12,"stream","","< Stream identifier",92,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",93,null],[12,"gridDim","","< Grid dimensions",93,null],[12,"blockDim","","< Block dimensions",93,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",93,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",93,null],[12,"extra","","< Pointer to kernel arguments in the \"extra\" format",93,null],[3,"CUgraphExec_st","","",null,null],[3,"surfaceReference","","CUDA Surface reference",null,null],[12,"channelDesc","","Channel descriptor for surface reference",94,null],[3,"textureReference","","CUDA texture reference",null,null],[12,"normalized","","Indicates whether texture reads are normalized or not",95,null],[12,"filterMode","","Texture filter mode",95,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",95,null],[12,"channelDesc","","Channel descriptor for the texture reference",95,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",95,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",95,null],[12,"mipmapFilterMode","","Mipmap filter mode",95,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",95,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",95,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",95,null],[12,"__cudaReserved","","",95,null],[3,"cudaTextureDesc","","CUDA texture descriptor",null,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",96,null],[12,"filterMode","","Texture filter mode",96,null],[12,"readMode","","Texture read mode",96,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",96,null],[12,"borderColor","","Texture Border Color",96,null],[12,"normalizedCoords","","Indicates whether texture reads are normalized or not",96,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",96,null],[12,"mipmapFilterMode","","Mipmap filter mode",96,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",96,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",96,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",96,null],[3,"cudnnContext","","",null,null],[4,"cudnnStatus_t","","",null,null],[13,"CUDNN_STATUS_SUCCESS","","",97,null],[13,"CUDNN_STATUS_NOT_INITIALIZED","","",97,null],[13,"CUDNN_STATUS_ALLOC_FAILED","","",97,null],[13,"CUDNN_STATUS_BAD_PARAM","","",97,null],[13,"CUDNN_STATUS_INTERNAL_ERROR","","",97,null],[13,"CUDNN_STATUS_INVALID_VALUE","","",97,null],[13,"CUDNN_STATUS_ARCH_MISMATCH","","",97,null],[13,"CUDNN_STATUS_MAPPING_ERROR","","",97,null],[13,"CUDNN_STATUS_EXECUTION_FAILED","","",97,null],[13,"CUDNN_STATUS_NOT_SUPPORTED","","",97,null],[13,"CUDNN_STATUS_LICENSE_ERROR","","",97,null],[13,"CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","","",97,null],[13,"CUDNN_STATUS_RUNTIME_IN_PROGRESS","","",97,null],[13,"CUDNN_STATUS_RUNTIME_FP_OVERFLOW","","",97,null],[3,"cudnnRuntimeTag_t","","",null,null],[4,"cudnnErrQueryMode_t","","",null,null],[13,"CUDNN_ERRQUERY_RAWCODE","","",98,null],[13,"CUDNN_ERRQUERY_NONBLOCKING","","",98,null],[13,"CUDNN_ERRQUERY_BLOCKING","","",98,null],[3,"cudnnTensorStruct","","",null,null],[3,"cudnnConvolutionStruct","","",null,null],[3,"cudnnPoolingStruct","","",null,null],[3,"cudnnFilterStruct","","",null,null],[3,"cudnnLRNStruct","","",null,null],[3,"cudnnActivationStruct","","",null,null],[3,"cudnnSpatialTransformerStruct","","",null,null],[3,"cudnnOpTensorStruct","","",null,null],[3,"cudnnReduceTensorStruct","","",null,null],[3,"cudnnCTCLossStruct","","",null,null],[3,"cudnnTensorTransformStruct","","",null,null],[4,"cudnnDataType_t","","",null,null],[13,"CUDNN_DATA_FLOAT","","",99,null],[13,"CUDNN_DATA_DOUBLE","","",99,null],[13,"CUDNN_DATA_HALF","","",99,null],[13,"CUDNN_DATA_INT8","","",99,null],[13,"CUDNN_DATA_INT32","","",99,null],[13,"CUDNN_DATA_INT8x4","","",99,null],[13,"CUDNN_DATA_UINT8","","",99,null],[13,"CUDNN_DATA_UINT8x4","","",99,null],[13,"CUDNN_DATA_INT8x32","","",99,null],[4,"cudnnMathType_t","","",null,null],[13,"CUDNN_DEFAULT_MATH","","",100,null],[13,"CUDNN_TENSOR_OP_MATH","","",100,null],[13,"CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","","",100,null],[4,"cudnnNanPropagation_t","","",null,null],[13,"CUDNN_NOT_PROPAGATE_NAN","","",101,null],[13,"CUDNN_PROPAGATE_NAN","","",101,null],[4,"cudnnDeterminism_t","","",null,null],[13,"CUDNN_NON_DETERMINISTIC","","",102,null],[13,"CUDNN_DETERMINISTIC","","",102,null],[4,"cudnnReorderType_t","","",null,null],[13,"CUDNN_DEFAULT_REORDER","","",103,null],[13,"CUDNN_NO_REORDER","","",103,null],[4,"cudnnTensorFormat_t","","",null,null],[13,"CUDNN_TENSOR_NCHW","","",104,null],[13,"CUDNN_TENSOR_NHWC","","",104,null],[13,"CUDNN_TENSOR_NCHW_VECT_C","","",104,null],[4,"cudnnFoldingDirection_t","","",null,null],[13,"CUDNN_TRANSFORM_FOLD","","",105,null],[13,"CUDNN_TRANSFORM_UNFOLD","","",105,null],[4,"cudnnOpTensorOp_t","","",null,null],[13,"CUDNN_OP_TENSOR_ADD","","",106,null],[13,"CUDNN_OP_TENSOR_MUL","","",106,null],[13,"CUDNN_OP_TENSOR_MIN","","",106,null],[13,"CUDNN_OP_TENSOR_MAX","","",106,null],[13,"CUDNN_OP_TENSOR_SQRT","","",106,null],[13,"CUDNN_OP_TENSOR_NOT","","",106,null],[4,"cudnnReduceTensorOp_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_ADD","","",107,null],[13,"CUDNN_REDUCE_TENSOR_MUL","","",107,null],[13,"CUDNN_REDUCE_TENSOR_MIN","","",107,null],[13,"CUDNN_REDUCE_TENSOR_MAX","","",107,null],[13,"CUDNN_REDUCE_TENSOR_AMAX","","",107,null],[13,"CUDNN_REDUCE_TENSOR_AVG","","",107,null],[13,"CUDNN_REDUCE_TENSOR_NORM1","","",107,null],[13,"CUDNN_REDUCE_TENSOR_NORM2","","",107,null],[13,"CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","","",107,null],[4,"cudnnReduceTensorIndices_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_NO_INDICES","","",108,null],[13,"CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","","",108,null],[4,"cudnnIndicesType_t","","",null,null],[13,"CUDNN_32BIT_INDICES","","",109,null],[13,"CUDNN_64BIT_INDICES","","",109,null],[13,"CUDNN_16BIT_INDICES","","",109,null],[13,"CUDNN_8BIT_INDICES","","",109,null],[4,"cudnnConvolutionMode_t","","",null,null],[13,"CUDNN_CONVOLUTION","","",110,null],[13,"CUDNN_CROSS_CORRELATION","","",110,null],[4,"cudnnConvolutionFwdPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_NO_WORKSPACE","","",111,null],[13,"CUDNN_CONVOLUTION_FWD_PREFER_FASTEST","","",111,null],[13,"CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT","","",111,null],[4,"cudnnConvolutionFwdAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_GEMM","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","","",112,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_COUNT","","",112,null],[3,"cudnnConvolutionFwdAlgoPerf_t","","",null,null],[12,"algo","","",113,null],[12,"status","","",113,null],[12,"time","","",113,null],[12,"memory","","",113,null],[12,"determinism","","",113,null],[12,"mathType","","",113,null],[12,"reserved","","",113,null],[4,"cudnnConvolutionBwdFilterPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_NO_WORKSPACE","","",114,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_PREFER_FASTEST","","",114,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_SPECIFY_WORKSPACE_LIMIT","","",114,null],[4,"cudnnConvolutionBwdFilterAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","","",115,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","","",115,null],[3,"cudnnConvolutionBwdFilterAlgoPerf_t","","",null,null],[12,"algo","","",116,null],[12,"status","","",116,null],[12,"time","","",116,null],[12,"memory","","",116,null],[12,"determinism","","",116,null],[12,"mathType","","",116,null],[12,"reserved","","",116,null],[4,"cudnnConvolutionBwdDataPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_NO_WORKSPACE","","",117,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_PREFER_FASTEST","","",117,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_SPECIFY_WORKSPACE_LIMIT","","",117,null],[4,"cudnnConvolutionBwdDataAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","","",118,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","","",118,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","","",118,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","","",118,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","","",118,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","","",118,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","","",118,null],[3,"cudnnConvolutionBwdDataAlgoPerf_t","","",null,null],[12,"algo","","",119,null],[12,"status","","",119,null],[12,"time","","",119,null],[12,"memory","","",119,null],[12,"determinism","","",119,null],[12,"mathType","","",119,null],[12,"reserved","","",119,null],[4,"cudnnSoftmaxAlgorithm_t","","",null,null],[13,"CUDNN_SOFTMAX_FAST","","",120,null],[13,"CUDNN_SOFTMAX_ACCURATE","","",120,null],[13,"CUDNN_SOFTMAX_LOG","","",120,null],[4,"cudnnSoftmaxMode_t","","",null,null],[13,"CUDNN_SOFTMAX_MODE_INSTANCE","","",121,null],[13,"CUDNN_SOFTMAX_MODE_CHANNEL","","",121,null],[4,"cudnnPoolingMode_t","","",null,null],[13,"CUDNN_POOLING_MAX","","",122,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","","",122,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","","",122,null],[13,"CUDNN_POOLING_MAX_DETERMINISTIC","","",122,null],[4,"cudnnActivationMode_t","","",null,null],[13,"CUDNN_ACTIVATION_SIGMOID","","",123,null],[13,"CUDNN_ACTIVATION_RELU","","",123,null],[13,"CUDNN_ACTIVATION_TANH","","",123,null],[13,"CUDNN_ACTIVATION_CLIPPED_RELU","","",123,null],[13,"CUDNN_ACTIVATION_ELU","","",123,null],[13,"CUDNN_ACTIVATION_IDENTITY","","",123,null],[4,"cudnnLRNMode_t","","",null,null],[13,"CUDNN_LRN_CROSS_CHANNEL_DIM1","","",124,null],[4,"cudnnDivNormMode_t","","",null,null],[13,"CUDNN_DIVNORM_PRECOMPUTED_MEANS","","",125,null],[4,"cudnnBatchNormMode_t","","",null,null],[13,"CUDNN_BATCHNORM_PER_ACTIVATION","","",126,null],[13,"CUDNN_BATCHNORM_SPATIAL","","",126,null],[13,"CUDNN_BATCHNORM_SPATIAL_PERSISTENT","","",126,null],[4,"cudnnBatchNormOps_t","","",null,null],[13,"CUDNN_BATCHNORM_OPS_BN","","",127,null],[13,"CUDNN_BATCHNORM_OPS_BN_ACTIVATION","","",127,null],[13,"CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","","",127,null],[4,"cudnnSamplerType_t","","",null,null],[13,"CUDNN_SAMPLER_BILINEAR","","",128,null],[3,"cudnnDropoutStruct","","",null,null],[4,"cudnnRNNAlgo_t","","",null,null],[13,"CUDNN_RNN_ALGO_STANDARD","","",129,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC","","",129,null],[13,"CUDNN_RNN_ALGO_PERSIST_DYNAMIC","","",129,null],[13,"CUDNN_RNN_ALGO_COUNT","","",129,null],[4,"cudnnRNNMode_t","","",null,null],[13,"CUDNN_RNN_RELU","","",130,null],[13,"CUDNN_RNN_TANH","","",130,null],[13,"CUDNN_LSTM","","",130,null],[13,"CUDNN_GRU","","",130,null],[4,"cudnnRNNBiasMode_t","","",null,null],[13,"CUDNN_RNN_NO_BIAS","","",131,null],[13,"CUDNN_RNN_SINGLE_INP_BIAS","","",131,null],[13,"CUDNN_RNN_DOUBLE_BIAS","","",131,null],[13,"CUDNN_RNN_SINGLE_REC_BIAS","","",131,null],[4,"cudnnDirectionMode_t","","",null,null],[13,"CUDNN_UNIDIRECTIONAL","","",132,null],[13,"CUDNN_BIDIRECTIONAL","","",132,null],[4,"cudnnRNNInputMode_t","","",null,null],[13,"CUDNN_LINEAR_INPUT","","",133,null],[13,"CUDNN_SKIP_INPUT","","",133,null],[4,"cudnnRNNClipMode_t","","",null,null],[13,"CUDNN_RNN_CLIP_NONE","","",134,null],[13,"CUDNN_RNN_CLIP_MINMAX","","",134,null],[4,"cudnnRNNDataLayout_t","","",null,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","","",135,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","","",135,null],[13,"CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","","",135,null],[4,"cudnnRNNPaddingMode_t","","",null,null],[13,"CUDNN_RNN_PADDED_IO_DISABLED","","",136,null],[13,"CUDNN_RNN_PADDED_IO_ENABLED","","",136,null],[3,"cudnnRNNStruct","","",null,null],[3,"cudnnPersistentRNNPlan","","",null,null],[3,"cudnnRNNDataStruct","","",null,null],[3,"cudnnAlgorithmStruct","","",null,null],[3,"cudnnAlgorithmPerformanceStruct","","",null,null],[4,"cudnnSeqDataAxis_t","","",null,null],[13,"CUDNN_SEQDATA_TIME_DIM","","",137,null],[13,"CUDNN_SEQDATA_BATCH_DIM","","",137,null],[13,"CUDNN_SEQDATA_BEAM_DIM","","",137,null],[13,"CUDNN_SEQDATA_VECT_DIM","","",137,null],[3,"cudnnSeqDataStruct","","",null,null],[3,"cudnnAttnStruct","","",null,null],[4,"cudnnMultiHeadAttnWeightKind_t","","",null,null],[13,"CUDNN_MH_ATTN_Q_WEIGHTS","","",138,null],[13,"CUDNN_MH_ATTN_K_WEIGHTS","","",138,null],[13,"CUDNN_MH_ATTN_V_WEIGHTS","","",138,null],[13,"CUDNN_MH_ATTN_O_WEIGHTS","","",138,null],[13,"CUDNN_MH_ATTN_Q_BIASES","","",138,null],[13,"CUDNN_MH_ATTN_K_BIASES","","",138,null],[13,"CUDNN_MH_ATTN_V_BIASES","","",138,null],[13,"CUDNN_MH_ATTN_O_BIASES","","",138,null],[4,"cudnnWgradMode_t","","",null,null],[13,"CUDNN_WGRAD_MODE_ADD","","",139,null],[13,"CUDNN_WGRAD_MODE_SET","","",139,null],[4,"cudnnCTCLossAlgo_t","","",null,null],[13,"CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","","",140,null],[13,"CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","","",140,null],[4,"cudnnLossNormalizationMode_t","","",null,null],[13,"CUDNN_LOSS_NORMALIZATION_NONE","","",141,null],[13,"CUDNN_LOSS_NORMALIZATION_SOFTMAX","","",141,null],[3,"cudnnAlgorithm_t","","",null,null],[12,"algo","","",142,null],[19,"cudnnAlgorithm_t_Algorithm","","",null,null],[12,"convFwdAlgo","","",143,null],[12,"convBwdFilterAlgo","","",143,null],[12,"convBwdDataAlgo","","",143,null],[12,"RNNAlgo","","",143,null],[12,"CTCLossAlgo","","",143,null],[4,"cudnnSeverity_t","","",null,null],[13,"CUDNN_SEV_FATAL","","",144,null],[13,"CUDNN_SEV_ERROR","","",144,null],[13,"CUDNN_SEV_WARNING","","",144,null],[13,"CUDNN_SEV_INFO","","",144,null],[3,"cudnnDebug_t","","",null,null],[12,"cudnn_version","","",145,null],[12,"cudnnStatus","","",145,null],[12,"time_sec","","",145,null],[12,"time_usec","","",145,null],[12,"time_delta","","",145,null],[12,"handle","","",145,null],[12,"stream","","",145,null],[12,"pid","","",145,null],[12,"tid","","",145,null],[12,"cudaDeviceId","","",145,null],[12,"reserved","","",145,null],[3,"cudnnFusedOpsConstParamStruct","","",null,null],[3,"cudnnFusedOpsVariantParamStruct","","",null,null],[3,"cudnnFusedOpsPlanStruct","","",null,null],[4,"cudnnFusedOps_t","","",null,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","","",146,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","","",146,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","","",146,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","","",146,null],[13,"CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","","",146,null],[13,"CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","","",146,null],[13,"CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","","",146,null],[4,"cudnnFusedOpsConstParamLabel_t","","",null,null],[13,"CUDNN_PARAM_XDESC","","",147,null],[13,"CUDNN_PARAM_XDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_MODE","","",147,null],[13,"CUDNN_PARAM_BN_EQSCALEBIAS_DESC","","",147,null],[13,"CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_ACTIVATION_DESC","","",147,null],[13,"CUDNN_PARAM_CONV_DESC","","",147,null],[13,"CUDNN_PARAM_WDESC","","",147,null],[13,"CUDNN_PARAM_WDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_DWDESC","","",147,null],[13,"CUDNN_PARAM_DWDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_YDESC","","",147,null],[13,"CUDNN_PARAM_YDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_DYDESC","","",147,null],[13,"CUDNN_PARAM_DYDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_YSTATS_DESC","","",147,null],[13,"CUDNN_PARAM_YSUM_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_YSQSUM_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","","",147,null],[13,"CUDNN_PARAM_BN_SCALE_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_BIAS_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_ZDESC","","",147,null],[13,"CUDNN_PARAM_ZDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","","",147,null],[13,"CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_DESC","","",147,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_DXDESC","","",147,null],[13,"CUDNN_PARAM_DXDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_DZDESC","","",147,null],[13,"CUDNN_PARAM_DZDATA_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","","",147,null],[13,"CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","","",147,null],[4,"cudnnFusedOpsPointerPlaceHolder_t","","",null,null],[13,"CUDNN_PTR_NULL","","",148,null],[13,"CUDNN_PTR_ELEM_ALIGNED","","",148,null],[13,"CUDNN_PTR_16B_ALIGNED","","",148,null],[4,"cudnnFusedOpsVariantParamLabel_t","","",null,null],[13,"CUDNN_PTR_XDATA","","",149,null],[13,"CUDNN_PTR_BN_EQSCALE","","",149,null],[13,"CUDNN_PTR_BN_EQBIAS","","",149,null],[13,"CUDNN_PTR_WDATA","","",149,null],[13,"CUDNN_PTR_DWDATA","","",149,null],[13,"CUDNN_PTR_YDATA","","",149,null],[13,"CUDNN_PTR_DYDATA","","",149,null],[13,"CUDNN_PTR_YSUM","","",149,null],[13,"CUDNN_PTR_YSQSUM","","",149,null],[13,"CUDNN_PTR_WORKSPACE","","",149,null],[13,"CUDNN_PTR_BN_SCALE","","",149,null],[13,"CUDNN_PTR_BN_BIAS","","",149,null],[13,"CUDNN_PTR_BN_SAVED_MEAN","","",149,null],[13,"CUDNN_PTR_BN_SAVED_INVSTD","","",149,null],[13,"CUDNN_PTR_BN_RUNNING_MEAN","","",149,null],[13,"CUDNN_PTR_BN_RUNNING_VAR","","",149,null],[13,"CUDNN_PTR_ZDATA","","",149,null],[13,"CUDNN_PTR_BN_Z_EQSCALE","","",149,null],[13,"CUDNN_PTR_BN_Z_EQBIAS","","",149,null],[13,"CUDNN_PTR_ACTIVATION_BITMASK","","",149,null],[13,"CUDNN_PTR_DXDATA","","",149,null],[13,"CUDNN_PTR_DZDATA","","",149,null],[13,"CUDNN_PTR_BN_DSCALE","","",149,null],[13,"CUDNN_PTR_BN_DBIAS","","",149,null],[13,"CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","","",149,null],[13,"CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","","",149,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","","",149,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EPSILON","","",149,null],[3,"__crt_locale_data","","",null,null],[12,"_address","","",150,null],[3,"__crt_multibyte_data","","",null,null],[12,"_address","","",151,null],[3,"ActivationDescriptor","","Describes a ActivationDescriptor.",null,null],[3,"ConvolutionDescriptor","","Describes a Convolution Descriptor.",null,null],[3,"Cudnn","","Provides a the high-level interface to CUDA's cuDNN.",null,null],[3,"DropoutDescriptor","","Describes a DropoutDescriptor.",null,null],[3,"FilterDescriptor","","Describes a Filter Descriptor.",null,null],[3,"NormalizationDescriptor","","Describes a LRN Descriptor.",null,null],[3,"PoolingDescriptor","","Describes a Pooling Descriptor.",null,null],[3,"TensorDescriptor","","Describes a TensorDescriptor.",null,null],[3,"RnnDescriptor","","Describes a Recurrent Descriptor.",null,null],[3,"API","","Defines the Cuda cuDNN API.",null,null],[4,"Error","","Defines CUDA's cuDNN errors.",null,null],[13,"NotInitialized","","Failure with CUDA cuDNN initialization.",152,null],[13,"AllocFailed","","Failure with allocation.",152,null],[13,"BadParam","","Failure with a provided parameter.",152,null],[13,"InternalError","","Failure with cuDNN.",152,null],[13,"InvalidValue","","Failure with provided value.",152,null],[13,"ArchMismatch","","Failure with the hardware architecture.",152,null],[13,"MappingError","","Failure with memory access or internal error/bug.",152,null],[13,"ExecutionFailed","","Failure with Kernel execution.",152,null],[13,"NotSupported","","Failure with an unsupported request.",152,null],[13,"LicenseError","","Failure CUDA License.",152,null],[13,"Unknown","","Failure",152,null],[11,"new","","Initializes a new CUDA cuDNN Activation Descriptor.",153,[[["cudnnactivationmode_t"]],[["activationdescriptor"],["result",["activationdescriptor","error"]],["error"]]]],[11,"from_c","","Initializes a new CUDA cuDNN Activation Descriptor from…",153,[[["cudnnactivationdescriptor_t"]],["activationdescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN Activation Descriptor as its C type.",153,[[["self"]],["cudnnactivationdescriptor_t"]]],[11,"create_activation_descriptor","","Create a generic CUDA cuDNN ActivationDescriptor.",154,[[],[["result",["cudnnactivationdescriptor_t","error"]],["cudnnactivationdescriptor_t"],["error"]]]],[11,"destroy_activation_descriptor","","Destroys a CUDA cuDNN Activation Descriptor.",154,[[["cudnnactivationdescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_activation_descriptor","","Initializes a generic CUDA cuDNN Activation Descriptor…",154,[[["cudnnactivationmode_t"],["cudnnactivationdescriptor_t"],["f64"],["cudnnnanpropagation_t"]],[["result",["error"]],["error"]]]],[11,"activation_forward","","Computes an activation forward function.",154,[[["cudnnactivationdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"activation_backward","","Computes an activation backward function.",154,[[["cudnnactivationdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"create_filter_descriptor","","Creates a generic CUDA cuDNN Filter Descriptor.",154,[[],[["cudnnfilterdescriptor_t"],["error"],["result",["cudnnfilterdescriptor_t","error"]]]]],[11,"destroy_filter_descriptor","","Destroys a CUDA cuDNN Filter Descriptor.",154,[[["cudnnfilterdescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_filter_descriptor","","Initializes a generic CUDA cuDNN Filter Descriptor with…",154,[[["cudnnfilterdescriptor_t"],["c_int"],["cudnntensorformat_t"],["cudnndatatype_t"]],[["result",["error"]],["error"]]]],[11,"find_convolution_forward_algorithm","","cuDNN Convolution Configuration",154,[[["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["vec","error"]],["error"],["vec",["cudnnconvolutionfwdalgoperf_t"]]]]],[11,"get_convolution_forward_workspace_size","","Returns the workspace size in byte, which are needed for…",154,[[["cudnnconvolutionfwdalgo_t"],["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"find_convolution_backward_filter_algorithm","","Returns the most performant convolutional backward data…",154,[[["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["error"],["vec",["cudnnconvolutionbwdfilteralgoperf_t"]],["result",["vec","error"]]]]],[11,"get_convolution_backward_filter_workspace_size","","Returns the workspace size in byte, which are needed for…",154,[[["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnnconvolutionbwdfilteralgo_t"],["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"find_convolution_backward_data_algorithm","","Returns the most performant convolutional backward data…",154,[[["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["vec","error"]],["vec",["cudnnconvolutionbwddataalgoperf_t"]],["error"]]]],[11,"get_convolution_backward_data_workspace_size","","Returns the workspace size in byte, which are needed for…",154,[[["cudnnconvolutionbwddataalgo_t"],["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"create_convolution_descriptor","","Creates a generic CUDA cuDNN Convolution Descriptor.",154,[[],[["cudnnconvolutiondescriptor_t"],["error"],["result",["cudnnconvolutiondescriptor_t","error"]]]]],[11,"destroy_convolution_descriptor","","Destroys a CUDA cuDNN Convolution Descriptor.",154,[[["cudnnconvolutiondescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_convolution_descriptor","","Initializes a generic CUDA cuDNN Convolution Descriptor…",154,[[["cudnnconvolutiondescriptor_t"],["cudnnconvolutionmode_t"],["c_int"],["cudnndatatype_t"]],[["result",["error"]],["error"]]]],[11,"convolution_forward","","Computes a convolution forward function.",154,[[["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnconvolutionfwdalgo_t"],["cudnnhandle_t"],["size_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"convolution_backward_bias","","Computes a convolution backward function w.r.t the bias.",154,[[["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"convolution_backward_filter","","Computes a convolution backward function w.r.t filter…",154,[[["size_t"],["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnhandle_t"],["cudnnconvolutionbwdfilteralgo_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"convolution_backward_data","","Computes a convolution backward function w.r.t the output…",154,[[["cudnnconvolutiondescriptor_t"],["cudnnfilterdescriptor_t"],["cudnnconvolutionbwddataalgo_t"],["cudnnhandle_t"],["size_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"cuda_allocate_device_memory","","Initialize the CUDA cuDNN API with needed context and…",154,[[["usize"]],[["result",["error"]],["error"]]]],[11,"cuda_free_device_memory","","Destroys the CUDA cuDNN context and resources associated…",154,[[],[["result",["error"]],["error"]]]],[11,"create_dropout_descriptor","","Create a generic CUDA cuDNN DropoutDescriptor",154,[[],[["cudnndropoutdescriptor_t"],["result",["cudnndropoutdescriptor_t","error"]],["error"]]]],[11,"destroy_dropout_descriptor","","Destroys a CUDA cuDNN Dropout Descriptor.",154,[[["cudnndropoutdescriptor_t"]],[["result",["error"]],["error"]]]],[11,"dropout_get_states_size","","Get the states size (GPU memory).",154,[[["cudnnhandle_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"dropout_get_reserve_space_size","","Get the reserve space size.",154,[[["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"set_dropout_descriptor","","Initializes a generic CUDA cuDNN Activation Descriptor…",154,[[["f32"],["usize"],["cudnndropoutdescriptor_t"],["cudnnhandle_t"],["c_ulonglong"]],[["result",["error"]],["error"]]]],[11,"dropout_forward","","Computes the dropout forward function.",154,[[["usize"],["cudnnhandle_t"],["cudnndropoutdescriptor_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"dropout_backward","","Computes the dropout backward function.",154,[[["usize"],["cudnnhandle_t"],["cudnndropoutdescriptor_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"create_lrn_descriptor","","Creates a generic CUDA cuDNN LRN Descriptor.",154,[[],[["result",["cudnnlrndescriptor_t","error"]],["cudnnlrndescriptor_t"],["error"]]]],[11,"destroy_lrn_descriptor","","Destroys a CUDA cuDNN LRN Descriptor.",154,[[["cudnnlrndescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_lrn_descriptor","","Initializes a generic CUDA cuDNN LRN Descriptor with…",154,[[["c_uint"],["cudnnlrndescriptor_t"],["c_double"]],[["result",["error"]],["error"]]]],[11,"lrn_cross_channel_forward","","Computes an LRN cross channel forward function.",154,[[["cudnnlrnmode_t"],["cudnnhandle_t"],["cudnnlrndescriptor_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"lrn_cross_channel_backward","","Computes an LRN cross channel backward function.",154,[[["cudnnlrnmode_t"],["cudnnhandle_t"],["cudnnlrndescriptor_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"divisive_normalization_forward","","Computes an devisive normalization forward function.",154,[[["cudnndivnormmode_t"],["cudnnhandle_t"],["cudnnlrndescriptor_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"divisive_normalization_backward","","Computes an devisive normalization backward function.",154,[[["cudnndivnormmode_t"],["cudnnhandle_t"],["cudnnlrndescriptor_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"create_pooling_descriptor","","Creates a generic CUDA cuDNN Pooling Descriptor.",154,[[],[["result",["cudnnpoolingdescriptor_t","error"]],["cudnnpoolingdescriptor_t"],["error"]]]],[11,"destroy_pooling_descriptor","","Destroys a CUDA cuDNN Pooling Descriptor.",154,[[["cudnnpoolingdescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_pooling_descriptor","","Initializes a generic CUDA cuDNN Pooling Descriptor with…",154,[[["cudnnpoolingdescriptor_t"],["cudnnpoolingmode_t"],["c_int"],["cudnnnanpropagation_t"]],[["result",["error"]],["error"]]]],[11,"get_pooling_descriptor","","Return information about a generic CUDA cuDNN Pooling…",154,[[["cudnnpoolingdescriptor_t"],["c_int"]],[["result",["error"]],["error"]]]],[11,"set_pooling_2d_descriptor","","Initializes a generic CUDA cuDNN Pooling Descriptor with…",154,[[["cudnnpoolingdescriptor_t"],["cudnnpoolingmode_t"],["c_int"],["cudnnnanpropagation_t"]],[["result",["error"]],["error"]]]],[11,"get_pooling_2d_descriptor","","Return information about a generic CUDA cuDNN Pooling…",154,[[["cudnnpoolingdescriptor_t"]],[["result",["error"]],["error"]]]],[11,"get_pooling_forward_output_dim","","Initializes a generic CUDA cuDNN Pooling Descriptor with…",154,[[["cudnnpoolingdescriptor_t"],["c_int"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"pooling_forward","","Computes a pooling forward function.",154,[[["cudnnpoolingdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"pooling_backward","","Computes a pooling backward function.",154,[[["cudnnpoolingdescriptor_t"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"get_rnn_workspace_size","","Returns the workspace size in byte, which are needed for…",154,[[["cudnnrnndescriptor_t"],["i32"],["cudnnhandle_t"],["vec",["cudnntensordescriptor_t"]],["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"get_rnn_training_reserve_size","","Size of Reserve Space for RNN Training…",154,[[["cudnnrnndescriptor_t"],["c_int"],["cudnnhandle_t"],["vec",["cudnntensordescriptor_t"]],["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"get_rnn_params_size","","cudnnGetRNNParamsSize[1] Query the amount of parameter…",154,[[["cudnnrnndescriptor_t"],["datatype"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"create_rnn_descriptor","","Creates a generic CUDA cuDNN RNN Descriptor.",154,[[],[["result",["cudnnrnndescriptor_t","error"]],["cudnnrnndescriptor_t"],["error"]]]],[11,"create_rnn_data_descriptor","","cudnnCreateRNNDataDescriptor()…",154,[[],[["cudnnrnndatadescriptor_t"],["result",["cudnnrnndatadescriptor_t","error"]],["error"]]]],[11,"destroy_rnn_descriptor","","Destroys a CUDA cuDNN RNN Descriptor.",154,[[["cudnnrnndescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_rnn_descriptor","","Initializes a generic CUDA cuDNN RNN Descriptor with…",154,[[["cudnndirectionmode_t"],["i32"],["cudnnrnninputmode_t"],["cudnnrnndescriptor_t"],["cudnnrnnalgo_t"],["datatype"],["cudnnhandle_t"],["cudnndropoutdescriptor_t"],["cudnnrnnmode_t"]],[["result",["error"]],["error"]]]],[11,"set_rnn_matrix_math_type","","Set RNN Matrix Math Type [cudnnSetRNNMatrixMathType][1]…",154,[[["cudnnrnndescriptor_t"],["cudnnmathtype_t"]],[["result",["error"]],["error"]]]],[11,"set_rnn_padding_mode","","Set RNN Padding Model [cudnnSetRNNPaddingMode][1] This…",154,[[["cudnnrnndescriptor_t"],["cudnnrnnpaddingmode_t"]],[["result",["error"]],["error"]]]],[11,"rnn_forward_training","","Trains a RNN through the Forward Process",154,[[["cudnnfilterdescriptor_t"],["cudnnrnndescriptor_t"],["usize"],["c_int"],["cudnnhandle_t"],["vec",["cudnntensordescriptor_t"]],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"rnn_forward_inference","","Execute a RNN without Training This routine executes the…",154,[[["size_t"],["cudnnfilterdescriptor_t"],["cudnnrnndescriptor_t"],["c_int"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"rnn_backward_data","","CUDNN Rnn Backward Data This routine executes the…",154,[[["cudnnfilterdescriptor_t"],["cudnnrnndescriptor_t"],["usize"],["c_int"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"rnn_backward_weights","","CUDNN Rnn Backward Weights This routine accumulates weight…",154,[[["cudnnfilterdescriptor_t"],["cudnnrnndescriptor_t"],["usize"],["c_int"],["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"softmax_forward","","Computes an softmax forward function.",154,[[["cudnntensordescriptor_t"],["cudnnsoftmaxmode_t"],["cudnnhandle_t"],["cudnnsoftmaxalgorithm_t"]],[["result",["error"]],["error"]]]],[11,"softmax_backward","","Computes an softmax backward function.",154,[[["cudnntensordescriptor_t"],["cudnnsoftmaxmode_t"],["cudnnhandle_t"],["cudnnsoftmaxalgorithm_t"]],[["result",["error"]],["error"]]]],[11,"create_tensor_descriptor","","Creates a generic CUDA cuDNN Tensor Descriptor.",154,[[],[["error"],["result",["cudnntensordescriptor_t","error"]],["cudnntensordescriptor_t"]]]],[11,"destroy_tensor_descriptor","","Destroys a CUDA cuDNN Tensor Descriptor.",154,[[["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_tensor_descriptor","","Initializes a generic CUDA cuDNN Tensor Descriptor with…",154,[[["cudnntensordescriptor_t"],["c_int"],["cudnndatatype_t"]],[["result",["error"]],["error"]]]],[11,"get_tensor_descriptor","","Returns informations about a generic CUDA cuDNN Tensor…",154,[[["c_int"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"transform_tensor","","Transforms a CUDA cuDNN Tensor from to another Tensor with…",154,[[["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"add_tensor","","Adds the scaled values from one a CUDA cuDNN Tensor to…",154,[[["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"set_tensor","","Sets all elements of a tensor to a given value.",154,[[["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"scale_tensor","","Scales all elements of a tensor by a given factor.",154,[[["cudnnhandle_t"],["cudnntensordescriptor_t"]],[["result",["error"]],["error"]]]],[11,"init","","Initialize the CUDA cuDNN API with needed context and…",154,[[],[["cudnnhandle_t"],["result",["cudnnhandle_t","error"]],["error"]]]],[11,"destroy","","Destroys the CUDA cuDNN context and resources associated…",154,[[["cudnnhandle_t"]],[["result",["error"]],["error"]]]],[11,"get_version","","Returns the version of the CUDA cuDNN API.",154,[[],["usize"]]],[11,"cudnn_data_type","","Convert to CUDNN Data Type",154,[[["datatype"]],["cudnndatatype_t"]]],[11,"new","","Initializes a new CUDA cuDNN ConvolutionDescriptor.",155,[[["datatype"]],[["convolutiondescriptor"],["result",["convolutiondescriptor","error"]],["error"]]]],[11,"from_c","","Initializes a new CUDA cuDNN ConvolutionDescriptor from…",155,[[["cudnnconvolutiondescriptor_t"]],["convolutiondescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN ConvolutionDescriptor as its C type.",155,[[["self"]],["cudnnconvolutiondescriptor_t"]]],[0,"cuda","","Defines Cuda Device Memory.",null,null],[3,"CudaDeviceMemory","rcudnn::cuda","A pointer to memory existing on a nvidia GPU",null,null],[11,"new","","Saw fun X Y Z",156,[[["usize"]],[["result",["cudadevicememory","error"]],["error"],["cudadevicememory"]]]],[11,"from_c","","Initializes a new CUDA Device Memory from its C type.",156,[[["usize"]],["cudadevicememory"]]],[11,"id_c","","Returns the CUDA Device Memory ptr as its C type.",156,[[["self"]]]],[11,"size","","Returns the size of the CUDA Device Memory chunk.",156,[[["self"]],["usize"]]],[11,"new","rcudnn","Initializes a new CUDA cuDNN context.",157,[[],[["result",["cudnn","error"]],["cudnn"],["error"]]]],[11,"from_c","","Initializes a new CUDA cuDNN Context from its C type.",157,[[["cudnnhandle_t"]],["cudnn"]]],[11,"id_c","","Returns the CUDA cuDNN Context as its C type.",157,[[["self"]],["cudnnhandle_t"]]],[11,"version","","Returns the version of the CUDA cuDNN library.",157,[[],["usize"]]],[11,"init_convolution","","Initializes the parameters and configurations for running…",157,[[["tensordescriptor"],["convolutiondescriptor"],["self"],["filterdescriptor"]],[["result",["convolutionconfig","error"]],["error"],["convolutionconfig"]]]],[11,"init_normalization","","Initializes the parameters and configurations for running…",157,[[["u32"],["f64"],["self"]],[["error"],["result",["normalizationconfig","error"]],["normalizationconfig"]]]],[11,"init_pooling","","Initializes the parameters and configurations for running…",157,[[["self"]],[["error"],["result",["poolingconfig","error"]],["poolingconfig"]]]],[11,"init_activation","","Initializes the parameters and configurations for running…",157,[[["self"]],[["activationconfig"],["result",["activationconfig","error"]],["error"]]]],[11,"init_dropout","","Initializes the parameters and configurations for running…",157,[[["f32"],["self"],["u64"]],[["dropoutconfig"],["result",["dropoutconfig","error"]],["error"]]]],[11,"init_rnn","","Initialize RNN",157,[[["cudnndirectionmode_t"],["i32"],["rnndescriptor"],["cudnnrnninputmode_t"],["cudnnmathtype_t"],["cudnnrnnalgo_t"],["datatype"],["cudnndropoutdescriptor_t"],["self"],["cudnnrnnmode_t"]],[["rnnconfig"],["error"],["result",["rnnconfig","error"]]]]],[11,"rnn_forward","","Train & Return Results for RNN",157,[[["filterdescriptor"],["tensordescriptor"],["vec",["tensordescriptor"]],["tensordescriptor"],["rnnconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"rnn_backward_data","","Train & Return Results for RNN",157,[[["filterdescriptor"],["tensordescriptor"],["vec",["tensordescriptor"]],["tensordescriptor"],["rnnconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"rnn_backward_weights","","Train & Return Results for RNN",157,[[["tensordescriptor"],["vec",["tensordescriptor"]],["filterdescriptor"],["tensordescriptor"],["rnnconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"sigmoid_forward","","Computes the forward Sigmoid Activation function.",157,[[["tensordescriptor"],["scalparams"],["activationconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"sigmoid_backward","","Computes the backward Sigmoid Activation function.",157,[[["tensordescriptor"],["scalparams"],["activationconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"relu_forward","","Computes the forward Rectified Linear Activation function.",157,[[["tensordescriptor"],["scalparams"],["activationconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"relu_backward","","Computes the backward Rectified Linear Activation function.",157,[[["tensordescriptor"],["scalparams"],["activationconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"tanh_forward","","Computes the forward Hyperbolic Tangent Activation function.",157,[[["tensordescriptor"],["scalparams"],["activationconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"tanh_backward","","Computes the backward Hyperbolic Tangent Activation…",157,[[["tensordescriptor"],["scalparams"],["activationconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"convolution_forward","","Computes the forward Convolution function.",157,[[["tensordescriptor"],["scalparams"],["convolutionconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"convolution_backward_bias","","Computes the backward Convolution function w.r.t the bias.",157,[[["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"convolution_backward_filter","","Computes the backward Convolution function w.r.t the filter.",157,[[["tensordescriptor"],["scalparams"],["convolutionconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"convolution_backward_data","","Computes the backward Convolution function w.r.t the data.",157,[[["tensordescriptor"],["scalparams"],["convolutionconfig"],["self"]],[["result",["error"]],["error"]]]],[11,"softmax_forward","","Computes the forward softmax function.",157,[[["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"softmax_backward","","Computes the backward softmax function.",157,[[["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"log_softmax_forward","","Computes the forward logarithmic softmax function.",157,[[["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"log_softmax_backward","","Computes the backward logarithmic softmax function.",157,[[["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"lrn_forward","","Computes the forward local response normalization function.",157,[[["normalizationconfig"],["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"lrn_backward","","Computes the backward local response normalization function.",157,[[["normalizationconfig"],["tensordescriptor"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"pooling_avg_forward","","Computes the forward average pooling function.",157,[[["tensordescriptor"],["poolingconfig"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"pooling_avg_backward","","Computes the backward average pooling function.",157,[[["tensordescriptor"],["poolingconfig"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"pooling_max_forward","","Computes the forward max pooling function.",157,[[["tensordescriptor"],["poolingconfig"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"pooling_max_backward","","Computes the backward max pooling function.",157,[[["tensordescriptor"],["poolingconfig"],["scalparams"],["self"]],[["result",["error"]],["error"]]]],[11,"dropout_forward","","Computes probability and applies it to Dropout",157,[[["tensordescriptor"],["self"],["dropoutconfig"]],[["result",["error"]],["error"]]]],[11,"dropout_backward","","Computes probability and applies it to Dropout",157,[[["tensordescriptor"],["self"],["dropoutconfig"]],[["result",["error"]],["error"]]]],[11,"new","","Initializes a new CUDA cuDNN Dropout Descriptor.",158,[[["f32"],["usize"],["u64"],["cudnn"]],[["dropoutdescriptor"],["error"],["result",["dropoutdescriptor","error"]]]]],[11,"get_required_size","","Get the size for a tensor",158,[[],["usize"]]],[11,"from_c","","Initializes a new CUDA cuDNN Tensor Descriptor from its C…",158,[[["cudnndropoutdescriptor_t"]],["dropoutdescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN Tensor Descriptor as its C type.",158,[[["self"]],["cudnndropoutdescriptor_t"]]],[11,"new","","Initializes a new CUDA cuDNN FilterDescriptor.",159,[[["datatype"]],[["result",["filterdescriptor","error"]],["filterdescriptor"],["error"]]]],[11,"from_c","","Initializes a new CUDA cuDNN FilterDescriptor from its C…",159,[[["cudnnfilterdescriptor_t"]],["filterdescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN FilterDescriptor as its C type.",159,[[["self"]],["cudnnfilterdescriptor_t"]]],[11,"new","","Initializes a new CUDA cuDNN LRNDescriptor.",160,[[["u32"],["f64"]],[["result",["normalizationdescriptor","error"]],["error"],["normalizationdescriptor"]]]],[11,"from_c","","Initializes a new CUDA cuDNN NormalizationDescriptor from…",160,[[["cudnnlrndescriptor_t"]],["normalizationdescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN NormalizationDescriptor as its C…",160,[[["self"]],["cudnnlrndescriptor_t"]]],[11,"new","","Initializes a new CUDA cuDNN Pooling Descriptor.",161,[[["cudnnpoolingmode_t"]],[["error"],["result",["poolingdescriptor","error"]],["poolingdescriptor"]]]],[11,"from_c","","Initializes a new CUDA cuDNN PoolingDescriptor from its C…",161,[[["cudnnpoolingdescriptor_t"]],["poolingdescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN Pooling Descriptor as its C type.",161,[[["self"]],["cudnnpoolingdescriptor_t"]]],[11,"new","","Initializes a new CUDA cuDNN Tensor Descriptor.",162,[[["datatype"]],[["result",["tensordescriptor","error"]],["error"],["tensordescriptor"]]]],[11,"from_c","","Initializes a new CUDA cuDNN Tensor Descriptor from its C…",162,[[["cudnntensordescriptor_t"]],["tensordescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN Tensor Descriptor as its C type.",162,[[["self"]],["cudnntensordescriptor_t"]]],[11,"new","","Initializes a new CUDA cuDNN RnnDescriptor.",163,[[["dropoutconfig"],["cudnndirectionmode_t"],["i32"],["cudnnrnninputmode_t"],["cudnn"],["cudnnrnnpaddingmode_t"],["cudnnrnnalgo_t"],["datatype"],["cudnnrnnmode_t"]],[["rnndescriptor"],["error"],["result",["rnndescriptor","error"]]]]],[11,"from_c","","Initializes a new CUDA cuDNN RnnDescriptor from its C type.",163,[[["cudnnrnndescriptor_t"],["dropoutconfig"]],["rnndescriptor"]]],[11,"id_c","","Returns the CUDA cuDNN RnnDescriptor as its C type.",163,[[["self"]],["cudnnrnndescriptor_t"]]],[0,"utils","","Describes utility functionality for CUDA cuDNN.",null,null],[3,"ConvolutionConfig","rcudnn::utils","Provides a convenient interface to access cuDNN's…",null,null],[3,"NormalizationConfig","","Provides a convenient interface to access cuDNN's…",null,null],[3,"PoolingConfig","","Provides a convenient interface to access cuDNN's Pooling…",null,null],[3,"ActivationConfig","","Provides a convenient interface to access cuDNN's…",null,null],[3,"DropoutConfig","","Provides a convenient interface to access cuDNN's Dropout…",null,null],[3,"RnnConfig","","Provides an interfaces for CUDNN's Rnn Descriptor #…",null,null],[12,"hidden_size","","Size of Hidden Layer",164,null],[12,"num_layers","","Number of Hidden Layers",164,null],[12,"sequence_length","","Length of Sequence",164,null],[3,"ScalParams","","Provides a convenient interface for cuDNN's scaling…",null,null],[12,"a","","Alpha",165,null],[12,"b","","Beta",165,null],[4,"DataType","","Defines the available data types for the CUDA cuDNN data…",null,null],[13,"Float","","F32",166,null],[13,"Double","","F64",166,null],[13,"Half","","F16 (no native Rust support yet)",166,null],[8,"DataTypeInfo","","CuDnn type info for generic use.",null,null],[10,"cudnn_data_type","","Mostly internal.",167,[[],["datatype"]]],[11,"new","","Returns a new ConvolutionConfig",168,[[["cudnnconvolutionfwdalgo_t"],["cudnnconvolutionbwddataalgo_t"],["usize"],["convolutiondescriptor"],["cudnnconvolutionbwdfilteralgo_t"],["filterdescriptor"]],["convolutionconfig"]]],[11,"largest_workspace_size","","Returns the largest workspace size out of the three.",168,[[["self"]],["usize"]]],[11,"forward_algo","","Returns `forward_algo`.",168,[[["self"]],["cudnnconvolutionfwdalgo_t"]]],[11,"forward_workspace_size","","Returns `forward_workspace_size`.",168,[[["self"]],["usize"]]],[11,"backward_filter_algo","","Returns `backward_filter_algo`.",168,[[["self"]],["cudnnconvolutionbwdfilteralgo_t"]]],[11,"backward_filter_workspace_size","","Returns `backward_filter_workspace_size`.",168,[[["self"]],["usize"]]],[11,"backward_data_algo","","Returns `backward_data_algo`.",168,[[["self"]],["cudnnconvolutionbwddataalgo_t"]]],[11,"backward_data_workspace_size","","Returns `backward_data_workspace_size`.",168,[[["self"]],["usize"]]],[11,"conv_desc","","Returns `conv_desc`.",168,[[["self"]],["convolutiondescriptor"]]],[11,"filter_desc","","Returns `filter_desc`.",168,[[["self"]],["filterdescriptor"]]],[11,"new","","Returns a new LRN Config.",169,[[["normalizationdescriptor"]],["normalizationconfig"]]],[11,"lrn_desc","","Returns `lrn_desc`.",169,[[["self"]],["normalizationdescriptor"]]],[11,"new","","Returns a new PoolingConfig.",170,[[["poolingdescriptor"]],["poolingconfig"]]],[11,"pooling_avg_desc","","Returns `pooling_avg_desc`.",170,[[["self"]],["poolingdescriptor"]]],[11,"pooling_max_desc","","Returns `pooling_max_desc`.",170,[[["self"]],["poolingdescriptor"]]],[11,"new","","Returns a new ActivationConfig.",171,[[["activationdescriptor"]],["activationconfig"]]],[11,"activation_sigmoid_desc","","Returns `activation_sigmoid_desc`.",171,[[["self"]],["activationdescriptor"]]],[11,"activation_relu_desc","","Returns `activation_relu_desc`.",171,[[["self"]],["activationdescriptor"]]],[11,"activation_clipped_relu_desc","","Returns `activation_clipped_relu_desc`.",171,[[["self"]],["activationdescriptor"]]],[11,"activation_tanh_desc","","Returns `activation_tanh_desc`.",171,[[["self"]],["activationdescriptor"]]],[11,"new","","Returns a new DropoutConfig.",172,[[["dropoutdescriptor"],["cudadevicememory"]],["dropoutconfig"]]],[11,"dropout_desc","","Returns `dropout_desc`.",172,[[["self"]],["dropoutdescriptor"]]],[11,"take_mem","","Take the Reserve Memory of the DropoutDescriptor",172,[[],["cudadevicememory"]]],[11,"reserved_space","","Returns the reserved space.",172,[[["self"]],["cudadevicememory"]]],[11,"new","","Initialise a RNN Config",164,[[["cudnndirectionmode_t"],["i32"],["rnndescriptor"],["cudnnrnninputmode_t"],["cudnndatatype_t"],["usize"],["cudnnrnnalgo_t"],["cudadevicememory"],["cudnndropoutdescriptor_t"],["cudnnrnnmode_t"]],["rnnconfig"]]],[11,"rnn_workspace_size","","Workspace Size required for RNN Operations",164,[[["self"]],["usize"]]],[11,"largest_workspace_size","","Largest Workspace Size for RNN",164,[[["self"]],["usize"]]],[11,"training_reserve_size","","Training Reserve Size for RNN",164,[[["self"]],["usize"]]],[11,"training_reserve","","Training Reserve Space on GPU for RNN",164,[[["self"]],["cudadevicememory"]]],[11,"rnn_desc","","Accessor function for Rnn Descriptor",164,[[["self"]],["rnndescriptor"]]],[11,"sequence_length","","Accessor function for Sequence Length",164,[[["self"]],["i32"]]],[11,"from","rcudnn","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"to_string","","",152,[[["self"]],["string"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","rcudnn::cuda","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","rcudnn::utils","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"eq","rcudnn","",101,[[["self"],["cudnnnanpropagation_t"]],["bool"]]],[11,"eq","","",131,[[["self"],["cudnnrnnbiasmode_t"]],["bool"]]],[11,"eq","","",114,[[["self"],["cudnnconvolutionbwdfilterpreference_t"]],["bool"]]],[11,"eq","","",124,[[["cudnnlrnmode_t"],["self"]],["bool"]]],[11,"eq","","",52,[[["self"],["cudaerror"]],["bool"]]],[11,"eq","","",102,[[["cudnndeterminism_t"],["self"]],["bool"]]],[11,"eq","","",109,[[["self"],["cudnnindicestype_t"]],["bool"]]],[11,"eq","","",140,[[["cudnnctclossalgo_t"],["self"]],["bool"]]],[11,"eq","","",139,[[["cudnnwgradmode_t"],["self"]],["bool"]]],[11,"eq","","",118,[[["cudnnconvolutionbwddataalgo_t"],["self"]],["bool"]]],[11,"eq","","",126,[[["self"],["cudnnbatchnormmode_t"]],["bool"]]],[11,"eq","","",104,[[["cudnntensorformat_t"],["self"]],["bool"]]],[11,"eq","","",105,[[["cudnnfoldingdirection_t"],["self"]],["bool"]]],[11,"eq","","",100,[[["self"],["cudnnmathtype_t"]],["bool"]]],[11,"eq","","",122,[[["cudnnpoolingmode_t"],["self"]],["bool"]]],[11,"eq","","",148,[[["cudnnfusedopspointerplaceholder_t"],["self"]],["bool"]]],[11,"eq","","",133,[[["self"],["cudnnrnninputmode_t"]],["bool"]]],[11,"eq","","",129,[[["cudnnrnnalgo_t"],["self"]],["bool"]]],[11,"eq","","",98,[[["cudnnerrquerymode_t"],["self"]],["bool"]]],[11,"eq","","",136,[[["self"],["cudnnrnnpaddingmode_t"]],["bool"]]],[11,"eq","","",147,[[["cudnnfusedopsconstparamlabel_t"],["self"]],["bool"]]],[11,"eq","","",111,[[["cudnnconvolutionfwdpreference_t"],["self"]],["bool"]]],[11,"eq","","",123,[[["cudnnactivationmode_t"],["self"]],["bool"]]],[11,"eq","","",146,[[["cudnnfusedops_t"],["self"]],["bool"]]],[11,"eq","","",99,[[["cudnndatatype_t"],["self"]],["bool"]]],[11,"eq","","",110,[[["cudnnconvolutionmode_t"],["self"]],["bool"]]],[11,"eq","","",107,[[["cudnnreducetensorop_t"],["self"]],["bool"]]],[11,"eq","","",134,[[["cudnnrnnclipmode_t"],["self"]],["bool"]]],[11,"eq","","",144,[[["cudnnseverity_t"],["self"]],["bool"]]],[11,"eq","","",97,[[["cudnnstatus_t"],["self"]],["bool"]]],[11,"eq","","",108,[[["self"],["cudnnreducetensorindices_t"]],["bool"]]],[11,"eq","","",112,[[["cudnnconvolutionfwdalgo_t"],["self"]],["bool"]]],[11,"eq","","",135,[[["cudnnrnndatalayout_t"],["self"]],["bool"]]],[11,"eq","","",120,[[["self"],["cudnnsoftmaxalgorithm_t"]],["bool"]]],[11,"eq","","",132,[[["cudnndirectionmode_t"],["self"]],["bool"]]],[11,"eq","","",115,[[["self"],["cudnnconvolutionbwdfilteralgo_t"]],["bool"]]],[11,"eq","","",106,[[["cudnnoptensorop_t"],["self"]],["bool"]]],[11,"eq","","",125,[[["cudnndivnormmode_t"],["self"]],["bool"]]],[11,"eq","","",149,[[["cudnnfusedopsvariantparamlabel_t"],["self"]],["bool"]]],[11,"eq","","",138,[[["cudnnmultiheadattnweightkind_t"],["self"]],["bool"]]],[11,"eq","","",117,[[["cudnnconvolutionbwddatapreference_t"],["self"]],["bool"]]],[11,"eq","","",137,[[["self"],["cudnnseqdataaxis_t"]],["bool"]]],[11,"eq","","",141,[[["self"],["cudnnlossnormalizationmode_t"]],["bool"]]],[11,"eq","","",128,[[["cudnnsamplertype_t"],["self"]],["bool"]]],[11,"eq","","",103,[[["cudnnreordertype_t"],["self"]],["bool"]]],[11,"eq","","",130,[[["cudnnrnnmode_t"],["self"]],["bool"]]],[11,"eq","","",121,[[["cudnnsoftmaxmode_t"],["self"]],["bool"]]],[11,"eq","","",127,[[["self"],["cudnnbatchnormops_t"]],["bool"]]],[11,"default","","",113,[[],["cudnnconvolutionfwdalgoperf_t"]]],[11,"default","","",119,[[],["cudnnconvolutionbwddataalgoperf_t"]]],[11,"default","","",116,[[],["cudnnconvolutionbwdfilteralgoperf_t"]]],[11,"clone","","",128,[[["self"]],["cudnnsamplertype_t"]]],[11,"clone","","",48,[[["self"]],["dim3"]]],[11,"clone","","",198,[[["self"]],["cudnnpersistentrnnplan"]]],[11,"clone","","",69,[[["self"]],["cudafuncattributes"]]],[11,"clone","","",101,[[["self"]],["cudnnnanpropagation_t"]]],[11,"clone","","",133,[[["self"]],["cudnnrnninputmode_t"]]],[11,"clone","","",87,[[["self"]],["cudaexternalsemaphorewaitparams"]]],[11,"clone","","",100,[[["self"]],["cudnnmathtype_t"]]],[11,"clone","","",47,[[["self"]],["double4"]]],[11,"clone","","",41,[[["self"]],["ulonglong3"]]],[11,"clone","","",88,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1"]]],[11,"clone","","",127,[[["self"]],["cudnnbatchnormops_t"]]],[11,"clone","","",99,[[["self"]],["cudnndatatype_t"]]],[11,"clone","","",120,[[["self"]],["cudnnsoftmaxalgorithm_t"]]],[11,"clone","","",5,[[["self"]],["uchar3"]]],[11,"clone","","",143,[[["self"]],["cudnnalgorithm_t_algorithm"]]],[11,"clone","","",71,[[["self"]],["cudadeviceprop"]]],[11,"clone","","",119,[[["self"]],["cudnnconvolutionbwddataalgoperf_t"]]],[11,"clone","","",103,[[["self"]],["cudnnreordertype_t"]]],[11,"clone","","",194,[[["self"]],["cudnnctclossstruct"]]],[11,"clone","","",80,[[["self"]],["cudaexternalsemaphorehandledesc__bindgen_ty_1"]]],[11,"clone","","",190,[[["self"]],["cudnnactivationstruct"]]],[11,"clone","","",17,[[["self"]],["uint1"]]],[11,"clone","","",35,[[["self"]],["float4"]]],[11,"clone","","",6,[[["self"]],["char4"]]],[11,"clone","","",202,[[["self"]],["cudnnseqdatastruct"]]],[11,"clone","","",137,[[["self"]],["cudnnseqdataaxis_t"]]],[11,"clone","","",185,[[["self"]],["cudnntensorstruct"]]],[11,"clone","","",134,[[["self"]],["cudnnrnnclipmode_t"]]],[11,"clone","","",37,[[["self"]],["ulonglong1"]]],[11,"clone","","",90,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",187,[[["self"]],["cudnnpoolingstruct"]]],[11,"clone","","",79,[[["self"]],["cudaexternalsemaphorehandledesc"]]],[11,"clone","","",92,[[["self"]],["cudalaunchparams"]]],[11,"clone","","",4,[[["self"]],["char3"]]],[11,"clone","","",33,[[["self"]],["float2"]]],[11,"clone","","",180,[[["self"]],["cugraph_st"]]],[11,"clone","","",181,[[["self"]],["cugraphnode_st"]]],[11,"clone","","",2,[[["self"]],["char2"]]],[11,"clone","","",125,[[["self"]],["cudnndivnormmode_t"]]],[11,"clone","","",113,[[["self"]],["cudnnconvolutionfwdalgoperf_t"]]],[11,"clone","","",201,[[["self"]],["cudnnalgorithmperformancestruct"]]],[11,"clone","","",30,[[["self"]],["long4"]]],[11,"clone","","",13,[[["self"]],["ushort3"]]],[11,"clone","","",115,[[["self"]],["cudnnconvolutionbwdfilteralgo_t"]]],[11,"clone","","",105,[[["self"]],["cudnnfoldingdirection_t"]]],[11,"clone","","",96,[[["self"]],["cudatexturedesc"]]],[11,"clone","","",44,[[["self"]],["double1"]]],[11,"clone","","",116,[[["self"]],["cudnnconvolutionbwdfilteralgoperf_t"]]],[11,"clone","","",84,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",111,[[["self"]],["cudnnconvolutionfwdpreference_t"]]],[11,"clone","","",38,[[["self"]],["longlong2"]]],[11,"clone","","",75,[[["self"]],["cudaexternalmemoryhandledesc__bindgen_ty_1"]]],[11,"clone","","",76,[[["self"]],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",149,[[["self"]],["cudnnfusedopsvariantparamlabel_t"]]],[11,"clone","","",66,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4"]]],[11,"clone","","",50,[[["self"]],["__crt_locale_pointers"]]],[11,"clone","","",57,[[["self"]],["cudamemcpy3dparms"]]],[11,"clone","","",122,[[["self"]],["cudnnpoolingmode_t"]]],[11,"clone","","",42,[[["self"]],["longlong4"]]],[11,"clone","","",34,[[["self"]],["float3"]]],[11,"clone","","",81,[[["self"]],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",12,[[["self"]],["short3"]]],[11,"clone","","",205,[[["self"]],["cudnnfusedopsvariantparamstruct"]]],[11,"clone","","",32,[[["self"]],["float1"]]],[11,"clone","","",136,[[["self"]],["cudnnrnnpaddingmode_t"]]],[11,"clone","","",177,[[["self"]],["cuevent_st"]]],[11,"clone","","",109,[[["self"]],["cudnnindicestype_t"]]],[11,"clone","","",51,[[["self"]],["_mbstatet"]]],[11,"clone","","",189,[[["self"]],["cudnnlrnstruct"]]],[11,"clone","","",182,[[["self"]],["cugraphexec_st"]]],[11,"clone","","",140,[[["self"]],["cudnnctclossalgo_t"]]],[11,"clone","","",3,[[["self"]],["uchar2"]]],[11,"clone","","",131,[[["self"]],["cudnnrnnbiasmode_t"]]],[11,"clone","","",22,[[["self"]],["int4"]]],[11,"clone","","",60,[[["self"]],["cudahostnodeparams"]]],[11,"clone","","",121,[[["self"]],["cudnnsoftmaxmode_t"]]],[11,"clone","","",78,[[["self"]],["cudaexternalmemorymipmappedarraydesc"]]],[11,"clone","","",106,[[["self"]],["cudnnoptensorop_t"]]],[11,"clone","","",8,[[["self"]],["short1"]]],[11,"clone","","",148,[[["self"]],["cudnnfusedopspointerplaceholder_t"]]],[11,"clone","","",39,[[["self"]],["ulonglong2"]]],[11,"clone","","",184,[[["self"]],["cudnnruntimetag_t"]]],[11,"clone","","",67,[[["self"]],["cudaresourceviewdesc"]]],[11,"clone","","",63,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",43,[[["self"]],["ulonglong4"]]],[11,"clone","","",114,[[["self"]],["cudnnconvolutionbwdfilterpreference_t"]]],[11,"clone","","",110,[[["self"]],["cudnnconvolutionmode_t"]]],[11,"clone","","",183,[[["self"]],["cudnncontext"]]],[11,"clone","","",40,[[["self"]],["longlong3"]]],[11,"clone","","",77,[[["self"]],["cudaexternalmemorybufferdesc"]]],[11,"clone","","",193,[[["self"]],["cudnnreducetensorstruct"]]],[11,"clone","","",7,[[["self"]],["uchar4"]]],[11,"clone","","",24,[[["self"]],["long1"]]],[11,"clone","","",176,[[["self"]],["custream_st"]]],[11,"clone","","",28,[[["self"]],["long3"]]],[11,"clone","","",46,[[["self"]],["double3"]]],[11,"clone","","",74,[[["self"]],["cudaexternalmemoryhandledesc"]]],[11,"clone","","",135,[[["self"]],["cudnnrnndatalayout_t"]]],[11,"clone","","",65,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3"]]],[11,"clone","","",139,[[["self"]],["cudnnwgradmode_t"]]],[11,"clone","","",188,[[["self"]],["cudnnfilterstruct"]]],[11,"clone","","",85,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",123,[[["self"]],["cudnnactivationmode_t"]]],[11,"clone","","",91,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3"]]],[11,"clone","","",19,[[["self"]],["uint2"]]],[11,"clone","","",18,[[["self"]],["int2"]]],[11,"clone","","",107,[[["self"]],["cudnnreducetensorop_t"]]],[11,"clone","","",117,[[["self"]],["cudnnconvolutionbwddatapreference_t"]]],[11,"clone","","",20,[[["self"]],["int3"]]],[11,"clone","","",175,[[["self"]],["cudagraphicsresource"]]],[11,"clone","","",206,[[["self"]],["cudnnfusedopsplanstruct"]]],[11,"clone","","",102,[[["self"]],["cudnndeterminism_t"]]],[11,"clone","","",29,[[["self"]],["ulong3"]]],[11,"clone","","",196,[[["self"]],["cudnndropoutstruct"]]],[11,"clone","","",197,[[["self"]],["cudnnrnnstruct"]]],[11,"clone","","",53,[[["self"]],["cudachannelformatdesc"]]],[11,"clone","","",45,[[["self"]],["double2"]]],[11,"clone","","",199,[[["self"]],["cudnnrnndatastruct"]]],[11,"clone","","",82,[[["self"]],["cudaexternalsemaphoresignalparams"]]],[11,"clone","","",150,[[["self"]],["__crt_locale_data"]]],[11,"clone","","",62,[[["self"]],["cudaresourcedesc__bindgen_ty_1"]]],[11,"clone","","",0,[[["self"]],["char1"]]],[11,"clone","","",94,[[["self"]],["surfacereference"]]],[11,"clone","","",108,[[["self"]],["cudnnreducetensorindices_t"]]],[11,"clone","","",54,[[["self"]],["cudapitchedptr"]]],[11,"clone","","",14,[[["self"]],["short4"]]],[11,"clone","","",130,[[["self"]],["cudnnrnnmode_t"]]],[11,"clone","","",64,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",145,[[["self"]],["cudnndebug_t"]]],[11,"clone","","",179,[[["self"]],["cuexternalsemaphore_st"]]],[11,"clone","","",98,[[["self"]],["cudnnerrquerymode_t"]]],[11,"clone","","",144,[[["self"]],["cudnnseverity_t"]]],[11,"clone","","",151,[[["self"]],["__crt_multibyte_data"]]],[11,"clone","","",129,[[["self"]],["cudnnrnnalgo_t"]]],[11,"clone","","",23,[[["self"]],["uint4"]]],[11,"clone","","",58,[[["self"]],["cudamemcpy3dpeerparms"]]],[11,"clone","","",186,[[["self"]],["cudnnconvolutionstruct"]]],[11,"clone","","",147,[[["self"]],["cudnnfusedopsconstparamlabel_t"]]],[11,"clone","","",203,[[["self"]],["cudnnattnstruct"]]],[11,"clone","","",68,[[["self"]],["cudapointerattributes"]]],[11,"clone","","",204,[[["self"]],["cudnnfusedopsconstparamstruct"]]],[11,"clone","","",36,[[["self"]],["longlong1"]]],[11,"clone","","",141,[[["self"]],["cudnnlossnormalizationmode_t"]]],[11,"clone","","",200,[[["self"]],["cudnnalgorithmstruct"]]],[11,"clone","","",86,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3"]]],[11,"clone","","",26,[[["self"]],["long2"]]],[11,"clone","","",142,[[["self"]],["cudnnalgorithm_t"]]],[11,"clone","","",146,[[["self"]],["cudnnfusedops_t"]]],[11,"clone","","",1,[[["self"]],["uchar1"]]],[11,"clone","","",195,[[["self"]],["cudnntensortransformstruct"]]],[11,"clone","","",49,[[["self"]],["__crt_locale_data_public"]]],[11,"clone","","",9,[[["self"]],["ushort1"]]],[11,"clone","","",59,[[["self"]],["cudamemsetparams"]]],[11,"clone","","",73,[[["self"]],["cudaipcmemhandle_st"]]],[11,"clone","","",21,[[["self"]],["uint3"]]],[11,"clone","","",112,[[["self"]],["cudnnconvolutionfwdalgo_t"]]],[11,"clone","","",61,[[["self"]],["cudaresourcedesc"]]],[11,"clone","","",178,[[["self"]],["cuexternalmemory_st"]]],[11,"clone","","",174,[[["self"]],["cudamipmappedarray"]]],[11,"clone","","",126,[[["self"]],["cudnnbatchnormmode_t"]]],[11,"clone","","",15,[[["self"]],["ushort4"]]],[11,"clone","","",25,[[["self"]],["ulong1"]]],[11,"clone","","",97,[[["self"]],["cudnnstatus_t"]]],[11,"clone","","",72,[[["self"]],["cudaipceventhandle_st"]]],[11,"clone","","",104,[[["self"]],["cudnntensorformat_t"]]],[11,"clone","","",83,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1"]]],[11,"clone","","",10,[[["self"]],["short2"]]],[11,"clone","","",95,[[["self"]],["texturereference"]]],[11,"clone","","",89,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",173,[[["self"]],["cudaarray"]]],[11,"clone","","",31,[[["self"]],["ulong4"]]],[11,"clone","","",138,[[["self"]],["cudnnmultiheadattnweightkind_t"]]],[11,"clone","","",70,[[["self"]],["cuuuid_st"]]],[11,"clone","","",124,[[["self"]],["cudnnlrnmode_t"]]],[11,"clone","","",191,[[["self"]],["cudnnspatialtransformerstruct"]]],[11,"clone","","",132,[[["self"]],["cudnndirectionmode_t"]]],[11,"clone","","",27,[[["self"]],["ulong2"]]],[11,"clone","","",93,[[["self"]],["cudakernelnodeparams"]]],[11,"clone","","",118,[[["self"]],["cudnnconvolutionbwddataalgo_t"]]],[11,"clone","","",52,[[["self"]],["cudaerror"]]],[11,"clone","","",55,[[["self"]],["cudaextent"]]],[11,"clone","","",16,[[["self"]],["int1"]]],[11,"clone","","",192,[[["self"]],["cudnnoptensorstruct"]]],[11,"clone","","",11,[[["self"]],["ushort2"]]],[11,"clone","","",56,[[["self"]],["cudapos"]]],[11,"fmt","","",148,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",199,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",181,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",84,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",112,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",193,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",196,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",146,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",150,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",114,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",201,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",149,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",185,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",151,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",141,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",137,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",130,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",191,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",116,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",206,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",128,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",198,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",136,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",115,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",203,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",184,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",204,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",187,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",195,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",197,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",144,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",194,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",113,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",175,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",192,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",133,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",107,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",173,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",135,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",188,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",186,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",139,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",174,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",145,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",134,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",183,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",189,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",202,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",182,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",190,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",179,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",94,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",129,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",147,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",140,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",200,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",109,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",106,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",180,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",178,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",138,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",97,[[["self"],["__h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["__h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",108,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",101,[[["self"],["__h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",99,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",98,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",104,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",100,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",103,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"drop","","",153,[[["self"]]]],[11,"drop","","",155,[[["self"]]]],[11,"drop","rcudnn::cuda","",156,[[["self"]]]],[11,"drop","rcudnn","",157,[[["self"]]]],[11,"drop","","",158,[[["self"]]]],[11,"drop","","",159,[[["self"]]]],[11,"drop","","",160,[[["self"]]]],[11,"drop","","",161,[[["self"]]]],[11,"drop","","",162,[[["self"]]]],[11,"drop","","",163,[[["self"]]]],[11,"clone","","",154,[[["self"]],["api"]]],[11,"clone","","",153,[[["self"]],["activationdescriptor"]]],[11,"clone","","",155,[[["self"]],["convolutiondescriptor"]]],[11,"clone","","",157,[[["self"]],["cudnn"]]],[11,"clone","","",158,[[["self"]],["dropoutdescriptor"]]],[11,"clone","","",152,[[["self"]],["error"]]],[11,"clone","","",159,[[["self"]],["filterdescriptor"]]],[11,"clone","","",160,[[["self"]],["normalizationdescriptor"]]],[11,"clone","","",161,[[["self"]],["poolingdescriptor"]]],[11,"clone","","",162,[[["self"]],["tensordescriptor"]]],[11,"clone","rcudnn::utils","",166,[[["self"]],["datatype"]]],[11,"default","","Provides default values for ScalParams.",165,[[],["scalparams"]]],[11,"fmt","rcudnn","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","rcudnn::cuda","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","rcudnn","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","rcudnn::utils","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","rcudnn","",152,[[["formatter"],["self"]],["result"]]],[11,"description","","",152,[[["self"]],["str"]]],[11,"cause","","",152,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,"char1"],[3,"uchar1"],[3,"char2"],[3,"uchar2"],[3,"char3"],[3,"uchar3"],[3,"char4"],[3,"uchar4"],[3,"short1"],[3,"ushort1"],[3,"short2"],[3,"ushort2"],[3,"short3"],[3,"ushort3"],[3,"short4"],[3,"ushort4"],[3,"int1"],[3,"uint1"],[3,"int2"],[3,"uint2"],[3,"int3"],[3,"uint3"],[3,"int4"],[3,"uint4"],[3,"long1"],[3,"ulong1"],[3,"long2"],[3,"ulong2"],[3,"long3"],[3,"ulong3"],[3,"long4"],[3,"ulong4"],[3,"float1"],[3,"float2"],[3,"float3"],[3,"float4"],[3,"longlong1"],[3,"ulonglong1"],[3,"longlong2"],[3,"ulonglong2"],[3,"longlong3"],[3,"ulonglong3"],[3,"longlong4"],[3,"ulonglong4"],[3,"double1"],[3,"double2"],[3,"double3"],[3,"double4"],[3,"dim3"],[3,"__crt_locale_data_public"],[3,"__crt_locale_pointers"],[3,"_Mbstatet"],[4,"cudaError"],[3,"cudaChannelFormatDesc"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[3,"cudaHostNodeParams"],[3,"cudaResourceDesc"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[3,"surfaceReference"],[3,"textureReference"],[3,"cudaTextureDesc"],[4,"cudnnStatus_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnDeterminism_t"],[4,"cudnnReorderType_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnIndicesType_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnConvolutionFwdPreference_t"],[4,"cudnnConvolutionFwdAlgo_t"],[3,"cudnnConvolutionFwdAlgoPerf_t"],[4,"cudnnConvolutionBwdFilterPreference_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[3,"cudnnConvolutionBwdFilterAlgoPerf_t"],[4,"cudnnConvolutionBwdDataPreference_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[3,"cudnnConvolutionBwdDataAlgoPerf_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnActivationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnSamplerType_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnRNNMode_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnRNNPaddingMode_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnWgradMode_t"],[4,"cudnnCTCLossAlgo_t"],[4,"cudnnLossNormalizationMode_t"],[3,"cudnnAlgorithm_t"],[19,"cudnnAlgorithm_t_Algorithm"],[4,"cudnnSeverity_t"],[3,"cudnnDebug_t"],[4,"cudnnFusedOps_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[3,"__crt_locale_data"],[3,"__crt_multibyte_data"],[4,"Error"],[3,"ActivationDescriptor"],[3,"API"],[3,"ConvolutionDescriptor"],[3,"CudaDeviceMemory"],[3,"Cudnn"],[3,"DropoutDescriptor"],[3,"FilterDescriptor"],[3,"NormalizationDescriptor"],[3,"PoolingDescriptor"],[3,"TensorDescriptor"],[3,"RnnDescriptor"],[3,"RnnConfig"],[3,"ScalParams"],[4,"DataType"],[8,"DataTypeInfo"],[3,"ConvolutionConfig"],[3,"NormalizationConfig"],[3,"PoolingConfig"],[3,"ActivationConfig"],[3,"DropoutConfig"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUgraphExec_st"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"]]};
searchIndex["rcudnn_sys"] = {"doc":"","i":[[3,"char1","rcudnn_sys","",null,null],[12,"x","","",0,null],[3,"uchar1","","",null,null],[12,"x","","",1,null],[3,"char2","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[3,"uchar2","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"char3","","",null,null],[12,"x","","",4,null],[12,"y","","",4,null],[12,"z","","",4,null],[3,"uchar3","","",null,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"z","","",5,null],[3,"char4","","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"z","","",6,null],[12,"w","","",6,null],[3,"uchar4","","",null,null],[12,"x","","",7,null],[12,"y","","",7,null],[12,"z","","",7,null],[12,"w","","",7,null],[3,"short1","","",null,null],[12,"x","","",8,null],[3,"ushort1","","",null,null],[12,"x","","",9,null],[3,"short2","","",null,null],[12,"x","","",10,null],[12,"y","","",10,null],[3,"ushort2","","",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[3,"short3","","",null,null],[12,"x","","",12,null],[12,"y","","",12,null],[12,"z","","",12,null],[3,"ushort3","","",null,null],[12,"x","","",13,null],[12,"y","","",13,null],[12,"z","","",13,null],[3,"short4","","",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[12,"z","","",14,null],[12,"w","","",14,null],[3,"ushort4","","",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[12,"z","","",15,null],[12,"w","","",15,null],[3,"int1","","",null,null],[12,"x","","",16,null],[3,"uint1","","",null,null],[12,"x","","",17,null],[3,"int2","","",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[3,"uint2","","",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[3,"int3","","",null,null],[12,"x","","",20,null],[12,"y","","",20,null],[12,"z","","",20,null],[3,"uint3","","",null,null],[12,"x","","",21,null],[12,"y","","",21,null],[12,"z","","",21,null],[3,"int4","","",null,null],[12,"x","","",22,null],[12,"y","","",22,null],[12,"z","","",22,null],[12,"w","","",22,null],[3,"uint4","","",null,null],[12,"x","","",23,null],[12,"y","","",23,null],[12,"z","","",23,null],[12,"w","","",23,null],[3,"long1","","",null,null],[12,"x","","",24,null],[3,"ulong1","","",null,null],[12,"x","","",25,null],[3,"long2","","",null,null],[12,"x","","",26,null],[12,"y","","",26,null],[3,"ulong2","","",null,null],[12,"x","","",27,null],[12,"y","","",27,null],[3,"long3","","",null,null],[12,"x","","",28,null],[12,"y","","",28,null],[12,"z","","",28,null],[3,"ulong3","","",null,null],[12,"x","","",29,null],[12,"y","","",29,null],[12,"z","","",29,null],[3,"long4","","",null,null],[12,"x","","",30,null],[12,"y","","",30,null],[12,"z","","",30,null],[12,"w","","",30,null],[3,"ulong4","","",null,null],[12,"x","","",31,null],[12,"y","","",31,null],[12,"z","","",31,null],[12,"w","","",31,null],[3,"float1","","",null,null],[12,"x","","",32,null],[3,"float2","","",null,null],[12,"x","","",33,null],[12,"y","","",33,null],[3,"float3","","",null,null],[12,"x","","",34,null],[12,"y","","",34,null],[12,"z","","",34,null],[3,"float4","","",null,null],[12,"x","","",35,null],[12,"y","","",35,null],[12,"z","","",35,null],[12,"w","","",35,null],[3,"longlong1","","",null,null],[12,"x","","",36,null],[3,"ulonglong1","","",null,null],[12,"x","","",37,null],[3,"longlong2","","",null,null],[12,"x","","",38,null],[12,"y","","",38,null],[3,"ulonglong2","","",null,null],[12,"x","","",39,null],[12,"y","","",39,null],[3,"longlong3","","",null,null],[12,"x","","",40,null],[12,"y","","",40,null],[12,"z","","",40,null],[3,"ulonglong3","","",null,null],[12,"x","","",41,null],[12,"y","","",41,null],[12,"z","","",41,null],[3,"longlong4","","",null,null],[12,"x","","",42,null],[12,"y","","",42,null],[12,"z","","",42,null],[12,"w","","",42,null],[3,"ulonglong4","","",null,null],[12,"x","","",43,null],[12,"y","","",43,null],[12,"z","","",43,null],[12,"w","","",43,null],[3,"double1","","",null,null],[12,"x","","",44,null],[3,"double2","","",null,null],[12,"x","","",45,null],[12,"y","","",45,null],[3,"double3","","",null,null],[12,"x","","",46,null],[12,"y","","",46,null],[12,"z","","",46,null],[3,"double4","","",null,null],[12,"x","","",47,null],[12,"y","","",47,null],[12,"z","","",47,null],[12,"w","","",47,null],[3,"dim3","","",null,null],[12,"x","","",48,null],[12,"y","","",48,null],[12,"z","","",48,null],[3,"__crt_locale_data_public","","",null,null],[12,"_locale_pctype","","",49,null],[12,"_locale_mb_cur_max","","",49,null],[12,"_locale_lc_codepage","","",49,null],[3,"__crt_locale_pointers","","",null,null],[12,"locinfo","","",50,null],[12,"mbcinfo","","",50,null],[3,"_Mbstatet","","",null,null],[12,"_Wchar","","",51,null],[12,"_Byte","","",51,null],[12,"_State","","",51,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",52,null],[12,"y","","< y",52,null],[12,"z","","< z",52,null],[12,"w","","< w",52,null],[12,"f","","< Channel format kind",52,null],[3,"cudaArray","","",null,null],[3,"cudaMipmappedArray","","",null,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",53,null],[12,"pitch","","< Pitch of allocated memory in bytes",53,null],[12,"xsize","","< Logical width of allocation in elements",53,null],[12,"ysize","","< Logical height of allocation in elements",53,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in…",54,null],[12,"height","","< Height in elements",54,null],[12,"depth","","< Depth in elements",54,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",55,null],[12,"y","","< y",55,null],[12,"z","","< z",55,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",56,null],[12,"srcPos","","< Source position offset",56,null],[12,"srcPtr","","< Pitched source memory address",56,null],[12,"dstArray","","< Destination memory address",56,null],[12,"dstPos","","< Destination position offset",56,null],[12,"dstPtr","","< Pitched destination memory address",56,null],[12,"extent","","< Requested memory copy size",56,null],[12,"kind","","< Type of transfer",56,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",57,null],[12,"srcPos","","< Source position offset",57,null],[12,"srcPtr","","< Pitched source memory address",57,null],[12,"srcDevice","","< Source device",57,null],[12,"dstArray","","< Destination memory address",57,null],[12,"dstPos","","< Destination position offset",57,null],[12,"dstPtr","","< Pitched destination memory address",57,null],[12,"dstDevice","","< Destination device",57,null],[12,"extent","","< Requested memory copy size",57,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",58,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height is 1",58,null],[12,"value","","< Value to be set",58,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",58,null],[12,"width","","< Width in bytes, of the row",58,null],[12,"height","","< Number of rows",58,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",59,null],[12,"userData","","< Argument to pass to the function",59,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",60,null],[12,"res","","",60,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",61,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",62,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",63,null],[12,"desc","","< Channel descriptor",63,null],[12,"sizeInBytes","","< Size in bytes",63,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",64,null],[12,"desc","","< Channel descriptor",64,null],[12,"width","","< Width of the array in elements",64,null],[12,"height","","< Height of the array in elements",64,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",64,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",65,null],[12,"width","","< Width of the resource view",65,null],[12,"height","","< Height of the resource view",65,null],[12,"depth","","< Depth of the resource view",65,null],[12,"firstMipmapLevel","","< First defined mipmap level",65,null],[12,"lastMipmapLevel","","< Last defined mipmap level",65,null],[12,"firstLayer","","< First layer index",65,null],[12,"lastLayer","","< Last layer index",65,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"memoryType","","\\deprecated",66,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered,…",66,null],[12,"device","","The device against which the memory was allocated or…",66,null],[12,"devicePointer","","The address which may be dereferenced on the current…",66,null],[12,"hostPointer","","The address which may be dereferenced on the host to…",66,null],[12,"isManaged","","\\deprecated",66,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory…",67,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory…",67,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of…",67,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a…",67,null],[12,"numRegs","","The number of registers used by each thread of this…",67,null],[12,"ptxVersion","","The PTX virtual architecture version for which the…",67,null],[12,"binaryVersion","","The binary architecture version for which the function was…",67,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been…",67,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per…",67,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the…",67,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",68,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",69,null],[12,"uuid","","< 16-byte unique identifier",69,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on…",69,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and…",69,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",69,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",69,null],[12,"regsPerBlock","","< 32-bit registers available per block",69,null],[12,"warpSize","","< Warp size in threads",69,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",69,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",69,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",69,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",69,null],[12,"clockRate","","< Clock frequency in kilohertz",69,null],[12,"totalConstMem","","< Constant memory available on device in bytes",69,null],[12,"major","","< Major compute capability",69,null],[12,"minor","","< Minor compute capability",69,null],[12,"textureAlignment","","< Alignment requirement for textures",69,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references bound…",69,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a…",69,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",69,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",69,null],[12,"integrated","","< Device is integrated as opposed to discrete",69,null],[12,"canMapHostMemory","","< Device can map host memory with…",69,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",69,null],[12,"maxTexture1D","","< Maximum 1D texture size",69,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",69,null],[12,"maxTexture1DLinear","","< Maximum size for 1D textures bound to linear memory",69,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",69,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",69,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D…",69,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather…",69,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",69,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",69,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",69,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",69,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",69,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",69,null],[12,"maxSurface1D","","< Maximum 1D surface size",69,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",69,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",69,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",69,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",69,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",69,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",69,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",69,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels concurrently",69,null],[12,"ECCEnabled","","< Device has ECC support enabled",69,null],[12,"pciBusID","","< PCI bus ID of the device",69,null],[12,"pciDeviceID","","< PCI device ID of the device",69,null],[12,"pciDomainID","","< PCI domain ID of the device",69,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0…",69,null],[12,"asyncEngineCount","","< Number of asynchronous engines",69,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",69,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",69,null],[12,"memoryBusWidth","","< Global memory bus width in bits",69,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",69,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",69,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",69,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",69,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",69,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",69,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",69,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",69,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",69,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",69,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native…",69,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",69,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory…",69,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory concurrently…",69,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",69,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",69,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via…",69,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",69,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by…",69,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host's page tables",69,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",69,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",70,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",71,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",72,null],[12,"handle","","",72,null],[12,"size","","Size of the memory allocation",72,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",72,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if 'name' is non-NULL",73,null],[12,"name","","Name of a valid memory object. Must be NULL if 'handle' is…",73,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer's base is",74,null],[12,"size","","Size of the buffer",74,null],[12,"flags","","Flags reserved for future use. Must be zero.",74,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the…",75,null],[12,"formatDesc","","Format of base level of the mipmap chain",75,null],[12,"extent","","Dimensions of base level of the mipmap chain",75,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See…",75,null],[12,"numLevels","","Total number of levels in the mipmap chain",75,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",76,null],[12,"handle","","",76,null],[12,"flags","","Flags reserved for the future. Must be zero.",76,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if 'name' is non-NULL",77,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL if…",77,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore  signal parameters",null,null],[12,"params","","",78,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",78,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",79,null],[12,"nvSciSync","","",79,null],[12,"keyedMutex","","",79,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",80,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",81,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters",null,null],[12,"params","","",82,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",82,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",83,null],[12,"nvSciSync","","",83,null],[12,"keyedMutex","","",83,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",84,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",85,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",85,null],[3,"CUstream_st","","",null,null],[3,"CUevent_st","","",null,null],[3,"CUexternalMemory_st","","",null,null],[3,"CUexternalSemaphore_st","","",null,null],[3,"CUgraph_st","","",null,null],[3,"CUgraphNode_st","","",null,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",86,null],[12,"gridDim","","< Grid dimentions",86,null],[12,"blockDim","","< Block dimentions",86,null],[12,"args","","< Arguments",86,null],[12,"sharedMem","","< Shared memory",86,null],[12,"stream","","< Stream identifier",86,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",87,null],[12,"gridDim","","< Grid dimensions",87,null],[12,"blockDim","","< Block dimensions",87,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",87,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",87,null],[12,"extra","","< Pointer to kernel arguments in the \"extra\" format",87,null],[3,"CUgraphExec_st","","",null,null],[3,"surfaceReference","","CUDA Surface reference",null,null],[12,"channelDesc","","Channel descriptor for surface reference",88,null],[3,"textureReference","","CUDA texture reference",null,null],[12,"normalized","","Indicates whether texture reads are normalized or not",89,null],[12,"filterMode","","Texture filter mode",89,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",89,null],[12,"channelDesc","","Channel descriptor for the texture reference",89,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",89,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",89,null],[12,"mipmapFilterMode","","Mipmap filter mode",89,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",89,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",89,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",89,null],[12,"__cudaReserved","","",89,null],[3,"cudaTextureDesc","","CUDA texture descriptor",null,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",90,null],[12,"filterMode","","Texture filter mode",90,null],[12,"readMode","","Texture read mode",90,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",90,null],[12,"borderColor","","Texture Border Color",90,null],[12,"normalizedCoords","","Indicates whether texture reads are normalized or not",90,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",90,null],[12,"mipmapFilterMode","","Mipmap filter mode",90,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",90,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",90,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",90,null],[3,"cudnnContext","","",null,null],[3,"cudnnRuntimeTag_t","","",null,null],[3,"cudnnTensorStruct","","",null,null],[3,"cudnnConvolutionStruct","","",null,null],[3,"cudnnPoolingStruct","","",null,null],[3,"cudnnFilterStruct","","",null,null],[3,"cudnnLRNStruct","","",null,null],[3,"cudnnActivationStruct","","",null,null],[3,"cudnnSpatialTransformerStruct","","",null,null],[3,"cudnnOpTensorStruct","","",null,null],[3,"cudnnReduceTensorStruct","","",null,null],[3,"cudnnCTCLossStruct","","",null,null],[3,"cudnnTensorTransformStruct","","",null,null],[3,"cudnnConvolutionFwdAlgoPerf_t","","",null,null],[12,"algo","","",91,null],[12,"status","","",91,null],[12,"time","","",91,null],[12,"memory","","",91,null],[12,"determinism","","",91,null],[12,"mathType","","",91,null],[12,"reserved","","",91,null],[3,"cudnnConvolutionBwdFilterAlgoPerf_t","","",null,null],[12,"algo","","",92,null],[12,"status","","",92,null],[12,"time","","",92,null],[12,"memory","","",92,null],[12,"determinism","","",92,null],[12,"mathType","","",92,null],[12,"reserved","","",92,null],[3,"cudnnConvolutionBwdDataAlgoPerf_t","","",null,null],[12,"algo","","",93,null],[12,"status","","",93,null],[12,"time","","",93,null],[12,"memory","","",93,null],[12,"determinism","","",93,null],[12,"mathType","","",93,null],[12,"reserved","","",93,null],[3,"cudnnDropoutStruct","","",null,null],[3,"cudnnRNNStruct","","",null,null],[3,"cudnnPersistentRNNPlan","","",null,null],[3,"cudnnRNNDataStruct","","",null,null],[3,"cudnnAlgorithmStruct","","",null,null],[3,"cudnnAlgorithmPerformanceStruct","","",null,null],[3,"cudnnSeqDataStruct","","",null,null],[3,"cudnnAttnStruct","","",null,null],[3,"cudnnAlgorithm_t","","",null,null],[12,"algo","","",94,null],[3,"cudnnDebug_t","","",null,null],[12,"cudnn_version","","",95,null],[12,"cudnnStatus","","",95,null],[12,"time_sec","","",95,null],[12,"time_usec","","",95,null],[12,"time_delta","","",95,null],[12,"handle","","",95,null],[12,"stream","","",95,null],[12,"pid","","",95,null],[12,"tid","","",95,null],[12,"cudaDeviceId","","",95,null],[12,"reserved","","",95,null],[3,"cudnnFusedOpsConstParamStruct","","",null,null],[3,"cudnnFusedOpsVariantParamStruct","","",null,null],[3,"cudnnFusedOpsPlanStruct","","",null,null],[3,"__crt_locale_data","","",null,null],[12,"_address","","",96,null],[3,"__crt_multibyte_data","","",null,null],[12,"_address","","",97,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",98,null],[12,"mipmap","","",98,null],[12,"linear","","",98,null],[12,"pitch2D","","",98,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when…",99,null],[12,"win32","","",99,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is…",99,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid…",100,null],[12,"win32","","",100,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",100,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",101,null],[12,"reserved","","",101,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",102,null],[12,"reserved","","",102,null],[19,"cudnnAlgorithm_t_Algorithm","","",null,null],[12,"convFwdAlgo","","",103,null],[12,"convBwdFilterAlgo","","",103,null],[12,"convBwdDataAlgo","","",103,null],[12,"RNNAlgo","","",103,null],[12,"CTCLossAlgo","","",103,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",104,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",104,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",104,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",104,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",104,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",104,null],[13,"cudaErrorProfilerNotInitialized","","\\deprecated This error return is deprecated as of CUDA…",104,null],[13,"cudaErrorProfilerAlreadyStarted","","\\deprecated This error return is deprecated as of CUDA…",104,null],[13,"cudaErrorProfilerAlreadyStopped","","\\deprecated This error return is deprecated as of CUDA…",104,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",104,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",104,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",104,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",104,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",104,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",104,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",104,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",104,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",104,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",104,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",104,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",104,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",104,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",104,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",104,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",104,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",104,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",104,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",104,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",104,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",104,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",104,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",104,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",104,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",104,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",104,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",104,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",104,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",104,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",104,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",104,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",104,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",104,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",104,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",104,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",104,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",104,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",104,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",104,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",104,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",104,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",104,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",104,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",104,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",104,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",104,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",104,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",104,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",104,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",104,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",104,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",104,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",104,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",104,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",104,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",104,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",104,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",104,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",104,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",104,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",104,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",104,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",104,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",104,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",104,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",104,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",104,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",104,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",104,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",104,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",104,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",104,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",104,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",104,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",104,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",104,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",104,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",104,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",104,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",104,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",104,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",104,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",104,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",104,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",104,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",104,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",104,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",104,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",104,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",104,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",104,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",104,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",104,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",104,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",104,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",104,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",104,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",104,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",104,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",104,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",104,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",104,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",104,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",104,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",104,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",104,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",104,null],[13,"cudaErrorProfilerNotInitialized","","\\deprecated This error return is deprecated as of CUDA…",104,null],[13,"cudaErrorProfilerAlreadyStarted","","\\deprecated This error return is deprecated as of CUDA…",104,null],[13,"cudaErrorProfilerAlreadyStopped","","\\deprecated This error return is deprecated as of CUDA…",104,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",104,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",104,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",104,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",104,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",104,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",104,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",104,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",104,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",104,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",104,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",104,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",104,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",104,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",104,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",104,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",104,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",104,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",104,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",104,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",104,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",104,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",104,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",104,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",104,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",104,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",104,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",104,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",104,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",104,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",104,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",104,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",104,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",104,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",104,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",104,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",104,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",104,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",104,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",104,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",104,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",104,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",104,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",104,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",104,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",104,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",104,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",104,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",104,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",104,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",104,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",104,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",104,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",104,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",104,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",104,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",104,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",104,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",104,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",104,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",104,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",104,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",104,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",104,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",104,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",104,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",104,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",104,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",104,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",104,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",104,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",104,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",104,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",104,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",104,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",104,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",104,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",104,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",104,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",104,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",104,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",104,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",104,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",104,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",104,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",104,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",104,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",104,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",104,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",104,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",104,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",104,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",104,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",104,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",104,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",104,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",104,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",104,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",104,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",104,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",104,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",104,null],[4,"cudnnStatus_t","","",null,null],[13,"CUDNN_STATUS_SUCCESS","","",105,null],[13,"CUDNN_STATUS_NOT_INITIALIZED","","",105,null],[13,"CUDNN_STATUS_ALLOC_FAILED","","",105,null],[13,"CUDNN_STATUS_BAD_PARAM","","",105,null],[13,"CUDNN_STATUS_INTERNAL_ERROR","","",105,null],[13,"CUDNN_STATUS_INVALID_VALUE","","",105,null],[13,"CUDNN_STATUS_ARCH_MISMATCH","","",105,null],[13,"CUDNN_STATUS_MAPPING_ERROR","","",105,null],[13,"CUDNN_STATUS_EXECUTION_FAILED","","",105,null],[13,"CUDNN_STATUS_NOT_SUPPORTED","","",105,null],[13,"CUDNN_STATUS_LICENSE_ERROR","","",105,null],[13,"CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","","",105,null],[13,"CUDNN_STATUS_RUNTIME_IN_PROGRESS","","",105,null],[13,"CUDNN_STATUS_RUNTIME_FP_OVERFLOW","","",105,null],[4,"cudnnErrQueryMode_t","","",null,null],[13,"CUDNN_ERRQUERY_RAWCODE","","",106,null],[13,"CUDNN_ERRQUERY_NONBLOCKING","","",106,null],[13,"CUDNN_ERRQUERY_BLOCKING","","",106,null],[4,"cudnnDataType_t","","",null,null],[13,"CUDNN_DATA_FLOAT","","",107,null],[13,"CUDNN_DATA_DOUBLE","","",107,null],[13,"CUDNN_DATA_HALF","","",107,null],[13,"CUDNN_DATA_INT8","","",107,null],[13,"CUDNN_DATA_INT32","","",107,null],[13,"CUDNN_DATA_INT8x4","","",107,null],[13,"CUDNN_DATA_UINT8","","",107,null],[13,"CUDNN_DATA_UINT8x4","","",107,null],[13,"CUDNN_DATA_INT8x32","","",107,null],[4,"cudnnMathType_t","","",null,null],[13,"CUDNN_DEFAULT_MATH","","",108,null],[13,"CUDNN_TENSOR_OP_MATH","","",108,null],[13,"CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","","",108,null],[4,"cudnnNanPropagation_t","","",null,null],[13,"CUDNN_NOT_PROPAGATE_NAN","","",109,null],[13,"CUDNN_PROPAGATE_NAN","","",109,null],[4,"cudnnDeterminism_t","","",null,null],[13,"CUDNN_NON_DETERMINISTIC","","",110,null],[13,"CUDNN_DETERMINISTIC","","",110,null],[4,"cudnnReorderType_t","","",null,null],[13,"CUDNN_DEFAULT_REORDER","","",111,null],[13,"CUDNN_NO_REORDER","","",111,null],[4,"cudnnTensorFormat_t","","",null,null],[13,"CUDNN_TENSOR_NCHW","","",112,null],[13,"CUDNN_TENSOR_NHWC","","",112,null],[13,"CUDNN_TENSOR_NCHW_VECT_C","","",112,null],[4,"cudnnFoldingDirection_t","","",null,null],[13,"CUDNN_TRANSFORM_FOLD","","",113,null],[13,"CUDNN_TRANSFORM_UNFOLD","","",113,null],[4,"cudnnOpTensorOp_t","","",null,null],[13,"CUDNN_OP_TENSOR_ADD","","",114,null],[13,"CUDNN_OP_TENSOR_MUL","","",114,null],[13,"CUDNN_OP_TENSOR_MIN","","",114,null],[13,"CUDNN_OP_TENSOR_MAX","","",114,null],[13,"CUDNN_OP_TENSOR_SQRT","","",114,null],[13,"CUDNN_OP_TENSOR_NOT","","",114,null],[4,"cudnnReduceTensorOp_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_ADD","","",115,null],[13,"CUDNN_REDUCE_TENSOR_MUL","","",115,null],[13,"CUDNN_REDUCE_TENSOR_MIN","","",115,null],[13,"CUDNN_REDUCE_TENSOR_MAX","","",115,null],[13,"CUDNN_REDUCE_TENSOR_AMAX","","",115,null],[13,"CUDNN_REDUCE_TENSOR_AVG","","",115,null],[13,"CUDNN_REDUCE_TENSOR_NORM1","","",115,null],[13,"CUDNN_REDUCE_TENSOR_NORM2","","",115,null],[13,"CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","","",115,null],[4,"cudnnReduceTensorIndices_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_NO_INDICES","","",116,null],[13,"CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","","",116,null],[4,"cudnnIndicesType_t","","",null,null],[13,"CUDNN_32BIT_INDICES","","",117,null],[13,"CUDNN_64BIT_INDICES","","",117,null],[13,"CUDNN_16BIT_INDICES","","",117,null],[13,"CUDNN_8BIT_INDICES","","",117,null],[4,"cudnnConvolutionMode_t","","",null,null],[13,"CUDNN_CONVOLUTION","","",118,null],[13,"CUDNN_CROSS_CORRELATION","","",118,null],[4,"cudnnConvolutionFwdPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_NO_WORKSPACE","","",119,null],[13,"CUDNN_CONVOLUTION_FWD_PREFER_FASTEST","","",119,null],[13,"CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT","","",119,null],[4,"cudnnConvolutionFwdAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_GEMM","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","","",120,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_COUNT","","",120,null],[4,"cudnnConvolutionBwdFilterPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_NO_WORKSPACE","","",121,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_PREFER_FASTEST","","",121,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_SPECIFY_WORKSPACE_LIMIT","","",121,null],[4,"cudnnConvolutionBwdFilterAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","","",122,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","","",122,null],[4,"cudnnConvolutionBwdDataPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_NO_WORKSPACE","","",123,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_PREFER_FASTEST","","",123,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_SPECIFY_WORKSPACE_LIMIT","","",123,null],[4,"cudnnConvolutionBwdDataAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","","",124,null],[4,"cudnnSoftmaxAlgorithm_t","","",null,null],[13,"CUDNN_SOFTMAX_FAST","","",125,null],[13,"CUDNN_SOFTMAX_ACCURATE","","",125,null],[13,"CUDNN_SOFTMAX_LOG","","",125,null],[4,"cudnnSoftmaxMode_t","","",null,null],[13,"CUDNN_SOFTMAX_MODE_INSTANCE","","",126,null],[13,"CUDNN_SOFTMAX_MODE_CHANNEL","","",126,null],[4,"cudnnPoolingMode_t","","",null,null],[13,"CUDNN_POOLING_MAX","","",127,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","","",127,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","","",127,null],[13,"CUDNN_POOLING_MAX_DETERMINISTIC","","",127,null],[4,"cudnnActivationMode_t","","",null,null],[13,"CUDNN_ACTIVATION_SIGMOID","","",128,null],[13,"CUDNN_ACTIVATION_RELU","","",128,null],[13,"CUDNN_ACTIVATION_TANH","","",128,null],[13,"CUDNN_ACTIVATION_CLIPPED_RELU","","",128,null],[13,"CUDNN_ACTIVATION_ELU","","",128,null],[13,"CUDNN_ACTIVATION_IDENTITY","","",128,null],[4,"cudnnLRNMode_t","","",null,null],[13,"CUDNN_LRN_CROSS_CHANNEL_DIM1","","",129,null],[4,"cudnnDivNormMode_t","","",null,null],[13,"CUDNN_DIVNORM_PRECOMPUTED_MEANS","","",130,null],[4,"cudnnBatchNormMode_t","","",null,null],[13,"CUDNN_BATCHNORM_PER_ACTIVATION","","",131,null],[13,"CUDNN_BATCHNORM_SPATIAL","","",131,null],[13,"CUDNN_BATCHNORM_SPATIAL_PERSISTENT","","",131,null],[4,"cudnnBatchNormOps_t","","",null,null],[13,"CUDNN_BATCHNORM_OPS_BN","","",132,null],[13,"CUDNN_BATCHNORM_OPS_BN_ACTIVATION","","",132,null],[13,"CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","","",132,null],[4,"cudnnSamplerType_t","","",null,null],[13,"CUDNN_SAMPLER_BILINEAR","","",133,null],[4,"cudnnRNNAlgo_t","","",null,null],[13,"CUDNN_RNN_ALGO_STANDARD","","",134,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC","","",134,null],[13,"CUDNN_RNN_ALGO_PERSIST_DYNAMIC","","",134,null],[13,"CUDNN_RNN_ALGO_COUNT","","",134,null],[4,"cudnnRNNMode_t","","",null,null],[13,"CUDNN_RNN_RELU","","",135,null],[13,"CUDNN_RNN_TANH","","",135,null],[13,"CUDNN_LSTM","","",135,null],[13,"CUDNN_GRU","","",135,null],[4,"cudnnRNNBiasMode_t","","",null,null],[13,"CUDNN_RNN_NO_BIAS","","",136,null],[13,"CUDNN_RNN_SINGLE_INP_BIAS","","",136,null],[13,"CUDNN_RNN_DOUBLE_BIAS","","",136,null],[13,"CUDNN_RNN_SINGLE_REC_BIAS","","",136,null],[4,"cudnnDirectionMode_t","","",null,null],[13,"CUDNN_UNIDIRECTIONAL","","",137,null],[13,"CUDNN_BIDIRECTIONAL","","",137,null],[4,"cudnnRNNInputMode_t","","",null,null],[13,"CUDNN_LINEAR_INPUT","","",138,null],[13,"CUDNN_SKIP_INPUT","","",138,null],[4,"cudnnRNNClipMode_t","","",null,null],[13,"CUDNN_RNN_CLIP_NONE","","",139,null],[13,"CUDNN_RNN_CLIP_MINMAX","","",139,null],[4,"cudnnRNNDataLayout_t","","",null,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","","",140,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","","",140,null],[13,"CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","","",140,null],[4,"cudnnRNNPaddingMode_t","","",null,null],[13,"CUDNN_RNN_PADDED_IO_DISABLED","","",141,null],[13,"CUDNN_RNN_PADDED_IO_ENABLED","","",141,null],[4,"cudnnSeqDataAxis_t","","",null,null],[13,"CUDNN_SEQDATA_TIME_DIM","","",142,null],[13,"CUDNN_SEQDATA_BATCH_DIM","","",142,null],[13,"CUDNN_SEQDATA_BEAM_DIM","","",142,null],[13,"CUDNN_SEQDATA_VECT_DIM","","",142,null],[4,"cudnnMultiHeadAttnWeightKind_t","","",null,null],[13,"CUDNN_MH_ATTN_Q_WEIGHTS","","",143,null],[13,"CUDNN_MH_ATTN_K_WEIGHTS","","",143,null],[13,"CUDNN_MH_ATTN_V_WEIGHTS","","",143,null],[13,"CUDNN_MH_ATTN_O_WEIGHTS","","",143,null],[13,"CUDNN_MH_ATTN_Q_BIASES","","",143,null],[13,"CUDNN_MH_ATTN_K_BIASES","","",143,null],[13,"CUDNN_MH_ATTN_V_BIASES","","",143,null],[13,"CUDNN_MH_ATTN_O_BIASES","","",143,null],[4,"cudnnWgradMode_t","","",null,null],[13,"CUDNN_WGRAD_MODE_ADD","","",144,null],[13,"CUDNN_WGRAD_MODE_SET","","",144,null],[4,"cudnnCTCLossAlgo_t","","",null,null],[13,"CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","","",145,null],[13,"CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","","",145,null],[4,"cudnnLossNormalizationMode_t","","",null,null],[13,"CUDNN_LOSS_NORMALIZATION_NONE","","",146,null],[13,"CUDNN_LOSS_NORMALIZATION_SOFTMAX","","",146,null],[4,"cudnnSeverity_t","","",null,null],[13,"CUDNN_SEV_FATAL","","",147,null],[13,"CUDNN_SEV_ERROR","","",147,null],[13,"CUDNN_SEV_WARNING","","",147,null],[13,"CUDNN_SEV_INFO","","",147,null],[4,"cudnnFusedOps_t","","",null,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","","",148,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","","",148,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","","",148,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","","",148,null],[13,"CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","","",148,null],[13,"CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","","",148,null],[13,"CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","","",148,null],[4,"cudnnFusedOpsConstParamLabel_t","","",null,null],[13,"CUDNN_PARAM_XDESC","","",149,null],[13,"CUDNN_PARAM_XDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_MODE","","",149,null],[13,"CUDNN_PARAM_BN_EQSCALEBIAS_DESC","","",149,null],[13,"CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_ACTIVATION_DESC","","",149,null],[13,"CUDNN_PARAM_CONV_DESC","","",149,null],[13,"CUDNN_PARAM_WDESC","","",149,null],[13,"CUDNN_PARAM_WDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_DWDESC","","",149,null],[13,"CUDNN_PARAM_DWDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_YDESC","","",149,null],[13,"CUDNN_PARAM_YDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_DYDESC","","",149,null],[13,"CUDNN_PARAM_DYDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_YSTATS_DESC","","",149,null],[13,"CUDNN_PARAM_YSUM_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_YSQSUM_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","","",149,null],[13,"CUDNN_PARAM_BN_SCALE_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_BIAS_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_ZDESC","","",149,null],[13,"CUDNN_PARAM_ZDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","","",149,null],[13,"CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_DESC","","",149,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_DXDESC","","",149,null],[13,"CUDNN_PARAM_DXDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_DZDESC","","",149,null],[13,"CUDNN_PARAM_DZDATA_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","","",149,null],[13,"CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","","",149,null],[4,"cudnnFusedOpsPointerPlaceHolder_t","","",null,null],[13,"CUDNN_PTR_NULL","","",150,null],[13,"CUDNN_PTR_ELEM_ALIGNED","","",150,null],[13,"CUDNN_PTR_16B_ALIGNED","","",150,null],[4,"cudnnFusedOpsVariantParamLabel_t","","",null,null],[13,"CUDNN_PTR_XDATA","","",151,null],[13,"CUDNN_PTR_BN_EQSCALE","","",151,null],[13,"CUDNN_PTR_BN_EQBIAS","","",151,null],[13,"CUDNN_PTR_WDATA","","",151,null],[13,"CUDNN_PTR_DWDATA","","",151,null],[13,"CUDNN_PTR_YDATA","","",151,null],[13,"CUDNN_PTR_DYDATA","","",151,null],[13,"CUDNN_PTR_YSUM","","",151,null],[13,"CUDNN_PTR_YSQSUM","","",151,null],[13,"CUDNN_PTR_WORKSPACE","","",151,null],[13,"CUDNN_PTR_BN_SCALE","","",151,null],[13,"CUDNN_PTR_BN_BIAS","","",151,null],[13,"CUDNN_PTR_BN_SAVED_MEAN","","",151,null],[13,"CUDNN_PTR_BN_SAVED_INVSTD","","",151,null],[13,"CUDNN_PTR_BN_RUNNING_MEAN","","",151,null],[13,"CUDNN_PTR_BN_RUNNING_VAR","","",151,null],[13,"CUDNN_PTR_ZDATA","","",151,null],[13,"CUDNN_PTR_BN_Z_EQSCALE","","",151,null],[13,"CUDNN_PTR_BN_Z_EQBIAS","","",151,null],[13,"CUDNN_PTR_ACTIVATION_BITMASK","","",151,null],[13,"CUDNN_PTR_DXDATA","","",151,null],[13,"CUDNN_PTR_DZDATA","","",151,null],[13,"CUDNN_PTR_BN_DSCALE","","",151,null],[13,"CUDNN_PTR_BN_DBIAS","","",151,null],[13,"CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","","",151,null],[13,"CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","","",151,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","","",151,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EPSILON","","",151,null],[5,"__va_start","","",null,null],[5,"__security_init_cookie","","",null,null],[5,"__security_check_cookie","","",null,null],[5,"__report_gsfailure","","",null,null],[7,"__security_cookie","","",null,null],[5,"_invalid_parameter_noinfo","","",null,null],[5,"_invalid_parameter_noinfo_noreturn","","",null,null],[5,"_invoke_watson","","",null,null],[5,"_errno","","",null,null],[5,"_set_errno","","",null,null],[5,"_get_errno","","",null,null],[5,"__threadid","","",null,null],[5,"__threadhandle","","",null,null],[5,"cudaDeviceReset","","\\brief Destroy all allocations and reset all state on the…",null,null],[5,"cudaDeviceSynchronize","","\\brief Wait for compute device to finish",null,null],[5,"cudaDeviceSetLimit","","\\brief Set resource limits",null,null],[5,"cudaDeviceGetLimit","","\\brief Returns resource limits",null,null],[5,"cudaDeviceGetCacheConfig","","\\brief Returns the preferred cache configuration for the…",null,null],[5,"cudaDeviceGetStreamPriorityRange","","\\brief Returns numerical values that correspond to the…",null,null],[5,"cudaDeviceSetCacheConfig","","\\brief Sets the preferred cache configuration for the…",null,null],[5,"cudaDeviceGetSharedMemConfig","","\\brief Returns the shared memory configuration for the…",null,null],[5,"cudaDeviceSetSharedMemConfig","","\\brief Sets the shared memory configuration for the…",null,null],[5,"cudaDeviceGetByPCIBusId","","\\brief Returns a handle to a compute device",null,null],[5,"cudaDeviceGetPCIBusId","","\\brief Returns a PCI Bus Id string for the device",null,null],[5,"cudaIpcGetEventHandle","","\\brief Gets an interprocess handle for a previously…",null,null],[5,"cudaIpcOpenEventHandle","","\\brief Opens an interprocess event handle for use in the…",null,null],[5,"cudaIpcGetMemHandle","","\\brief Gets an interprocess memory handle for an existing…",null,null],[5,"cudaIpcOpenMemHandle","","\\brief Opens an interprocess memory handle exported from…",null,null],[5,"cudaIpcCloseMemHandle","","\\brief Close memory mapped with cudaIpcOpenMemHandle",null,null],[5,"cudaThreadExit","","\\brief Exit and clean up from CUDA launches",null,null],[5,"cudaThreadSynchronize","","\\brief Wait for compute device to finish",null,null],[5,"cudaThreadSetLimit","","\\brief Set resource limits",null,null],[5,"cudaThreadGetLimit","","\\brief Returns resource limits",null,null],[5,"cudaThreadGetCacheConfig","","\\brief Returns the preferred cache configuration for the…",null,null],[5,"cudaThreadSetCacheConfig","","\\brief Sets the preferred cache configuration for the…",null,null],[5,"cudaGetLastError","","\\brief Returns the last error from a runtime call",null,null],[5,"cudaPeekAtLastError","","\\brief Returns the last error from a runtime call",null,null],[5,"cudaGetErrorName","","\\brief Returns the string representation of an error code…",null,null],[5,"cudaGetErrorString","","\\brief Returns the description string for an error code",null,null],[5,"cudaGetDeviceCount","","\\brief Returns the number of compute-capable devices",null,null],[5,"cudaGetDeviceProperties","","\\brief Returns information about the compute-device",null,null],[5,"cudaDeviceGetAttribute","","\\brief Returns information about the device",null,null],[5,"cudaDeviceGetNvSciSyncAttributes","","\\brief Return NvSciSync attributes that this device can…",null,null],[5,"cudaDeviceGetP2PAttribute","","\\brief Queries attributes of the link between two devices.",null,null],[5,"cudaChooseDevice","","\\brief Select compute-device which best matches criteria",null,null],[5,"cudaSetDevice","","\\brief Set device to be used for GPU executions",null,null],[5,"cudaGetDevice","","\\brief Returns which device is currently being used",null,null],[5,"cudaSetValidDevices","","\\brief Set a list of devices that can be used for CUDA",null,null],[5,"cudaSetDeviceFlags","","\\brief Sets flags to be used for device executions",null,null],[5,"cudaGetDeviceFlags","","\\brief Gets the flags for the current device",null,null],[5,"cudaStreamCreate","","\\brief Create an asynchronous stream",null,null],[5,"cudaStreamCreateWithFlags","","\\brief Create an asynchronous stream",null,null],[5,"cudaStreamCreateWithPriority","","\\brief Create an asynchronous stream with the specified…",null,null],[5,"cudaStreamGetPriority","","\\brief Query the priority of a stream",null,null],[5,"cudaStreamGetFlags","","\\brief Query the flags of a stream",null,null],[5,"cudaStreamDestroy","","\\brief Destroys and cleans up an asynchronous stream",null,null],[5,"cudaStreamWaitEvent","","\\brief Make a compute stream wait on an event",null,null],[5,"cudaStreamAddCallback","","\\brief Add a callback to a compute stream",null,null],[5,"cudaStreamSynchronize","","\\brief Waits for stream tasks to complete",null,null],[5,"cudaStreamQuery","","\\brief Queries an asynchronous stream for completion status",null,null],[5,"cudaStreamAttachMemAsync","","\\brief Attach memory to a stream asynchronously",null,null],[5,"cudaStreamBeginCapture","","\\brief Begins graph capture on a stream",null,null],[5,"cudaThreadExchangeStreamCaptureMode","","\\brief Swaps the stream capture interaction mode for a…",null,null],[5,"cudaStreamEndCapture","","\\brief Ends capture on a stream, returning the captured…",null,null],[5,"cudaStreamIsCapturing","","\\brief Returns a stream's capture status",null,null],[5,"cudaStreamGetCaptureInfo","","\\brief Query capture status of a stream",null,null],[5,"cudaEventCreate","","\\brief Creates an event object",null,null],[5,"cudaEventCreateWithFlags","","\\brief Creates an event object with the specified flags",null,null],[5,"cudaEventRecord","","\\brief Records an event",null,null],[5,"cudaEventQuery","","\\brief Queries an event's status",null,null],[5,"cudaEventSynchronize","","\\brief Waits for an event to complete",null,null],[5,"cudaEventDestroy","","\\brief Destroys an event object",null,null],[5,"cudaEventElapsedTime","","\\brief Computes the elapsed time between events",null,null],[5,"cudaImportExternalMemory","","\\brief Imports an external memory object",null,null],[5,"cudaExternalMemoryGetMappedBuffer","","\\brief Maps a buffer onto an imported memory object",null,null],[5,"cudaExternalMemoryGetMappedMipmappedArray","","\\brief Maps a CUDA mipmapped array onto an external memory…",null,null],[5,"cudaDestroyExternalMemory","","\\brief Destroys an external memory object.",null,null],[5,"cudaImportExternalSemaphore","","\\brief Imports an external semaphore",null,null],[5,"cudaSignalExternalSemaphoresAsync","","\\brief Signals a set of external semaphore objects",null,null],[5,"cudaWaitExternalSemaphoresAsync","","\\brief Waits on a set of external semaphore objects",null,null],[5,"cudaDestroyExternalSemaphore","","\\brief Destroys an external semaphore",null,null],[5,"cudaLaunchKernel","","\\brief Launches a device function",null,null],[5,"cudaLaunchCooperativeKernel","","\\brief Launches a device function where thread blocks can…",null,null],[5,"cudaLaunchCooperativeKernelMultiDevice","","\\brief Launches device functions on multiple devices where…",null,null],[5,"cudaFuncSetCacheConfig","","\\brief Sets the preferred cache configuration for a device…",null,null],[5,"cudaFuncSetSharedMemConfig","","\\brief Sets the shared memory configuration for a device…",null,null],[5,"cudaFuncGetAttributes","","\\brief Find out attributes for a given function",null,null],[5,"cudaFuncSetAttribute","","\\brief Set attributes for a given function",null,null],[5,"cudaSetDoubleForDevice","","\\brief Converts a double argument to be executed on a device",null,null],[5,"cudaSetDoubleForHost","","\\brief Converts a double argument after execution on a…",null,null],[5,"cudaLaunchHostFunc","","\\brief Enqueues a host function call in a stream",null,null],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessor","","\\brief Returns occupancy for a device function",null,null],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","","\\brief Returns occupancy for a device function with the…",null,null],[5,"cudaMallocManaged","","\\brief Allocates memory that will be automatically managed…",null,null],[5,"cudaMalloc","","\\brief Allocate memory on the device",null,null],[5,"cudaMallocHost","","\\brief Allocates page-locked memory on the host",null,null],[5,"cudaMallocPitch","","\\brief Allocates pitched memory on the device",null,null],[5,"cudaMallocArray","","\\brief Allocate an array on the device",null,null],[5,"cudaFree","","\\brief Frees memory on the device",null,null],[5,"cudaFreeHost","","\\brief Frees page-locked memory",null,null],[5,"cudaFreeArray","","\\brief Frees an array on the device",null,null],[5,"cudaFreeMipmappedArray","","\\brief Frees a mipmapped array on the device",null,null],[5,"cudaHostAlloc","","\\brief Allocates page-locked memory on the host",null,null],[5,"cudaHostRegister","","\\brief Registers an existing host memory range for use by…",null,null],[5,"cudaHostUnregister","","\\brief Unregisters a memory range that was registered with…",null,null],[5,"cudaHostGetDevicePointer","","\\brief Passes back device pointer of mapped host memory…",null,null],[5,"cudaHostGetFlags","","\\brief Passes back flags used to allocate pinned host…",null,null],[5,"cudaMalloc3D","","\\brief Allocates logical 1D, 2D, or 3D memory objects on…",null,null],[5,"cudaMalloc3DArray","","\\brief Allocate an array on the device",null,null],[5,"cudaMallocMipmappedArray","","\\brief Allocate a mipmapped array on the device",null,null],[5,"cudaGetMipmappedArrayLevel","","\\brief Gets a mipmap level of a CUDA mipmapped array",null,null],[5,"cudaMemcpy3D","","\\brief Copies data between 3D objects",null,null],[5,"cudaMemcpy3DPeer","","\\brief Copies memory between devices",null,null],[5,"cudaMemcpy3DAsync","","\\brief Copies data between 3D objects",null,null],[5,"cudaMemcpy3DPeerAsync","","\\brief Copies memory between devices asynchronously.",null,null],[5,"cudaMemGetInfo","","\\brief Gets free and total device memory",null,null],[5,"cudaArrayGetInfo","","\\brief Gets info about the specified cudaArray",null,null],[5,"cudaMemcpy","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyPeer","","\\brief Copies memory between two devices",null,null],[5,"cudaMemcpy2D","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DToArray","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DFromArray","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DArrayToArray","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToSymbol","","\\brief Copies data to the given symbol on the device",null,null],[5,"cudaMemcpyFromSymbol","","\\brief Copies data from the given symbol on the device",null,null],[5,"cudaMemcpyAsync","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyPeerAsync","","\\brief Copies memory between two devices asynchronously.",null,null],[5,"cudaMemcpy2DAsync","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DToArrayAsync","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DFromArrayAsync","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToSymbolAsync","","\\brief Copies data to the given symbol on the device",null,null],[5,"cudaMemcpyFromSymbolAsync","","\\brief Copies data from the given symbol on the device",null,null],[5,"cudaMemset","","\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset2D","","\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset3D","","\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemsetAsync","","\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset2DAsync","","\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset3DAsync","","\\brief Initializes or sets device memory to a value",null,null],[5,"cudaGetSymbolAddress","","\\brief Finds the address associated with a CUDA symbol",null,null],[5,"cudaGetSymbolSize","","\\brief Finds the size of the object associated with a CUDA…",null,null],[5,"cudaMemPrefetchAsync","","\\brief Prefetches memory to the specified destination device",null,null],[5,"cudaMemAdvise","","\\brief Advise about the usage of a given memory range",null,null],[5,"cudaMemRangeGetAttribute","","\\brief Query an attribute of a given memory range",null,null],[5,"cudaMemRangeGetAttributes","","\\brief Query attributes of a given memory range.",null,null],[5,"cudaMemcpyToArray","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyFromArray","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyArrayToArray","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToArrayAsync","","\\brief Copies data between host and device",null,null],[5,"cudaMemcpyFromArrayAsync","","\\brief Copies data between host and device",null,null],[5,"cudaPointerGetAttributes","","\\brief Returns attributes about a specified pointer",null,null],[5,"cudaDeviceCanAccessPeer","","\\brief Queries if a device may directly access a peer…",null,null],[5,"cudaDeviceEnablePeerAccess","","\\brief Enables direct access to memory allocations on a…",null,null],[5,"cudaDeviceDisablePeerAccess","","\\brief Disables direct access to memory allocations on a…",null,null],[5,"cudaGraphicsUnregisterResource","","\\brief Unregisters a graphics resource for access by CUDA",null,null],[5,"cudaGraphicsResourceSetMapFlags","","\\brief Set usage flags for mapping a graphics resource",null,null],[5,"cudaGraphicsMapResources","","\\brief Map graphics resources for access by CUDA",null,null],[5,"cudaGraphicsUnmapResources","","\\brief Unmap graphics resources.",null,null],[5,"cudaGraphicsResourceGetMappedPointer","","\\brief Get an device pointer through which to access a…",null,null],[5,"cudaGraphicsSubResourceGetMappedArray","","\\brief Get an array through which to access a subresource…",null,null],[5,"cudaGraphicsResourceGetMappedMipmappedArray","","\\brief Get a mipmapped array through which to access a…",null,null],[5,"cudaBindTexture","","\\brief Binds a memory area to a texture",null,null],[5,"cudaBindTexture2D","","\\brief Binds a 2D memory area to a texture",null,null],[5,"cudaBindTextureToArray","","\\brief Binds an array to a texture",null,null],[5,"cudaBindTextureToMipmappedArray","","\\brief Binds a mipmapped array to a texture",null,null],[5,"cudaUnbindTexture","","\\brief Unbinds a texture",null,null],[5,"cudaGetTextureAlignmentOffset","","\\brief Get the alignment offset of a texture",null,null],[5,"cudaGetTextureReference","","\\brief Get the texture reference associated with a symbol",null,null],[5,"cudaBindSurfaceToArray","","\\brief Binds an array to a surface",null,null],[5,"cudaGetSurfaceReference","","\\brief Get the surface reference associated with a symbol",null,null],[5,"cudaGetChannelDesc","","\\brief Get the channel descriptor of an array",null,null],[5,"cudaCreateChannelDesc","","\\brief Returns a channel descriptor using the specified…",null,null],[5,"cudaCreateTextureObject","","\\brief Creates a texture object",null,null],[5,"cudaDestroyTextureObject","","\\brief Destroys a texture object",null,null],[5,"cudaGetTextureObjectResourceDesc","","\\brief Returns a texture object's resource descriptor",null,null],[5,"cudaGetTextureObjectTextureDesc","","\\brief Returns a texture object's texture descriptor",null,null],[5,"cudaGetTextureObjectResourceViewDesc","","\\brief Returns a texture object's resource view descriptor",null,null],[5,"cudaCreateSurfaceObject","","\\brief Creates a surface object",null,null],[5,"cudaDestroySurfaceObject","","\\brief Destroys a surface object",null,null],[5,"cudaGetSurfaceObjectResourceDesc","","\\brief Returns a surface object's resource descriptor…",null,null],[5,"cudaDriverGetVersion","","\\brief Returns the latest version of CUDA supported by the…",null,null],[5,"cudaRuntimeGetVersion","","\\brief Returns the CUDA Runtime version",null,null],[5,"cudaGraphCreate","","\\brief Creates a graph",null,null],[5,"cudaGraphAddKernelNode","","\\brief Creates a kernel execution node and adds it to a…",null,null],[5,"cudaGraphKernelNodeGetParams","","\\brief Returns a kernel node's parameters",null,null],[5,"cudaGraphKernelNodeSetParams","","\\brief Sets a kernel node's parameters",null,null],[5,"cudaGraphAddMemcpyNode","","\\brief Creates a memcpy node and adds it to a graph",null,null],[5,"cudaGraphMemcpyNodeGetParams","","\\brief Returns a memcpy node's parameters",null,null],[5,"cudaGraphMemcpyNodeSetParams","","\\brief Sets a memcpy node's parameters",null,null],[5,"cudaGraphAddMemsetNode","","\\brief Creates a memset node and adds it to a graph",null,null],[5,"cudaGraphMemsetNodeGetParams","","\\brief Returns a memset node's parameters",null,null],[5,"cudaGraphMemsetNodeSetParams","","\\brief Sets a memset node's parameters",null,null],[5,"cudaGraphAddHostNode","","\\brief Creates a host execution node and adds it to a graph",null,null],[5,"cudaGraphHostNodeGetParams","","\\brief Returns a host node's parameters",null,null],[5,"cudaGraphHostNodeSetParams","","\\brief Sets a host node's parameters",null,null],[5,"cudaGraphAddChildGraphNode","","\\brief Creates a child graph node and adds it to a graph",null,null],[5,"cudaGraphChildGraphNodeGetGraph","","\\brief Gets a handle to the embedded graph of a child…",null,null],[5,"cudaGraphAddEmptyNode","","\\brief Creates an empty node and adds it to a graph",null,null],[5,"cudaGraphClone","","\\brief Clones a graph",null,null],[5,"cudaGraphNodeFindInClone","","\\brief Finds a cloned version of a node",null,null],[5,"cudaGraphNodeGetType","","\\brief Returns a node's type",null,null],[5,"cudaGraphGetNodes","","\\brief Returns a graph's nodes",null,null],[5,"cudaGraphGetRootNodes","","\\brief Returns a graph's root nodes",null,null],[5,"cudaGraphGetEdges","","\\brief Returns a graph's dependency edges",null,null],[5,"cudaGraphNodeGetDependencies","","\\brief Returns a node's dependencies",null,null],[5,"cudaGraphNodeGetDependentNodes","","\\brief Returns a node's dependent nodes",null,null],[5,"cudaGraphAddDependencies","","\\brief Adds dependency edges to a graph.",null,null],[5,"cudaGraphRemoveDependencies","","\\brief Removes dependency edges from a graph.",null,null],[5,"cudaGraphDestroyNode","","\\brief Remove a node from the graph",null,null],[5,"cudaGraphInstantiate","","\\brief Creates an executable graph from a graph",null,null],[5,"cudaGraphExecKernelNodeSetParams","","\\brief Sets the parameters for a kernel node in the given…",null,null],[5,"cudaGraphExecMemcpyNodeSetParams","","\\brief Sets the parameters for a memcpy node in the given…",null,null],[5,"cudaGraphExecMemsetNodeSetParams","","\\brief Sets the parameters for a memset node in the given…",null,null],[5,"cudaGraphExecHostNodeSetParams","","\\brief Sets the parameters for a host node in the given…",null,null],[5,"cudaGraphExecUpdate","","\\brief Check whether an executable graph can be updated…",null,null],[5,"cudaGraphLaunch","","\\brief Launches an executable graph in a stream",null,null],[5,"cudaGraphExecDestroy","","\\brief Destroys an executable graph",null,null],[5,"cudaGraphDestroy","","\\brief Destroys a graph",null,null],[5,"cudaGetExportTable","","\\cond impl_private",null,null],[5,"cudnnGetVersion","","",null,null],[5,"cudnnGetCudartVersion","","",null,null],[5,"cudnnGetErrorString","","",null,null],[5,"cudnnQueryRuntimeError","","",null,null],[5,"cudnnGetProperty","","",null,null],[5,"cudnnCreate","","",null,null],[5,"cudnnDestroy","","",null,null],[5,"cudnnSetStream","","",null,null],[5,"cudnnGetStream","","",null,null],[5,"cudnnCreateTensorDescriptor","","",null,null],[5,"cudnnSetTensor4dDescriptor","","",null,null],[5,"cudnnSetTensor4dDescriptorEx","","",null,null],[5,"cudnnGetTensor4dDescriptor","","",null,null],[5,"cudnnSetTensorNdDescriptor","","",null,null],[5,"cudnnSetTensorNdDescriptorEx","","",null,null],[5,"cudnnGetTensorNdDescriptor","","",null,null],[5,"cudnnGetTensorSizeInBytes","","",null,null],[5,"cudnnDestroyTensorDescriptor","","",null,null],[5,"cudnnInitTransformDest","","Create a destination descriptor for cudnnTransformTensor",null,null],[5,"cudnnCreateTensorTransformDescriptor","","Create an empty tensor transform descriptor",null,null],[5,"cudnnSetTensorTransformDescriptor","","Initialize a previously created tensor transform descriptor.",null,null],[5,"cudnnGetTensorTransformDescriptor","","Retrieves the values stored in a previously initialized…",null,null],[5,"cudnnDestroyTensorTransformDescriptor","","Destroys a previously created tensor transform descriptor.",null,null],[5,"cudnnTransformTensor","","",null,null],[5,"cudnnTransformTensorEx","","",null,null],[5,"cudnnGetFoldedConvBackwardDataDescriptors","","",null,null],[5,"cudnnAddTensor","","",null,null],[5,"cudnnCreateOpTensorDescriptor","","",null,null],[5,"cudnnSetOpTensorDescriptor","","",null,null],[5,"cudnnGetOpTensorDescriptor","","",null,null],[5,"cudnnDestroyOpTensorDescriptor","","",null,null],[5,"cudnnOpTensor","","",null,null],[5,"cudnnCreateReduceTensorDescriptor","","",null,null],[5,"cudnnSetReduceTensorDescriptor","","",null,null],[5,"cudnnGetReduceTensorDescriptor","","",null,null],[5,"cudnnDestroyReduceTensorDescriptor","","",null,null],[5,"cudnnGetReductionIndicesSize","","",null,null],[5,"cudnnGetReductionWorkspaceSize","","",null,null],[5,"cudnnReduceTensor","","",null,null],[5,"cudnnSetTensor","","",null,null],[5,"cudnnScaleTensor","","",null,null],[5,"cudnnCreateFilterDescriptor","","",null,null],[5,"cudnnSetFilter4dDescriptor","","",null,null],[5,"cudnnGetFilter4dDescriptor","","",null,null],[5,"cudnnSetFilterNdDescriptor","","",null,null],[5,"cudnnGetFilterNdDescriptor","","",null,null],[5,"cudnnGetFilterSizeInBytes","","",null,null],[5,"cudnnTransformFilter","","",null,null],[5,"cudnnDestroyFilterDescriptor","","",null,null],[5,"cudnnReorderFilterAndBias","","",null,null],[5,"cudnnCreateConvolutionDescriptor","","",null,null],[5,"cudnnSetConvolutionMathType","","",null,null],[5,"cudnnGetConvolutionMathType","","",null,null],[5,"cudnnSetConvolutionGroupCount","","",null,null],[5,"cudnnGetConvolutionGroupCount","","",null,null],[5,"cudnnSetConvolutionReorderType","","",null,null],[5,"cudnnGetConvolutionReorderType","","",null,null],[5,"cudnnSetConvolution2dDescriptor","","",null,null],[5,"cudnnGetConvolution2dDescriptor","","",null,null],[5,"cudnnGetConvolution2dForwardOutputDim","","",null,null],[5,"cudnnSetConvolutionNdDescriptor","","",null,null],[5,"cudnnGetConvolutionNdDescriptor","","",null,null],[5,"cudnnGetConvolutionNdForwardOutputDim","","",null,null],[5,"cudnnDestroyConvolutionDescriptor","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionForwardAlgorithm","","",null,null],[5,"cudnnFindConvolutionForwardAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithm","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionForwardWorkspaceSize","","",null,null],[5,"cudnnConvolutionForward","","",null,null],[5,"cudnnConvolutionBiasActivationForward","","",null,null],[5,"cudnnConvolutionBackwardBias","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionBackwardFilterAlgorithm","","",null,null],[5,"cudnnFindConvolutionBackwardFilterAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithm","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionBackwardFilterWorkspaceSize","","",null,null],[5,"cudnnConvolutionBackwardFilter","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionBackwardDataAlgorithm","","",null,null],[5,"cudnnFindConvolutionBackwardDataAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithm","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionBackwardDataWorkspaceSize","","",null,null],[5,"cudnnConvolutionBackwardData","","",null,null],[5,"cudnnIm2Col","","",null,null],[5,"cudnnSoftmaxForward","","",null,null],[5,"cudnnSoftmaxBackward","","",null,null],[5,"cudnnCreatePoolingDescriptor","","",null,null],[5,"cudnnSetPooling2dDescriptor","","",null,null],[5,"cudnnGetPooling2dDescriptor","","",null,null],[5,"cudnnSetPoolingNdDescriptor","","",null,null],[5,"cudnnGetPoolingNdDescriptor","","",null,null],[5,"cudnnGetPoolingNdForwardOutputDim","","",null,null],[5,"cudnnGetPooling2dForwardOutputDim","","",null,null],[5,"cudnnDestroyPoolingDescriptor","","",null,null],[5,"cudnnPoolingForward","","",null,null],[5,"cudnnPoolingBackward","","",null,null],[5,"cudnnCreateActivationDescriptor","","",null,null],[5,"cudnnSetActivationDescriptor","","",null,null],[5,"cudnnGetActivationDescriptor","","",null,null],[5,"cudnnDestroyActivationDescriptor","","",null,null],[5,"cudnnActivationForward","","",null,null],[5,"cudnnActivationBackward","","",null,null],[5,"cudnnCreateLRNDescriptor","","",null,null],[5,"cudnnSetLRNDescriptor","","",null,null],[5,"cudnnGetLRNDescriptor","","",null,null],[5,"cudnnDestroyLRNDescriptor","","",null,null],[5,"cudnnLRNCrossChannelForward","","",null,null],[5,"cudnnLRNCrossChannelBackward","","",null,null],[5,"cudnnDivisiveNormalizationForward","","",null,null],[5,"cudnnDivisiveNormalizationBackward","","",null,null],[5,"cudnnDeriveBNTensorDescriptor","","",null,null],[5,"cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","","",null,null],[5,"cudnnGetBatchNormalizationBackwardExWorkspaceSize","","",null,null],[5,"cudnnGetBatchNormalizationTrainingExReserveSpaceSize","","",null,null],[5,"cudnnBatchNormalizationForwardTraining","","",null,null],[5,"cudnnBatchNormalizationForwardTrainingEx","","",null,null],[5,"cudnnBatchNormalizationForwardInference","","",null,null],[5,"cudnnBatchNormalizationBackward","","",null,null],[5,"cudnnBatchNormalizationBackwardEx","","",null,null],[5,"cudnnCreateSpatialTransformerDescriptor","","",null,null],[5,"cudnnSetSpatialTransformerNdDescriptor","","",null,null],[5,"cudnnDestroySpatialTransformerDescriptor","","",null,null],[5,"cudnnSpatialTfGridGeneratorForward","","",null,null],[5,"cudnnSpatialTfGridGeneratorBackward","","",null,null],[5,"cudnnSpatialTfSamplerForward","","",null,null],[5,"cudnnSpatialTfSamplerBackward","","",null,null],[5,"cudnnCreateDropoutDescriptor","","",null,null],[5,"cudnnDestroyDropoutDescriptor","","",null,null],[5,"cudnnDropoutGetStatesSize","","",null,null],[5,"cudnnDropoutGetReserveSpaceSize","","",null,null],[5,"cudnnSetDropoutDescriptor","","",null,null],[5,"cudnnRestoreDropoutDescriptor","","",null,null],[5,"cudnnGetDropoutDescriptor","","",null,null],[5,"cudnnDropoutForward","","",null,null],[5,"cudnnDropoutBackward","","",null,null],[5,"cudnnCreateRNNDescriptor","","",null,null],[5,"cudnnDestroyRNNDescriptor","","",null,null],[5,"cudnnSetRNNDescriptor","","",null,null],[5,"cudnnGetRNNDescriptor","","",null,null],[5,"cudnnSetRNNMatrixMathType","","",null,null],[5,"cudnnGetRNNMatrixMathType","","",null,null],[5,"cudnnSetRNNBiasMode","","",null,null],[5,"cudnnGetRNNBiasMode","","",null,null],[5,"cudnnRNNSetClip","","",null,null],[5,"cudnnRNNGetClip","","",null,null],[5,"cudnnSetRNNProjectionLayers","","",null,null],[5,"cudnnGetRNNProjectionLayers","","",null,null],[5,"cudnnCreatePersistentRNNPlan","","",null,null],[5,"cudnnDestroyPersistentRNNPlan","","",null,null],[5,"cudnnSetPersistentRNNPlan","","",null,null],[5,"cudnnGetRNNWorkspaceSize","","",null,null],[5,"cudnnGetRNNTrainingReserveSize","","",null,null],[5,"cudnnGetRNNParamsSize","","",null,null],[5,"cudnnGetRNNLinLayerMatrixParams","","",null,null],[5,"cudnnGetRNNLinLayerBiasParams","","",null,null],[5,"cudnnRNNForwardInference","","",null,null],[5,"cudnnRNNForwardTraining","","",null,null],[5,"cudnnRNNBackwardData","","",null,null],[5,"cudnnRNNBackwardWeights","","",null,null],[5,"cudnnSetRNNPaddingMode","","",null,null],[5,"cudnnGetRNNPaddingMode","","",null,null],[5,"cudnnCreateRNNDataDescriptor","","",null,null],[5,"cudnnDestroyRNNDataDescriptor","","",null,null],[5,"cudnnSetRNNDataDescriptor","","",null,null],[5,"cudnnGetRNNDataDescriptor","","",null,null],[5,"cudnnRNNForwardTrainingEx","","",null,null],[5,"cudnnRNNForwardInferenceEx","","",null,null],[5,"cudnnRNNBackwardDataEx","","",null,null],[5,"cudnnRNNBackwardWeightsEx","","",null,null],[5,"cudnnSetRNNAlgorithmDescriptor","","",null,null],[5,"cudnnGetRNNForwardInferenceAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNForwardInferenceAlgorithmEx","","",null,null],[5,"cudnnGetRNNForwardTrainingAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNForwardTrainingAlgorithmEx","","",null,null],[5,"cudnnGetRNNBackwardDataAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNBackwardDataAlgorithmEx","","",null,null],[5,"cudnnGetRNNBackwardWeightsAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNBackwardWeightsAlgorithmEx","","",null,null],[5,"cudnnCreateSeqDataDescriptor","","",null,null],[5,"cudnnDestroySeqDataDescriptor","","",null,null],[5,"cudnnSetSeqDataDescriptor","","",null,null],[5,"cudnnGetSeqDataDescriptor","","",null,null],[5,"cudnnCreateAttnDescriptor","","",null,null],[5,"cudnnDestroyAttnDescriptor","","",null,null],[5,"cudnnSetAttnDescriptor","","",null,null],[5,"cudnnGetAttnDescriptor","","",null,null],[5,"cudnnGetMultiHeadAttnBuffers","","",null,null],[5,"cudnnGetMultiHeadAttnWeights","","",null,null],[5,"cudnnMultiHeadAttnForward","","",null,null],[5,"cudnnMultiHeadAttnBackwardData","","",null,null],[5,"cudnnMultiHeadAttnBackwardWeights","","",null,null],[5,"cudnnCreateCTCLossDescriptor","","",null,null],[5,"cudnnSetCTCLossDescriptor","","",null,null],[5,"cudnnSetCTCLossDescriptorEx","","",null,null],[5,"cudnnGetCTCLossDescriptor","","",null,null],[5,"cudnnGetCTCLossDescriptorEx","","",null,null],[5,"cudnnDestroyCTCLossDescriptor","","",null,null],[5,"cudnnCTCLoss","","",null,null],[5,"cudnnGetCTCLossWorkspaceSize","","",null,null],[5,"cudnnCreateAlgorithmDescriptor","","",null,null],[5,"cudnnSetAlgorithmDescriptor","","",null,null],[5,"cudnnGetAlgorithmDescriptor","","",null,null],[5,"cudnnCopyAlgorithmDescriptor","","",null,null],[5,"cudnnDestroyAlgorithmDescriptor","","",null,null],[5,"cudnnCreateAlgorithmPerformance","","",null,null],[5,"cudnnSetAlgorithmPerformance","","",null,null],[5,"cudnnGetAlgorithmPerformance","","",null,null],[5,"cudnnDestroyAlgorithmPerformance","","",null,null],[5,"cudnnGetAlgorithmSpaceSize","","",null,null],[5,"cudnnSaveAlgorithm","","",null,null],[5,"cudnnRestoreAlgorithm","","",null,null],[5,"cudnnSetCallback","","",null,null],[5,"cudnnGetCallback","","",null,null],[5,"cudnnCreateFusedOpsConstParamPack","","",null,null],[5,"cudnnDestroyFusedOpsConstParamPack","","",null,null],[5,"cudnnSetFusedOpsConstParamPackAttribute","","",null,null],[5,"cudnnGetFusedOpsConstParamPackAttribute","","",null,null],[5,"cudnnCreateFusedOpsVariantParamPack","","",null,null],[5,"cudnnDestroyFusedOpsVariantParamPack","","",null,null],[5,"cudnnSetFusedOpsVariantParamPackAttribute","","",null,null],[5,"cudnnGetFusedOpsVariantParamPackAttribute","","",null,null],[5,"cudnnCreateFusedOpsPlan","","",null,null],[5,"cudnnDestroyFusedOpsPlan","","",null,null],[5,"cudnnMakeFusedOpsPlan","","",null,null],[5,"cudnnFusedOpsExecute","","",null,null],[5,"cudnnSetRNNDescriptor_v6","","",null,null],[5,"cudnnSetRNNDescriptor_v5","","",null,null],[6,"va_list","","",null,null],[6,"__vcrt_bool","","",null,null],[6,"wchar_t","","",null,null],[6,"__crt_bool","","",null,null],[6,"errno_t","","",null,null],[6,"wint_t","","",null,null],[6,"wctype_t","","",null,null],[6,"__time32_t","","",null,null],[6,"__time64_t","","",null,null],[6,"_locale_t","","",null,null],[6,"mbstate_t","","",null,null],[6,"time_t","","",null,null],[6,"rsize_t","","",null,null],[6,"cudaChannelFormatKind","","Channel format kind",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[6,"cudaMemoryType","","CUDA memory types",null,null],[6,"cudaMemcpyKind","","CUDA memory copy types",null,null],[6,"cudaHostFn_t","","CUDA host function \\param userData Argument value passed…",null,null],[6,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by…",null,null],[6,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. For…",null,null],[6,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[6,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[6,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[6,"cudaResourceType","","CUDA resource types",null,null],[6,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[6,"cudaFuncAttribute","","CUDA function attributes that can be set using…",null,null],[6,"cudaFuncCache","","CUDA function cache configurations",null,null],[6,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[6,"cudaSharedCarveout","","Shared memory carveout configurations. These may be passed…",null,null],[6,"cudaComputeMode","","CUDA device compute modes",null,null],[6,"cudaLimit","","CUDA Limits",null,null],[6,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[6,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[6,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[6,"cudaDeviceAttr","","CUDA device attributes",null,null],[6,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[6,"cudaIpcEventHandle_t","","",null,null],[6,"cudaIpcMemHandle_t","","",null,null],[6,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[6,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[6,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[6,"cudaCGScope","","CUDA cooperative group scope",null,null],[6,"cudaGraphNodeType","","CUDA Graph node types",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[6,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[6,"cudaRoundMode","","",null,null],[6,"cudaSurfaceBoundaryMode","","CUDA Surface boundary modes",null,null],[6,"cudaSurfaceFormatMode","","CUDA Surface format modes",null,null],[6,"cudaSurfaceObject_t","","An opaque value that represents a CUDA Surface object",null,null],[6,"cudaTextureAddressMode","","CUDA texture address modes",null,null],[6,"cudaTextureFilterMode","","CUDA texture filter modes",null,null],[6,"cudaTextureReadMode","","CUDA texture read modes",null,null],[6,"cudaTextureObject_t","","An opaque value that represents a CUDA texture object",null,null],[6,"cudaDataType_t","","",null,null],[6,"cudaDataType","","",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[6,"cudaStreamCallback_t","","Type of stream callback functions. \\param stream The…",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"cudnnHandle_t","","",null,null],[6,"cudnnTensorDescriptor_t","","",null,null],[6,"cudnnConvolutionDescriptor_t","","",null,null],[6,"cudnnPoolingDescriptor_t","","",null,null],[6,"cudnnFilterDescriptor_t","","",null,null],[6,"cudnnLRNDescriptor_t","","",null,null],[6,"cudnnActivationDescriptor_t","","",null,null],[6,"cudnnSpatialTransformerDescriptor_t","","",null,null],[6,"cudnnOpTensorDescriptor_t","","",null,null],[6,"cudnnReduceTensorDescriptor_t","","",null,null],[6,"cudnnCTCLossDescriptor_t","","",null,null],[6,"cudnnTensorTransformDescriptor_t","","",null,null],[6,"cudnnDropoutDescriptor_t","","",null,null],[6,"cudnnRNNDescriptor_t","","",null,null],[6,"cudnnPersistentRNNPlan_t","","",null,null],[6,"cudnnRNNDataDescriptor_t","","",null,null],[6,"cudnnAlgorithmDescriptor_t","","",null,null],[6,"cudnnAlgorithmPerformance_t","","",null,null],[6,"cudnnSeqDataDescriptor_t","","",null,null],[6,"cudnnAttnQueryMap_t","","",null,null],[6,"cudnnAttnDescriptor_t","","",null,null],[6,"cudnnCallback_t","","",null,null],[6,"cudnnFusedOpsConstParamPack_t","","",null,null],[6,"cudnnFusedOpsVariantParamPack_t","","",null,null],[6,"cudnnFusedOpsPlan_t","","",null,null],[17,"CUDNN_MAJOR","","",null,null],[17,"CUDNN_MINOR","","",null,null],[17,"CUDNN_PATCHLEVEL","","",null,null],[17,"CUDNN_VERSION","","",null,null],[17,"_SAL_VERSION","","",null,null],[17,"__SAL_H_VERSION","","",null,null],[17,"_USE_DECLSPECS_FOR_SAL","","",null,null],[17,"_USE_ATTRIBUTES_FOR_SAL","","",null,null],[17,"_CRT_PACKING","","",null,null],[17,"_HAS_EXCEPTIONS","","",null,null],[17,"CHAR_BIT","","",null,null],[17,"SCHAR_MIN","","",null,null],[17,"SCHAR_MAX","","",null,null],[17,"UCHAR_MAX","","",null,null],[17,"CHAR_MIN","","",null,null],[17,"CHAR_MAX","","",null,null],[17,"MB_LEN_MAX","","",null,null],[17,"SHRT_MIN","","",null,null],[17,"SHRT_MAX","","",null,null],[17,"USHRT_MAX","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"UINT_MAX","","",null,null],[17,"LONG_MIN","","",null,null],[17,"LONG_MAX","","",null,null],[17,"ULONG_MAX","","",null,null],[17,"_ARGMAX","","",null,null],[17,"_CRT_INT_MAX","","",null,null],[17,"_CRT_FUNCTIONS_REQUIRED","","",null,null],[17,"_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE","","",null,null],[17,"_CRT_BUILD_DESKTOP_APP","","",null,null],[17,"__STDC_SECURE_LIB__","","",null,null],[17,"__GOT_SECURE_LIB__","","",null,null],[17,"__STDC_WANT_SECURE_LIB__","","",null,null],[17,"_SECURECRT_FILL_BUFFER_PATTERN","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY","","",null,null],[17,"_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY","","",null,null],[17,"cudaHostAllocDefault","","",null,null],[17,"cudaHostAllocPortable","","",null,null],[17,"cudaHostAllocMapped","","",null,null],[17,"cudaHostAllocWriteCombined","","",null,null],[17,"cudaHostRegisterDefault","","",null,null],[17,"cudaHostRegisterPortable","","",null,null],[17,"cudaHostRegisterMapped","","",null,null],[17,"cudaHostRegisterIoMemory","","",null,null],[17,"cudaPeerAccessDefault","","",null,null],[17,"cudaStreamDefault","","",null,null],[17,"cudaStreamNonBlocking","","",null,null],[17,"cudaEventDefault","","",null,null],[17,"cudaEventBlockingSync","","",null,null],[17,"cudaEventDisableTiming","","",null,null],[17,"cudaEventInterprocess","","",null,null],[17,"cudaDeviceScheduleAuto","","",null,null],[17,"cudaDeviceScheduleSpin","","",null,null],[17,"cudaDeviceScheduleYield","","",null,null],[17,"cudaDeviceScheduleBlockingSync","","",null,null],[17,"cudaDeviceBlockingSync","","",null,null],[17,"cudaDeviceScheduleMask","","",null,null],[17,"cudaDeviceMapHost","","",null,null],[17,"cudaDeviceLmemResizeToMax","","",null,null],[17,"cudaDeviceMask","","",null,null],[17,"cudaArrayDefault","","",null,null],[17,"cudaArrayLayered","","",null,null],[17,"cudaArraySurfaceLoadStore","","",null,null],[17,"cudaArrayCubemap","","",null,null],[17,"cudaArrayTextureGather","","",null,null],[17,"cudaArrayColorAttachment","","",null,null],[17,"cudaIpcMemLazyEnablePeerAccess","","",null,null],[17,"cudaMemAttachGlobal","","",null,null],[17,"cudaMemAttachHost","","",null,null],[17,"cudaMemAttachSingle","","",null,null],[17,"cudaOccupancyDefault","","",null,null],[17,"cudaOccupancyDisableCachingOverride","","",null,null],[17,"cudaCooperativeLaunchMultiDeviceNoPreSync","","",null,null],[17,"cudaCooperativeLaunchMultiDeviceNoPostSync","","",null,null],[17,"CUDA_IPC_HANDLE_SIZE","","",null,null],[17,"cudaExternalMemoryDedicated","","",null,null],[17,"cudaExternalSemaphoreSignalSkipNvSciBufMemSync","","",null,null],[17,"cudaExternalSemaphoreWaitSkipNvSciBufMemSync","","",null,null],[17,"cudaNvSciSyncAttrSignal","","",null,null],[17,"cudaNvSciSyncAttrWait","","",null,null],[17,"cudaSurfaceType1D","","",null,null],[17,"cudaSurfaceType2D","","",null,null],[17,"cudaSurfaceType3D","","",null,null],[17,"cudaSurfaceTypeCubemap","","",null,null],[17,"cudaSurfaceType1DLayered","","",null,null],[17,"cudaSurfaceType2DLayered","","",null,null],[17,"cudaSurfaceTypeCubemapLayered","","",null,null],[17,"cudaTextureType1D","","",null,null],[17,"cudaTextureType2D","","",null,null],[17,"cudaTextureType3D","","",null,null],[17,"cudaTextureTypeCubemap","","",null,null],[17,"cudaTextureType1DLayered","","",null,null],[17,"cudaTextureType2DLayered","","",null,null],[17,"cudaTextureTypeCubemapLayered","","",null,null],[17,"CUDART_VERSION","","",null,null],[17,"WCHAR_MIN","","",null,null],[17,"WCHAR_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"CUDNN_DIM_MAX","","",null,null],[17,"CUDNN_LRN_MIN_N","","",null,null],[17,"CUDNN_LRN_MAX_N","","",null,null],[17,"CUDNN_LRN_MIN_K","","",null,null],[17,"CUDNN_LRN_MIN_BETA","","",null,null],[17,"CUDNN_BN_MIN_EPSILON","","",null,null],[17,"CUDNN_SEQDATA_DIM_COUNT","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","","",null,null],[17,"CUDNN_ATTN_DISABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_ENABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_WKIND_COUNT","","",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindSigned","","< Signed channel format",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindUnsigned","","< Unsigned channel format",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindFloat","","< Float channel format",null,null],[17,"cudaChannelFormatKind_cudaChannelFormatKindNone","","< No channel format",null,null],[17,"cudaMemoryType_cudaMemoryTypeUnregistered","","< Unregistered memory",null,null],[17,"cudaMemoryType_cudaMemoryTypeHost","","< Host memory",null,null],[17,"cudaMemoryType_cudaMemoryTypeDevice","","< Device memory",null,null],[17,"cudaMemoryType_cudaMemoryTypeManaged","","< Managed memory",null,null],[17,"cudaMemcpyKind_cudaMemcpyHostToHost","","< Host   -> Host",null,null],[17,"cudaMemcpyKind_cudaMemcpyHostToDevice","","< Host   -> Device",null,null],[17,"cudaMemcpyKind_cudaMemcpyDeviceToHost","","< Device -> Host",null,null],[17,"cudaMemcpyKind_cudaMemcpyDeviceToDevice","","< Device -> Device",null,null],[17,"cudaMemcpyKind_cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer…",null,null],[17,"cudaStreamCaptureStatus_cudaStreamCaptureStatusNone","","< Stream is not capturing",null,null],[17,"cudaStreamCaptureStatus_cudaStreamCaptureStatusActive","","< Stream is actively capturing",null,null],[17,"cudaStreamCaptureStatus_cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been…",null,null],[17,"cudaStreamCaptureMode_cudaStreamCaptureModeGlobal","","",null,null],[17,"cudaStreamCaptureMode_cudaStreamCaptureModeThreadLocal","","",null,null],[17,"cudaStreamCaptureMode_cudaStreamCaptureModeRelaxed","","",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsNone","","< Default",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",null,null],[17,"cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this…",null,null],[17,"cudaGraphicsMapFlags_cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",null,null],[17,"cudaGraphicsMapFlags_cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",null,null],[17,"cudaGraphicsMapFlags_cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",null,null],[17,"cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",null,null],[17,"cudaResourceType_cudaResourceTypeArray","","< Array resource",null,null],[17,"cudaResourceType_cudaResourceTypeMipmappedArray","","< Mipmapped array resource",null,null],[17,"cudaResourceType_cudaResourceTypeLinear","","< Linear resource",null,null],[17,"cudaResourceType_cudaResourceTypePitch2D","","< Pitch 2D resource",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatNone","","< No resource view format (use underlying resource format)",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",null,null],[17,"cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",null,null],[17,"cudaFuncAttribute_cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",null,null],[17,"cudaFuncAttribute_cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",null,null],[17,"cudaFuncAttribute_cudaFuncAttributeMax","","",null,null],[17,"cudaFuncCache_cudaFuncCachePreferNone","","< Default function cache configuration, no preference",null,null],[17,"cudaFuncCache_cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",null,null],[17,"cudaFuncCache_cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",null,null],[17,"cudaFuncCache_cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",null,null],[17,"cudaSharedMemConfig_cudaSharedMemBankSizeDefault","","",null,null],[17,"cudaSharedMemConfig_cudaSharedMemBankSizeFourByte","","",null,null],[17,"cudaSharedMemConfig_cudaSharedMemBankSizeEightByte","","",null,null],[17,"cudaSharedCarveout_cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",null,null],[17,"cudaSharedCarveout_cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",null,null],[17,"cudaSharedCarveout_cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",null,null],[17,"cudaComputeMode_cudaComputeModeDefault","","< Default compute mode (Multiple threads can use…",null,null],[17,"cudaComputeMode_cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one…",null,null],[17,"cudaComputeMode_cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use…",null,null],[17,"cudaComputeMode_cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one…",null,null],[17,"cudaLimit_cudaLimitStackSize","","< GPU thread stack size",null,null],[17,"cudaLimit_cudaLimitPrintfFifoSize","","< GPU printf FIFO size",null,null],[17,"cudaLimit_cudaLimitMallocHeapSize","","< GPU malloc heap size",null,null],[17,"cudaLimit_cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",null,null],[17,"cudaLimit_cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",null,null],[17,"cudaLimit_cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the specified…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so…",null,null],[17,"cudaMemoryAdvise_cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page…",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only…",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for…",null,null],[17,"cudaMemRangeAttribute_cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",null,null],[17,"cudaOutputMode_cudaKeyValuePair","","< Output mode Key-Value pair format.",null,null],[17,"cudaOutputMode_cudaCSV","","< Output mode Comma separated values format.",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",null,null],[17,"cudaDeviceAttr_cudaDevAttrTotalConstantMemory","","< Memory available on device for constant variables in a…",null,null],[17,"cudaDeviceAttr_cudaDevAttrWarpSize","","< Warp size in threads",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",null,null],[17,"cudaDeviceAttr_cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",null,null],[17,"cudaDeviceAttr_cudaDevAttrTextureAlignment","","< Alignment requirement for textures",null,null],[17,"cudaDeviceAttr_cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel…",null,null],[17,"cudaDeviceAttr_cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",null,null],[17,"cudaDeviceAttr_cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",null,null],[17,"cudaDeviceAttr_cudaDevAttrIntegrated","","< Device is integrated with host memory",null,null],[17,"cudaDeviceAttr_cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",null,null],[17,"cudaDeviceAttr_cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",null,null],[17,"cudaDeviceAttr_cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels concurrently",null,null],[17,"cudaDeviceAttr_cudaDevAttrEccEnabled","","< Device has ECC support enabled",null,null],[17,"cudaDeviceAttr_cudaDevAttrPciBusId","","< PCI bus ID of the device",null,null],[17,"cudaDeviceAttr_cudaDevAttrPciDeviceId","","< PCI device ID of the device",null,null],[17,"cudaDeviceAttr_cudaDevAttrTccDriver","","< Device is using TCC driver model",null,null],[17,"cudaDeviceAttr_cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",null,null],[17,"cudaDeviceAttr_cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",null,null],[17,"cudaDeviceAttr_cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",null,null],[17,"cudaDeviceAttr_cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",null,null],[17,"cudaDeviceAttr_cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is set",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is set",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",null,null],[17,"cudaDeviceAttr_cudaDevAttrPciDomainId","","< PCI domain ID of the device",null,null],[17,"cudaDeviceAttr_cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",null,null],[17,"cudaDeviceAttr_cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",null,null],[17,"cudaDeviceAttr_cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",null,null],[17,"cudaDeviceAttr_cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in…",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per…",null,null],[17,"cudaDeviceAttr_cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",null,null],[17,"cudaDeviceAttr_cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",null,null],[17,"cudaDeviceAttr_cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",null,null],[17,"cudaDeviceAttr_cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native…",null,null],[17,"cudaDeviceAttr_cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",null,null],[17,"cudaDeviceAttr_cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory…",null,null],[17,"cudaDeviceAttr_cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory concurrently…",null,null],[17,"cudaDeviceAttr_cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",null,null],[17,"cudaDeviceAttr_cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",null,null],[17,"cudaDeviceAttr_cudaDevAttrReserved92","","",null,null],[17,"cudaDeviceAttr_cudaDevAttrReserved93","","",null,null],[17,"cudaDeviceAttr_cudaDevAttrReserved94","","",null,null],[17,"cudaDeviceAttr_cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via…",null,null],[17,"cudaDeviceAttr_cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",null,null],[17,"cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value…",null,null],[17,"cudaDeviceAttr_cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",null,null],[17,"cudaDeviceAttr_cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via…",null,null],[17,"cudaDeviceAttr_cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host's page…",null,null],[17,"cudaDeviceAttr_cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link…",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrAccessSupported","","< Peer access is enabled",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",null,null],[17,"cudaDeviceP2PAttr_cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",null,null],[17,"cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence…",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence…",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed…",null,null],[17,"cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed…",null,null],[17,"cudaCGScope_cudaCGScopeInvalid","","< Invalid cooperative group scope",null,null],[17,"cudaCGScope_cudaCGScopeGrid","","< Scope represented by a grid_group",null,null],[17,"cudaCGScope_cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeKernel","","< GPU kernel node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeMemcpy","","< Memcpy node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeMemset","","< Memset node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeHost","","< Host (executable) node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeEmpty","","< Empty (no-op) node",null,null],[17,"cudaGraphNodeType_cudaGraphNodeTypeCount","","",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateSuccess","","< The update succeeded",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is…",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node…",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a…",null,null],[17,"cudaGraphExecUpdateResult_cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is…",null,null],[17,"cudaRoundMode_cudaRoundNearest","","",null,null],[17,"cudaRoundMode_cudaRoundZero","","",null,null],[17,"cudaRoundMode_cudaRoundPosInf","","",null,null],[17,"cudaRoundMode_cudaRoundMinInf","","",null,null],[17,"cudaSurfaceBoundaryMode_cudaBoundaryModeZero","","< Zero boundary mode",null,null],[17,"cudaSurfaceBoundaryMode_cudaBoundaryModeClamp","","< Clamp boundary mode",null,null],[17,"cudaSurfaceBoundaryMode_cudaBoundaryModeTrap","","< Trap boundary mode",null,null],[17,"cudaSurfaceFormatMode_cudaFormatModeForced","","< Forced format mode",null,null],[17,"cudaSurfaceFormatMode_cudaFormatModeAuto","","< Auto format mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeWrap","","< Wrapping address mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeClamp","","< Clamp to edge address mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeMirror","","< Mirror address mode",null,null],[17,"cudaTextureAddressMode_cudaAddressModeBorder","","< Border address mode",null,null],[17,"cudaTextureFilterMode_cudaFilterModePoint","","< Point filter mode",null,null],[17,"cudaTextureFilterMode_cudaFilterModeLinear","","< Linear filter mode",null,null],[17,"cudaTextureReadMode_cudaReadModeElementType","","< Read texture as specified element type",null,null],[17,"cudaTextureReadMode_cudaReadModeNormalizedFloat","","< Read texture as normalized float",null,null],[17,"cudaDataType_t_CUDA_R_16F","","",null,null],[17,"cudaDataType_t_CUDA_C_16F","","",null,null],[17,"cudaDataType_t_CUDA_R_32F","","",null,null],[17,"cudaDataType_t_CUDA_C_32F","","",null,null],[17,"cudaDataType_t_CUDA_R_64F","","",null,null],[17,"cudaDataType_t_CUDA_C_64F","","",null,null],[17,"cudaDataType_t_CUDA_R_8I","","",null,null],[17,"cudaDataType_t_CUDA_C_8I","","",null,null],[17,"cudaDataType_t_CUDA_R_8U","","",null,null],[17,"cudaDataType_t_CUDA_C_8U","","",null,null],[17,"cudaDataType_t_CUDA_R_32I","","",null,null],[17,"cudaDataType_t_CUDA_C_32I","","",null,null],[17,"cudaDataType_t_CUDA_R_32U","","",null,null],[17,"cudaDataType_t_CUDA_C_32U","","",null,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["char1"]]],[11,"clone","","",1,[[["self"]],["uchar1"]]],[11,"clone","","",2,[[["self"]],["char2"]]],[11,"clone","","",3,[[["self"]],["uchar2"]]],[11,"clone","","",4,[[["self"]],["char3"]]],[11,"clone","","",5,[[["self"]],["uchar3"]]],[11,"clone","","",6,[[["self"]],["char4"]]],[11,"clone","","",7,[[["self"]],["uchar4"]]],[11,"clone","","",8,[[["self"]],["short1"]]],[11,"clone","","",9,[[["self"]],["ushort1"]]],[11,"clone","","",10,[[["self"]],["short2"]]],[11,"clone","","",11,[[["self"]],["ushort2"]]],[11,"clone","","",12,[[["self"]],["short3"]]],[11,"clone","","",13,[[["self"]],["ushort3"]]],[11,"clone","","",14,[[["self"]],["short4"]]],[11,"clone","","",15,[[["self"]],["ushort4"]]],[11,"clone","","",16,[[["self"]],["int1"]]],[11,"clone","","",17,[[["self"]],["uint1"]]],[11,"clone","","",18,[[["self"]],["int2"]]],[11,"clone","","",19,[[["self"]],["uint2"]]],[11,"clone","","",20,[[["self"]],["int3"]]],[11,"clone","","",21,[[["self"]],["uint3"]]],[11,"clone","","",22,[[["self"]],["int4"]]],[11,"clone","","",23,[[["self"]],["uint4"]]],[11,"clone","","",24,[[["self"]],["long1"]]],[11,"clone","","",25,[[["self"]],["ulong1"]]],[11,"clone","","",26,[[["self"]],["long2"]]],[11,"clone","","",27,[[["self"]],["ulong2"]]],[11,"clone","","",28,[[["self"]],["long3"]]],[11,"clone","","",29,[[["self"]],["ulong3"]]],[11,"clone","","",30,[[["self"]],["long4"]]],[11,"clone","","",31,[[["self"]],["ulong4"]]],[11,"clone","","",32,[[["self"]],["float1"]]],[11,"clone","","",33,[[["self"]],["float2"]]],[11,"clone","","",34,[[["self"]],["float3"]]],[11,"clone","","",35,[[["self"]],["float4"]]],[11,"clone","","",36,[[["self"]],["longlong1"]]],[11,"clone","","",37,[[["self"]],["ulonglong1"]]],[11,"clone","","",38,[[["self"]],["longlong2"]]],[11,"clone","","",39,[[["self"]],["ulonglong2"]]],[11,"clone","","",40,[[["self"]],["longlong3"]]],[11,"clone","","",41,[[["self"]],["ulonglong3"]]],[11,"clone","","",42,[[["self"]],["longlong4"]]],[11,"clone","","",43,[[["self"]],["ulonglong4"]]],[11,"clone","","",44,[[["self"]],["double1"]]],[11,"clone","","",45,[[["self"]],["double2"]]],[11,"clone","","",46,[[["self"]],["double3"]]],[11,"clone","","",47,[[["self"]],["double4"]]],[11,"clone","","",48,[[["self"]],["dim3"]]],[11,"clone","","",49,[[["self"]],["__crt_locale_data_public"]]],[11,"clone","","",50,[[["self"]],["__crt_locale_pointers"]]],[11,"clone","","",51,[[["self"]],["_mbstatet"]]],[11,"clone","","",104,[[["self"]],["cudaerror"]]],[11,"clone","","",52,[[["self"]],["cudachannelformatdesc"]]],[11,"clone","","",152,[[["self"]],["cudaarray"]]],[11,"clone","","",153,[[["self"]],["cudamipmappedarray"]]],[11,"clone","","",53,[[["self"]],["cudapitchedptr"]]],[11,"clone","","",54,[[["self"]],["cudaextent"]]],[11,"clone","","",55,[[["self"]],["cudapos"]]],[11,"clone","","",56,[[["self"]],["cudamemcpy3dparms"]]],[11,"clone","","",57,[[["self"]],["cudamemcpy3dpeerparms"]]],[11,"clone","","",58,[[["self"]],["cudamemsetparams"]]],[11,"clone","","",59,[[["self"]],["cudahostnodeparams"]]],[11,"clone","","",154,[[["self"]],["cudagraphicsresource"]]],[11,"clone","","",60,[[["self"]],["cudaresourcedesc"]]],[11,"clone","","",98,[[["self"]],["cudaresourcedesc__bindgen_ty_1"]]],[11,"clone","","",61,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",62,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",63,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3"]]],[11,"clone","","",64,[[["self"]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4"]]],[11,"clone","","",65,[[["self"]],["cudaresourceviewdesc"]]],[11,"clone","","",66,[[["self"]],["cudapointerattributes"]]],[11,"clone","","",67,[[["self"]],["cudafuncattributes"]]],[11,"clone","","",68,[[["self"]],["cuuuid_st"]]],[11,"clone","","",69,[[["self"]],["cudadeviceprop"]]],[11,"clone","","",70,[[["self"]],["cudaipceventhandle_st"]]],[11,"clone","","",71,[[["self"]],["cudaipcmemhandle_st"]]],[11,"clone","","",72,[[["self"]],["cudaexternalmemoryhandledesc"]]],[11,"clone","","",99,[[["self"]],["cudaexternalmemoryhandledesc__bindgen_ty_1"]]],[11,"clone","","",73,[[["self"]],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",74,[[["self"]],["cudaexternalmemorybufferdesc"]]],[11,"clone","","",75,[[["self"]],["cudaexternalmemorymipmappedarraydesc"]]],[11,"clone","","",76,[[["self"]],["cudaexternalsemaphorehandledesc"]]],[11,"clone","","",100,[[["self"]],["cudaexternalsemaphorehandledesc__bindgen_ty_1"]]],[11,"clone","","",77,[[["self"]],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",78,[[["self"]],["cudaexternalsemaphoresignalparams"]]],[11,"clone","","",79,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1"]]],[11,"clone","","",80,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",101,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",81,[[["self"]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3"]]],[11,"clone","","",82,[[["self"]],["cudaexternalsemaphorewaitparams"]]],[11,"clone","","",83,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1"]]],[11,"clone","","",84,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",102,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",85,[[["self"]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3"]]],[11,"clone","","",155,[[["self"]],["custream_st"]]],[11,"clone","","",156,[[["self"]],["cuevent_st"]]],[11,"clone","","",157,[[["self"]],["cuexternalmemory_st"]]],[11,"clone","","",158,[[["self"]],["cuexternalsemaphore_st"]]],[11,"clone","","",159,[[["self"]],["cugraph_st"]]],[11,"clone","","",160,[[["self"]],["cugraphnode_st"]]],[11,"clone","","",86,[[["self"]],["cudalaunchparams"]]],[11,"clone","","",87,[[["self"]],["cudakernelnodeparams"]]],[11,"clone","","",161,[[["self"]],["cugraphexec_st"]]],[11,"clone","","",88,[[["self"]],["surfacereference"]]],[11,"clone","","",89,[[["self"]],["texturereference"]]],[11,"clone","","",90,[[["self"]],["cudatexturedesc"]]],[11,"clone","","",162,[[["self"]],["cudnncontext"]]],[11,"clone","","",105,[[["self"]],["cudnnstatus_t"]]],[11,"clone","","",163,[[["self"]],["cudnnruntimetag_t"]]],[11,"clone","","",106,[[["self"]],["cudnnerrquerymode_t"]]],[11,"clone","","",164,[[["self"]],["cudnntensorstruct"]]],[11,"clone","","",165,[[["self"]],["cudnnconvolutionstruct"]]],[11,"clone","","",166,[[["self"]],["cudnnpoolingstruct"]]],[11,"clone","","",167,[[["self"]],["cudnnfilterstruct"]]],[11,"clone","","",168,[[["self"]],["cudnnlrnstruct"]]],[11,"clone","","",169,[[["self"]],["cudnnactivationstruct"]]],[11,"clone","","",170,[[["self"]],["cudnnspatialtransformerstruct"]]],[11,"clone","","",171,[[["self"]],["cudnnoptensorstruct"]]],[11,"clone","","",172,[[["self"]],["cudnnreducetensorstruct"]]],[11,"clone","","",173,[[["self"]],["cudnnctclossstruct"]]],[11,"clone","","",174,[[["self"]],["cudnntensortransformstruct"]]],[11,"clone","","",107,[[["self"]],["cudnndatatype_t"]]],[11,"clone","","",108,[[["self"]],["cudnnmathtype_t"]]],[11,"clone","","",109,[[["self"]],["cudnnnanpropagation_t"]]],[11,"clone","","",110,[[["self"]],["cudnndeterminism_t"]]],[11,"clone","","",111,[[["self"]],["cudnnreordertype_t"]]],[11,"clone","","",112,[[["self"]],["cudnntensorformat_t"]]],[11,"clone","","",113,[[["self"]],["cudnnfoldingdirection_t"]]],[11,"clone","","",114,[[["self"]],["cudnnoptensorop_t"]]],[11,"clone","","",115,[[["self"]],["cudnnreducetensorop_t"]]],[11,"clone","","",116,[[["self"]],["cudnnreducetensorindices_t"]]],[11,"clone","","",117,[[["self"]],["cudnnindicestype_t"]]],[11,"clone","","",118,[[["self"]],["cudnnconvolutionmode_t"]]],[11,"clone","","",119,[[["self"]],["cudnnconvolutionfwdpreference_t"]]],[11,"clone","","",120,[[["self"]],["cudnnconvolutionfwdalgo_t"]]],[11,"clone","","",91,[[["self"]],["cudnnconvolutionfwdalgoperf_t"]]],[11,"clone","","",121,[[["self"]],["cudnnconvolutionbwdfilterpreference_t"]]],[11,"clone","","",122,[[["self"]],["cudnnconvolutionbwdfilteralgo_t"]]],[11,"clone","","",92,[[["self"]],["cudnnconvolutionbwdfilteralgoperf_t"]]],[11,"clone","","",123,[[["self"]],["cudnnconvolutionbwddatapreference_t"]]],[11,"clone","","",124,[[["self"]],["cudnnconvolutionbwddataalgo_t"]]],[11,"clone","","",93,[[["self"]],["cudnnconvolutionbwddataalgoperf_t"]]],[11,"clone","","",125,[[["self"]],["cudnnsoftmaxalgorithm_t"]]],[11,"clone","","",126,[[["self"]],["cudnnsoftmaxmode_t"]]],[11,"clone","","",127,[[["self"]],["cudnnpoolingmode_t"]]],[11,"clone","","",128,[[["self"]],["cudnnactivationmode_t"]]],[11,"clone","","",129,[[["self"]],["cudnnlrnmode_t"]]],[11,"clone","","",130,[[["self"]],["cudnndivnormmode_t"]]],[11,"clone","","",131,[[["self"]],["cudnnbatchnormmode_t"]]],[11,"clone","","",132,[[["self"]],["cudnnbatchnormops_t"]]],[11,"clone","","",133,[[["self"]],["cudnnsamplertype_t"]]],[11,"clone","","",175,[[["self"]],["cudnndropoutstruct"]]],[11,"clone","","",134,[[["self"]],["cudnnrnnalgo_t"]]],[11,"clone","","",135,[[["self"]],["cudnnrnnmode_t"]]],[11,"clone","","",136,[[["self"]],["cudnnrnnbiasmode_t"]]],[11,"clone","","",137,[[["self"]],["cudnndirectionmode_t"]]],[11,"clone","","",138,[[["self"]],["cudnnrnninputmode_t"]]],[11,"clone","","",139,[[["self"]],["cudnnrnnclipmode_t"]]],[11,"clone","","",140,[[["self"]],["cudnnrnndatalayout_t"]]],[11,"clone","","",141,[[["self"]],["cudnnrnnpaddingmode_t"]]],[11,"clone","","",176,[[["self"]],["cudnnrnnstruct"]]],[11,"clone","","",177,[[["self"]],["cudnnpersistentrnnplan"]]],[11,"clone","","",178,[[["self"]],["cudnnrnndatastruct"]]],[11,"clone","","",179,[[["self"]],["cudnnalgorithmstruct"]]],[11,"clone","","",180,[[["self"]],["cudnnalgorithmperformancestruct"]]],[11,"clone","","",142,[[["self"]],["cudnnseqdataaxis_t"]]],[11,"clone","","",181,[[["self"]],["cudnnseqdatastruct"]]],[11,"clone","","",182,[[["self"]],["cudnnattnstruct"]]],[11,"clone","","",143,[[["self"]],["cudnnmultiheadattnweightkind_t"]]],[11,"clone","","",144,[[["self"]],["cudnnwgradmode_t"]]],[11,"clone","","",145,[[["self"]],["cudnnctclossalgo_t"]]],[11,"clone","","",146,[[["self"]],["cudnnlossnormalizationmode_t"]]],[11,"clone","","",94,[[["self"]],["cudnnalgorithm_t"]]],[11,"clone","","",103,[[["self"]],["cudnnalgorithm_t_algorithm"]]],[11,"clone","","",147,[[["self"]],["cudnnseverity_t"]]],[11,"clone","","",95,[[["self"]],["cudnndebug_t"]]],[11,"clone","","",183,[[["self"]],["cudnnfusedopsconstparamstruct"]]],[11,"clone","","",184,[[["self"]],["cudnnfusedopsvariantparamstruct"]]],[11,"clone","","",185,[[["self"]],["cudnnfusedopsplanstruct"]]],[11,"clone","","",148,[[["self"]],["cudnnfusedops_t"]]],[11,"clone","","",149,[[["self"]],["cudnnfusedopsconstparamlabel_t"]]],[11,"clone","","",150,[[["self"]],["cudnnfusedopspointerplaceholder_t"]]],[11,"clone","","",151,[[["self"]],["cudnnfusedopsvariantparamlabel_t"]]],[11,"clone","","",96,[[["self"]],["__crt_locale_data"]]],[11,"clone","","",97,[[["self"]],["__crt_multibyte_data"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"eq","","",104,[[["self"],["cudaerror"]],["bool"]]],[11,"eq","","",105,[[["cudnnstatus_t"],["self"]],["bool"]]],[11,"eq","","",106,[[["self"],["cudnnerrquerymode_t"]],["bool"]]],[11,"eq","","",107,[[["self"],["cudnndatatype_t"]],["bool"]]],[11,"eq","","",108,[[["self"],["cudnnmathtype_t"]],["bool"]]],[11,"eq","","",109,[[["cudnnnanpropagation_t"],["self"]],["bool"]]],[11,"eq","","",110,[[["cudnndeterminism_t"],["self"]],["bool"]]],[11,"eq","","",111,[[["cudnnreordertype_t"],["self"]],["bool"]]],[11,"eq","","",112,[[["cudnntensorformat_t"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["cudnnfoldingdirection_t"]],["bool"]]],[11,"eq","","",114,[[["cudnnoptensorop_t"],["self"]],["bool"]]],[11,"eq","","",115,[[["cudnnreducetensorop_t"],["self"]],["bool"]]],[11,"eq","","",116,[[["cudnnreducetensorindices_t"],["self"]],["bool"]]],[11,"eq","","",117,[[["cudnnindicestype_t"],["self"]],["bool"]]],[11,"eq","","",118,[[["cudnnconvolutionmode_t"],["self"]],["bool"]]],[11,"eq","","",119,[[["cudnnconvolutionfwdpreference_t"],["self"]],["bool"]]],[11,"eq","","",120,[[["cudnnconvolutionfwdalgo_t"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["cudnnconvolutionbwdfilterpreference_t"]],["bool"]]],[11,"eq","","",122,[[["self"],["cudnnconvolutionbwdfilteralgo_t"]],["bool"]]],[11,"eq","","",123,[[["cudnnconvolutionbwddatapreference_t"],["self"]],["bool"]]],[11,"eq","","",124,[[["self"],["cudnnconvolutionbwddataalgo_t"]],["bool"]]],[11,"eq","","",125,[[["self"],["cudnnsoftmaxalgorithm_t"]],["bool"]]],[11,"eq","","",126,[[["self"],["cudnnsoftmaxmode_t"]],["bool"]]],[11,"eq","","",127,[[["self"],["cudnnpoolingmode_t"]],["bool"]]],[11,"eq","","",128,[[["cudnnactivationmode_t"],["self"]],["bool"]]],[11,"eq","","",129,[[["self"],["cudnnlrnmode_t"]],["bool"]]],[11,"eq","","",130,[[["self"],["cudnndivnormmode_t"]],["bool"]]],[11,"eq","","",131,[[["cudnnbatchnormmode_t"],["self"]],["bool"]]],[11,"eq","","",132,[[["self"],["cudnnbatchnormops_t"]],["bool"]]],[11,"eq","","",133,[[["self"],["cudnnsamplertype_t"]],["bool"]]],[11,"eq","","",134,[[["cudnnrnnalgo_t"],["self"]],["bool"]]],[11,"eq","","",135,[[["cudnnrnnmode_t"],["self"]],["bool"]]],[11,"eq","","",136,[[["cudnnrnnbiasmode_t"],["self"]],["bool"]]],[11,"eq","","",137,[[["cudnndirectionmode_t"],["self"]],["bool"]]],[11,"eq","","",138,[[["cudnnrnninputmode_t"],["self"]],["bool"]]],[11,"eq","","",139,[[["self"],["cudnnrnnclipmode_t"]],["bool"]]],[11,"eq","","",140,[[["cudnnrnndatalayout_t"],["self"]],["bool"]]],[11,"eq","","",141,[[["cudnnrnnpaddingmode_t"],["self"]],["bool"]]],[11,"eq","","",142,[[["cudnnseqdataaxis_t"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["cudnnmultiheadattnweightkind_t"]],["bool"]]],[11,"eq","","",144,[[["cudnnwgradmode_t"],["self"]],["bool"]]],[11,"eq","","",145,[[["self"],["cudnnctclossalgo_t"]],["bool"]]],[11,"eq","","",146,[[["self"],["cudnnlossnormalizationmode_t"]],["bool"]]],[11,"eq","","",147,[[["cudnnseverity_t"],["self"]],["bool"]]],[11,"eq","","",148,[[["self"],["cudnnfusedops_t"]],["bool"]]],[11,"eq","","",149,[[["cudnnfusedopsconstparamlabel_t"],["self"]],["bool"]]],[11,"eq","","",150,[[["cudnnfusedopspointerplaceholder_t"],["self"]],["bool"]]],[11,"eq","","",151,[[["self"],["cudnnfusedopsvariantparamlabel_t"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"hash","","",104,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","","",108,[[["self"],["__h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",113,[[["self"],["__h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",142,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",145,[[["self"],["__h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",150,[[["self"],["__h"]]]],[11,"hash","","",151,[[["self"],["__h"]]]]],"p":[[3,"char1"],[3,"uchar1"],[3,"char2"],[3,"uchar2"],[3,"char3"],[3,"uchar3"],[3,"char4"],[3,"uchar4"],[3,"short1"],[3,"ushort1"],[3,"short2"],[3,"ushort2"],[3,"short3"],[3,"ushort3"],[3,"short4"],[3,"ushort4"],[3,"int1"],[3,"uint1"],[3,"int2"],[3,"uint2"],[3,"int3"],[3,"uint3"],[3,"int4"],[3,"uint4"],[3,"long1"],[3,"ulong1"],[3,"long2"],[3,"ulong2"],[3,"long3"],[3,"ulong3"],[3,"long4"],[3,"ulong4"],[3,"float1"],[3,"float2"],[3,"float3"],[3,"float4"],[3,"longlong1"],[3,"ulonglong1"],[3,"longlong2"],[3,"ulonglong2"],[3,"longlong3"],[3,"ulonglong3"],[3,"longlong4"],[3,"ulonglong4"],[3,"double1"],[3,"double2"],[3,"double3"],[3,"double4"],[3,"dim3"],[3,"__crt_locale_data_public"],[3,"__crt_locale_pointers"],[3,"_Mbstatet"],[3,"cudaChannelFormatDesc"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[3,"cudaHostNodeParams"],[3,"cudaResourceDesc"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[3,"cudaExternalMemoryHandleDesc"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[3,"cudaExternalSemaphoreHandleDesc"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[3,"surfaceReference"],[3,"textureReference"],[3,"cudaTextureDesc"],[3,"cudnnConvolutionFwdAlgoPerf_t"],[3,"cudnnConvolutionBwdFilterAlgoPerf_t"],[3,"cudnnConvolutionBwdDataAlgoPerf_t"],[3,"cudnnAlgorithm_t"],[3,"cudnnDebug_t"],[3,"__crt_locale_data"],[3,"__crt_multibyte_data"],[19,"cudaResourceDesc__bindgen_ty_1"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[19,"cudnnAlgorithm_t_Algorithm"],[4,"cudaError"],[4,"cudnnStatus_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnDeterminism_t"],[4,"cudnnReorderType_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnIndicesType_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnConvolutionFwdPreference_t"],[4,"cudnnConvolutionFwdAlgo_t"],[4,"cudnnConvolutionBwdFilterPreference_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[4,"cudnnConvolutionBwdDataPreference_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnActivationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnSamplerType_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnRNNMode_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnRNNPaddingMode_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnWgradMode_t"],[4,"cudnnCTCLossAlgo_t"],[4,"cudnnLossNormalizationMode_t"],[4,"cudnnSeverity_t"],[4,"cudnnFusedOps_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUgraphExec_st"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"]]};
searchIndex["rust_blas"] = {"doc":"BLAS bindings and wrappers.","i":[[0,"attribute","rust_blas","Various attributes of vectors and matrices.",null,null],[4,"Order","rust_blas::attribute","",null,null],[13,"RowMajor","","",0,null],[13,"ColMajor","","",0,null],[4,"Transpose","","",null,null],[13,"NoTrans","","",1,null],[13,"Trans","","",1,null],[13,"ConjTrans","","",1,null],[4,"Symmetry","","",null,null],[13,"Upper","","",2,null],[13,"Lower","","",2,null],[4,"Diagonal","","",null,null],[13,"NonUnit","","",3,null],[13,"Unit","","",3,null],[4,"Side","","",null,null],[13,"Left","","",4,null],[13,"Right","","",4,null],[0,"default","rust_blas","",null,null],[8,"Default","rust_blas::default","",null,null],[10,"one","","",5,[[],["self"]]],[10,"zero","","",5,[[],["self"]]],[10,"neg_one","","",5,[[],["self"]]],[0,"matrix","rust_blas","Matrix operations.",null,null],[0,"ll","rust_blas::matrix","Bindings for matrix functions.",null,null],[0,"cblas_s","rust_blas::matrix::ll","",null,null],[5,"cblas_sgemm","rust_blas::matrix::ll::cblas_s","",null,null],[5,"cblas_ssymm","","",null,null],[5,"cblas_strmm","","",null,null],[5,"cblas_strsm","","",null,null],[5,"cblas_ssyrk","","",null,null],[5,"cblas_ssyr2k","","",null,null],[0,"cblas_d","rust_blas::matrix::ll","",null,null],[5,"cblas_dgemm","rust_blas::matrix::ll::cblas_d","",null,null],[5,"cblas_dsymm","","",null,null],[5,"cblas_dtrmm","","",null,null],[5,"cblas_dtrsm","","",null,null],[5,"cblas_dsyrk","","",null,null],[5,"cblas_dsyr2k","","",null,null],[0,"cblas_c","rust_blas::matrix::ll","",null,null],[5,"cblas_cgemm","rust_blas::matrix::ll::cblas_c","",null,null],[5,"cblas_csymm","","",null,null],[5,"cblas_chemm","","",null,null],[5,"cblas_ctrmm","","",null,null],[5,"cblas_ctrsm","","",null,null],[5,"cblas_cherk","","",null,null],[5,"cblas_cher2k","","",null,null],[5,"cblas_csyrk","","",null,null],[5,"cblas_csyr2k","","",null,null],[0,"cblas_z","rust_blas::matrix::ll","",null,null],[5,"cblas_zgemm","rust_blas::matrix::ll::cblas_z","",null,null],[5,"cblas_zsymm","","",null,null],[5,"cblas_zhemm","","",null,null],[5,"cblas_ztrmm","","",null,null],[5,"cblas_ztrsm","","",null,null],[5,"cblas_zherk","","",null,null],[5,"cblas_zher2k","","",null,null],[5,"cblas_zsyrk","","",null,null],[5,"cblas_zsyr2k","","",null,null],[0,"ops","rust_blas::matrix","Wrappers for matrix functions.",null,null],[8,"Gemm","rust_blas::matrix::ops","",null,null],[10,"gemm","","",6,[[["matrix"],["transpose"],["self"],["matrix"]]]],[8,"Symm","","",null,null],[10,"symm","","",7,[[["matrix"],["side"],["matrix"],["symmetry"],["self"]]]],[8,"Hemm","","",null,null],[10,"hemm","","",8,[[["matrix"],["side"],["matrix"],["symmetry"],["self"]]]],[8,"Trmm","","",null,null],[10,"trmm","","",9,[[["self"],["side"],["transpose"],["matrix"],["matrix"],["symmetry"],["diagonal"]]]],[8,"Trsm","","",null,null],[10,"trsm","","",10,[[["self"],["side"],["transpose"],["matrix"],["matrix"],["symmetry"],["diagonal"]]]],[8,"Herk","","",null,null],[10,"herk","","",11,[[["matrix"],["transpose"],["matrix"],["symmetry"],["self"]]]],[8,"Her2k","","",null,null],[10,"her2k","","",12,[[["complex"],["transpose"],["self"],["matrix"],["symmetry"],["matrix"]]]],[8,"Syrk","","",null,null],[10,"syrk","","",13,[[["matrix"],["transpose"],["matrix"],["symmetry"],["self"]]]],[8,"Syr2k","","",null,null],[10,"syr2k","","",14,[[["matrix"],["transpose"],["matrix"],["symmetry"],["self"]]]],[8,"Matrix","rust_blas::matrix","Methods that allow a type to be used in BLAS functions as…",null,null],[11,"lead_dim","","The leading dimension of the matrix. Defaults to `cols`…",15,[[["self"]],["u32"]]],[11,"order","","The order of the matrix. Defaults to `RowMajor`.",15,[[["self"]],["order"]]],[10,"rows","","Returns the number of rows.",15,[[["self"]],["u32"]]],[10,"cols","","Returns the number of columns.",15,[[["self"]],["u32"]]],[10,"as_ptr","","An unsafe pointer to a contiguous block of memory.",15,[[["self"]]]],[10,"as_mut_ptr","","An unsafe pointer to a contiguous block of memory.",15,[[["self"]]]],[8,"BandMatrix","","",null,null],[10,"sub_diagonals","","",16,[[["self"]],["u32"]]],[10,"sup_diagonals","","",16,[[["self"]],["u32"]]],[10,"as_matrix","","",16,[[["self"]],["matrix"]]],[0,"matrix_vector","rust_blas","Matrix-vector operations.",null,null],[0,"ll","rust_blas::matrix_vector","Bindings for matrix-vector functions.",null,null],[0,"cblas_s","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_sgemv","rust_blas::matrix_vector::ll::cblas_s","",null,null],[5,"cblas_ssymv","","",null,null],[5,"cblas_strmv","","",null,null],[5,"cblas_strsv","","",null,null],[5,"cblas_sger","","",null,null],[5,"cblas_ssyr","","",null,null],[5,"cblas_ssyr2","","",null,null],[5,"cblas_sspmv","","",null,null],[5,"cblas_sgbmv","","",null,null],[5,"cblas_ssbmv","","",null,null],[5,"cblas_stbmv","","",null,null],[5,"cblas_stbsv","","",null,null],[5,"cblas_stpmv","","",null,null],[5,"cblas_stpsv","","",null,null],[5,"cblas_sspr","","",null,null],[5,"cblas_sspr2","","",null,null],[0,"cblas_d","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_dgemv","rust_blas::matrix_vector::ll::cblas_d","",null,null],[5,"cblas_dsymv","","",null,null],[5,"cblas_dtrmv","","",null,null],[5,"cblas_dtrsv","","",null,null],[5,"cblas_dger","","",null,null],[5,"cblas_dsyr","","",null,null],[5,"cblas_dsyr2","","",null,null],[5,"cblas_dspmv","","",null,null],[5,"cblas_dgbmv","","",null,null],[5,"cblas_dsbmv","","",null,null],[5,"cblas_dtbmv","","",null,null],[5,"cblas_dtbsv","","",null,null],[5,"cblas_dtpmv","","",null,null],[5,"cblas_dtpsv","","",null,null],[5,"cblas_dspr","","",null,null],[5,"cblas_dspr2","","",null,null],[0,"cblas_c","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_cgemv","rust_blas::matrix_vector::ll::cblas_c","",null,null],[5,"cblas_csymv","","",null,null],[5,"cblas_chemv","","",null,null],[5,"cblas_ctrmv","","",null,null],[5,"cblas_ctrsv","","",null,null],[5,"cblas_cgeru","","",null,null],[5,"cblas_cgerc","","",null,null],[5,"cblas_cher","","",null,null],[5,"cblas_cher2","","",null,null],[5,"cblas_cgbmv","","",null,null],[5,"cblas_chbmv","","",null,null],[5,"cblas_ctbmv","","",null,null],[5,"cblas_ctbsv","","",null,null],[5,"cblas_chpmv","","",null,null],[5,"cblas_ctpmv","","",null,null],[5,"cblas_ctpsv","","",null,null],[5,"cblas_chpr","","",null,null],[5,"cblas_chpr2","","",null,null],[0,"cblas_z","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_zgemv","rust_blas::matrix_vector::ll::cblas_z","",null,null],[5,"cblas_zsymv","","",null,null],[5,"cblas_zhemv","","",null,null],[5,"cblas_ztrmv","","",null,null],[5,"cblas_ztrsv","","",null,null],[5,"cblas_zgeru","","",null,null],[5,"cblas_zgerc","","",null,null],[5,"cblas_zher","","",null,null],[5,"cblas_zher2","","",null,null],[5,"cblas_zgbmv","","",null,null],[5,"cblas_zhbmv","","",null,null],[5,"cblas_ztbmv","","",null,null],[5,"cblas_ztbsv","","",null,null],[5,"cblas_zhpmv","","",null,null],[5,"cblas_ztpmv","","",null,null],[5,"cblas_ztpsv","","",null,null],[5,"cblas_zhpr","","",null,null],[5,"cblas_zhpr2","","",null,null],[0,"ops","rust_blas::matrix_vector","Wrappers for matrix-vector functions.",null,null],[8,"Gemv","rust_blas::matrix_vector::ops","General multiply with vector",null,null],[10,"gemv","","",17,[[["w"],["transpose"],["v"],["self"],["matrix"]]]],[8,"Symv","","Symmetric multiply with vector",null,null],[10,"symv","","",18,[[["self"],["w"],["v"],["matrix"],["symmetry"]]]],[8,"Hemv","","Hermitian multiply with vector",null,null],[10,"hemv","","",19,[[["self"],["w"],["v"],["matrix"],["symmetry"]]]],[8,"Ger","","General rank-1 update",null,null],[10,"ger","","",20,[[["w"],["v"],["self"],["matrix"]]]],[8,"Gerc","","General rank-1 update (using hermitian conjugate)",null,null],[11,"gerc","","",21,[[["w"],["v"],["self"],["matrix"]]]],[8,"Syr","","Symmetric rank-1 update",null,null],[10,"syr","","",22,[[["matrix"],["v"],["symmetry"],["self"]]]],[8,"Her","","Hermitian rank-1 update",null,null],[10,"her","","",23,[[["matrix"],["v"],["symmetry"],["self"]]]],[8,"Syr2","","Symmetric rank-2 update",null,null],[10,"syr2","","",24,[[["matrix"],["w"],["v"],["symmetry"],["self"]]]],[8,"Her2","","Hermitian rank-2 update",null,null],[10,"her2","","",25,[[["matrix"],["w"],["v"],["symmetry"],["self"]]]],[8,"Gbmv","","General band matrix multiply with vector.",null,null],[10,"gbmv","","",26,[[["w"],["transpose"],["bandmatrix"],["v"],["self"]]]],[8,"Sbmv","","Symmetric band matrix multiply with vector",null,null],[10,"sbmv","","",27,[[["w"],["bandmatrix"],["v"],["symmetry"],["self"]]]],[8,"Hbmv","","Hermitian band matrix multiply with vector",null,null],[10,"hbmv","","",28,[[["w"],["bandmatrix"],["v"],["symmetry"],["self"]]]],[8,"Tbmv","","Triangular band matrix multiply with vector",null,null],[10,"tbmv","","",29,[[["v"],["transpose"],["bandmatrix"],["symmetry"],["diagonal"]]]],[8,"Tbsv","","Solve triangular band matrix system",null,null],[10,"tbsv","","",30,[[["v"],["transpose"],["bandmatrix"],["symmetry"],["diagonal"]]]],[8,"Spmv","","Symmetric packed matrix multiply with vector",null,null],[10,"spmv","","",31,[[["self"],["w"],["v"],["matrix"],["symmetry"]]]],[8,"Hpmv","","Hermitian packed matrix multiply with vector",null,null],[10,"hpmv","","",32,[[["self"],["w"],["v"],["matrix"],["symmetry"]]]],[8,"Tpmv","","Triangular packed matrix multiply with vector",null,null],[10,"tpmv","","",33,[[["matrix"],["transpose"],["v"],["symmetry"],["diagonal"]]]],[8,"Tpsv","","Solve triangular packed matrix system",null,null],[10,"tpsv","","",34,[[["matrix"],["transpose"],["v"],["symmetry"],["diagonal"]]]],[8,"Hpr","","Hermitian packed matrix rank-1 update",null,null],[10,"hpr","","",35,[[["matrix"],["v"],["symmetry"],["self"]]]],[8,"Spr","","Symmetric packed matrix rank-1 update",null,null],[10,"spr","","",36,[[["matrix"],["v"],["symmetry"],["self"]]]],[8,"Spr2","","Symmetric packed matrix rank-2 update",null,null],[10,"spr2","","",37,[[["matrix"],["w"],["v"],["symmetry"],["self"]]]],[8,"Hpr2","","Hermitian packed matrix rank-2 update",null,null],[10,"hpr2","","",38,[[["matrix"],["w"],["v"],["symmetry"],["self"]]]],[0,"vector","rust_blas","Vector operations.",null,null],[0,"ll","rust_blas::vector","Bindings for vector functions.",null,null],[0,"cblas_s","rust_blas::vector::ll","",null,null],[5,"cblas_scopy","rust_blas::vector::ll::cblas_s","",null,null],[5,"cblas_saxpy","","",null,null],[5,"cblas_sscal","","",null,null],[5,"cblas_sswap","","",null,null],[5,"cblas_sdsdot","","",null,null],[5,"cblas_sdot","","",null,null],[5,"cblas_sasum","","",null,null],[5,"cblas_scasum","","",null,null],[5,"cblas_snrm2","","",null,null],[5,"cblas_scnrm2","","",null,null],[5,"cblas_srot","","",null,null],[5,"cblas_srotm","","",null,null],[5,"cblas_srotg","","",null,null],[5,"cblas_srotmg","","",null,null],[0,"cblas_d","rust_blas::vector::ll","",null,null],[5,"cblas_dcopy","rust_blas::vector::ll::cblas_d","",null,null],[5,"cblas_daxpy","","",null,null],[5,"cblas_dscal","","",null,null],[5,"cblas_dswap","","",null,null],[5,"cblas_dsdot","","",null,null],[5,"cblas_ddot","","",null,null],[5,"cblas_dasum","","",null,null],[5,"cblas_dzasum","","",null,null],[5,"cblas_dnrm2","","",null,null],[5,"cblas_dznrm2","","",null,null],[5,"cblas_drot","","",null,null],[5,"cblas_drotm","","",null,null],[5,"cblas_drotg","","",null,null],[5,"cblas_drotmg","","",null,null],[0,"cblas_c","rust_blas::vector::ll","",null,null],[5,"cblas_ccopy","rust_blas::vector::ll::cblas_c","",null,null],[5,"cblas_caxpy","","",null,null],[5,"cblas_cscal","","",null,null],[5,"cblas_csscal","","",null,null],[5,"cblas_cswap","","",null,null],[5,"cblas_cdotu_sub","","",null,null],[5,"cblas_cdotc_sub","","",null,null],[0,"cblas_z","rust_blas::vector::ll","",null,null],[5,"cblas_zcopy","rust_blas::vector::ll::cblas_z","",null,null],[5,"cblas_zaxpy","","",null,null],[5,"cblas_zscal","","",null,null],[5,"cblas_zdscal","","",null,null],[5,"cblas_zswap","","",null,null],[5,"cblas_zdotu_sub","","",null,null],[5,"cblas_zdotc_sub","","",null,null],[0,"cblas_i","rust_blas::vector::ll","",null,null],[5,"cblas_isamax","rust_blas::vector::ll::cblas_i","",null,null],[5,"cblas_idamax","","",null,null],[5,"cblas_icamax","","",null,null],[5,"cblas_izamax","","",null,null],[0,"ops","rust_blas::vector","Wrappers for vector functions.",null,null],[8,"Copy","rust_blas::vector::ops","",null,null],[10,"copy","","Copies `src.len()` elements of `src` into `dst`.",39,[[["w"],["v"]]]],[10,"copy_mat","","Copies the entire matrix `dst` into `src`.",39,[[["matrix"],["matrix"]]]],[8,"Axpy","","Computes `a * x + y` and stores the result in `y`.",null,null],[10,"axpy","","",40,[[["w"],["v"],["self"]]]],[10,"axpy_mat","","",40,[[["matrix"],["self"],["matrix"]]]],[8,"Scal","","Computes `a * x` and stores the result in `x`.",null,null],[10,"scal","","",41,[[["self"],["v"]]]],[10,"scal_mat","","",41,[[["self"],["matrix"]]]],[8,"Swap","","Swaps the content of `x` and `y`.",null,null],[10,"swap","","If they are different lengths, the shorter length is used.",42,[[["w"],["v"]]]],[8,"Dot","","Computes `x^T * y`.",null,null],[10,"dot","","",43,[[["v"],["w"]],["self"]]],[8,"Dotc","","Computes `x^H * y`.",null,null],[11,"dotc","","",44,[[["v"],["w"]],["self"]]],[8,"Asum","","Computes the sum of the absolute values of elements in a…",null,null],[10,"asum","","",45,[[["v"]],["self"]]],[8,"Nrm2","","Computes the L2 norm (Euclidian length) of a vector.",null,null],[10,"nrm2","","",46,[[["v"]],["self"]]],[8,"Iamax","","Finds the index of the element with maximum absolute value…",null,null],[10,"iamax","","",47,[[["v"]],["usize"]]],[8,"Rot","","Applies a Givens rotation matrix to a pair of vectors,…",null,null],[10,"rot","","",48,[[["w"],["v"],["self"]]]],[8,"Vector","rust_blas::vector","Methods that allow a type to be used in BLAS functions as…",null,null],[11,"inc","","The stride within the vector. For example, if `inc`…",49,[[["self"]],["u32"]]],[10,"len","","The number of elements in the vector.",49,[[["self"]],["u32"]]],[10,"as_ptr","","An unsafe pointer to a contiguous block of memory.",49,[[["self"]]]],[10,"as_mut_ptr","","An unsafe mutable pointer to a contiguous block of memory.",49,[[["self"]]]],[11,"is_empty","","Check if Vector is empty",49,[[["self"]],["bool"]]],[8,"VectorOperations","","",null,null],[11,"update","","",50,[[["vector"],["self"],["t"]],["self"]]],[11,"scale","","",50,[[["self"],["t"]],["self"]]],[11,"dot","","",50,[[["vector"],["self"]],["t"]]],[11,"abs_sum","","",50,[[["self"]],["t"]]],[11,"norm","","",50,[[["self"]],["t"]]],[11,"max_index","","",50,[[["self"]],["usize"]]],[0,"math","rust_blas","",null,null],[4,"Trans","rust_blas::math","",null,null],[13,"T","","",51,null],[13,"H","","",51,null],[4,"Marker","","",null,null],[13,"T","","",52,null],[13,"H","","",52,null],[0,"mat","","",null,null],[3,"Mat","rust_blas::math::mat","",null,null],[11,"new_from_data","","",53,[[["vec"],["usize"]],["mat"]]],[11,"new","","",53,[[["usize"]],["mat"]]],[11,"rows","","",53,[[["self"]],["usize"]]],[11,"cols","","",53,[[["self"]],["usize"]]],[11,"set_rows","","Set Matrix Rows Manually # Safety This only sets the value…",53,[[["self"],["usize"]]]],[11,"set_cols","","Set Matrix Columns Manually # Safety This only sets the…",53,[[["self"],["usize"]]]],[11,"push","","Push a single value to matrix data backing # Safety This…",53,[[["self"],["t"]]]],[11,"fill","","",53,[[["t"],["usize"]],["mat"]]],[0,"bandmat","rust_blas::math","",null,null],[3,"BandMat","rust_blas::math::bandmat","Banded Matrix A banded matrix is a matrix where only the…",null,null],[11,"new","","",54,[[["u32"],["usize"]],["bandmat"]]],[11,"rows","","",54,[[["self"]],["usize"]]],[11,"cols","","",54,[[["self"]],["usize"]]],[11,"set_rows","","Set Rows Manually # Safety No guarantees are made about…",54,[[["self"],["usize"]]]],[11,"set_cols","","Set Columns Manually # Safety No guarantees are made about…",54,[[["self"],["usize"]]]],[11,"set_sub_diagonals","","",54,[[["self"],["u32"]]]],[11,"set_sup_diagonals","","",54,[[["self"],["u32"]]]],[11,"push","","",54,[[["self"],["t"]]]],[11,"from_matrix","","Converts a [`Mat`] into a [`BandMat`].",54,[[["u32"],["mat"]],["bandmat"]]],[11,"to_matrix","","Converts a [`BandMat`] back into a [`Mat`].",54,[[],["mat"]]],[11,"fill","","",54,[[["t"],["usize"]],["bandmat"]]],[0,"matrix","rust_blas::math","",null,null],[0,"matrix_vector","","",null,null],[0,"vector","","",null,null],[14,"mat","rust_blas","",null,null],[11,"from","rust_blas::attribute","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","rust_blas::math","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","rust_blas::math::mat","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","rust_blas::math::bandmat","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"rows","rust_blas::math::mat","",53,[[["self"]],["u32"]]],[11,"cols","","",53,[[["self"]],["u32"]]],[11,"as_ptr","","",53,[[["self"]]]],[11,"as_mut_ptr","","",53,[[["self"]]]],[11,"lead_dim","rust_blas::math::bandmat","",54,[[["self"]],["u32"]]],[11,"rows","","",54,[[["self"]],["u32"]]],[11,"cols","","",54,[[["self"]],["u32"]]],[11,"as_ptr","","",54,[[["self"]]]],[11,"as_mut_ptr","","",54,[[["self"]]]],[11,"sub_diagonals","","",54,[[["self"]],["u32"]]],[11,"sup_diagonals","","",54,[[["self"]],["u32"]]],[11,"as_matrix","","",54,[[["self"]],["matrix"]]],[11,"from","rust_blas::math::mat","",53,[[["matrix"]],["mat"]]],[11,"from","rust_blas::math::bandmat","",54,[[["bandmatrix"]],["bandmat"]]],[11,"clone","rust_blas::attribute","",0,[[["self"]],["order"]]],[11,"clone","","",1,[[["self"]],["transpose"]]],[11,"clone","","",2,[[["self"]],["symmetry"]]],[11,"clone","","",3,[[["self"]],["diagonal"]]],[11,"clone","","",4,[[["self"]],["side"]]],[11,"eq","rust_blas::math::mat","",53,[[["mat"],["self"]],["bool"]]],[11,"ne","","",53,[[["mat"],["self"]],["bool"]]],[11,"eq","rust_blas::math::bandmat","",54,[[["bandmat"],["self"]],["bool"]]],[11,"ne","","",54,[[["bandmat"],["self"]],["bool"]]],[11,"deref","rust_blas::math","",51,[[["self"]],["a"]]],[11,"fmt","rust_blas::math::mat","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_blas::math::bandmat","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_blas::math::mat","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_blas::math::bandmat","",54,[[["formatter"],["self"]],["result"]]],[11,"mul","rust_blas::math","",51,[[["matrix"]],["mat"]]],[11,"mul","","",51,[[["matrix"],["trans",["matrix"]]],["mat"]]],[11,"mul","","",51,[[["vector"]],["t"]]],[11,"index","rust_blas::math::mat","",53,[[["self"],["usize"]]]],[11,"index","rust_blas::math::bandmat","",54,[[["self"],["usize"]]]]],"p":[[4,"Order"],[4,"Transpose"],[4,"Symmetry"],[4,"Diagonal"],[4,"Side"],[8,"Default"],[8,"Gemm"],[8,"Symm"],[8,"Hemm"],[8,"Trmm"],[8,"Trsm"],[8,"Herk"],[8,"Her2k"],[8,"Syrk"],[8,"Syr2k"],[8,"Matrix"],[8,"BandMatrix"],[8,"Gemv"],[8,"Symv"],[8,"Hemv"],[8,"Ger"],[8,"Gerc"],[8,"Syr"],[8,"Her"],[8,"Syr2"],[8,"Her2"],[8,"Gbmv"],[8,"Sbmv"],[8,"Hbmv"],[8,"Tbmv"],[8,"Tbsv"],[8,"Spmv"],[8,"Hpmv"],[8,"Tpmv"],[8,"Tpsv"],[8,"Hpr"],[8,"Spr"],[8,"Spr2"],[8,"Hpr2"],[8,"Copy"],[8,"Axpy"],[8,"Scal"],[8,"Swap"],[8,"Dot"],[8,"Dotc"],[8,"Asum"],[8,"Nrm2"],[8,"Iamax"],[8,"Rot"],[8,"Vector"],[8,"VectorOperations"],[4,"Trans"],[4,"Marker"],[3,"Mat"],[3,"BandMat"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);