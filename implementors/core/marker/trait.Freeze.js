(function() {var implementors = {};
implementors["juice"] = [{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"juice/layer/struct.Layer.html\" title=\"struct juice::layer::Layer\">Layer</a>&lt;B&gt;",synthetic:true,types:["juice::layer::Layer"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layer/struct.LayerConfig.html\" title=\"struct juice::layer::LayerConfig\">LayerConfig</a>",synthetic:true,types:["juice::layer::LayerConfig"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>",synthetic:true,types:["juice::layer::LayerType"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/activation/relu/struct.ReLU.html\" title=\"struct juice::layers::activation::relu::ReLU\">ReLU</a>",synthetic:true,types:["juice::layers::activation::relu::ReLU"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/activation/sigmoid/struct.Sigmoid.html\" title=\"struct juice::layers::activation::sigmoid::Sigmoid\">Sigmoid</a>",synthetic:true,types:["juice::layers::activation::sigmoid::Sigmoid"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/activation/tanh/struct.TanH.html\" title=\"struct juice::layers::activation::tanh::TanH\">TanH</a>",synthetic:true,types:["juice::layers::activation::tanh::TanH"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"juice/layers/common/convolution/struct.Convolution.html\" title=\"struct juice::layers::common::convolution::Convolution\">Convolution</a>&lt;B&gt;",synthetic:true,types:["juice::layers::common::convolution::Convolution"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/common/convolution/struct.ConvolutionConfig.html\" title=\"struct juice::layers::common::convolution::ConvolutionConfig\">ConvolutionConfig</a>",synthetic:true,types:["juice::layers::common::convolution::ConvolutionConfig"]},{text:"impl !Freeze for <a class=\"struct\" href=\"juice/layers/common/linear/struct.Linear.html\" title=\"struct juice::layers::common::linear::Linear\">Linear</a>",synthetic:true,types:["juice::layers::common::linear::Linear"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/common/linear/struct.LinearConfig.html\" title=\"struct juice::layers::common::linear::LinearConfig\">LinearConfig</a>",synthetic:true,types:["juice::layers::common::linear::LinearConfig"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/common/log_softmax/struct.LogSoftmax.html\" title=\"struct juice::layers::common::log_softmax::LogSoftmax\">LogSoftmax</a>",synthetic:true,types:["juice::layers::common::log_softmax::LogSoftmax"]},{text:"impl&lt;T, B&gt; Freeze for <a class=\"struct\" href=\"juice/layers/common/pooling/struct.Pooling.html\" title=\"struct juice::layers::common::pooling::Pooling\">Pooling</a>&lt;T, B&gt;",synthetic:true,types:["juice::layers::common::pooling::Pooling"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/common/pooling/struct.PoolingConfig.html\" title=\"struct juice::layers::common::pooling::PoolingConfig\">PoolingConfig</a>",synthetic:true,types:["juice::layers::common::pooling::PoolingConfig"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/layers/common/pooling/enum.PoolingMode.html\" title=\"enum juice::layers::common::pooling::PoolingMode\">PoolingMode</a>",synthetic:true,types:["juice::layers::common::pooling::PoolingMode"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/common/softmax/struct.Softmax.html\" title=\"struct juice::layers::common::softmax::Softmax\">Softmax</a>",synthetic:true,types:["juice::layers::common::softmax::Softmax"]},{text:"impl&lt;T, B&gt; Freeze for <a class=\"struct\" href=\"juice/layers/common/dropout/struct.Dropout.html\" title=\"struct juice::layers::common::dropout::Dropout\">Dropout</a>&lt;T, B&gt;",synthetic:true,types:["juice::layers::common::dropout::Dropout"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/common/dropout/struct.DropoutConfig.html\" title=\"struct juice::layers::common::dropout::DropoutConfig\">DropoutConfig</a>",synthetic:true,types:["juice::layers::common::dropout::DropoutConfig"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/loss/negative_log_likelihood/struct.NegativeLogLikelihood.html\" title=\"struct juice::layers::loss::negative_log_likelihood::NegativeLogLikelihood\">NegativeLogLikelihood</a>",synthetic:true,types:["juice::layers::loss::negative_log_likelihood::NegativeLogLikelihood"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/loss/negative_log_likelihood/struct.NegativeLogLikelihoodConfig.html\" title=\"struct juice::layers::loss::negative_log_likelihood::NegativeLogLikelihoodConfig\">NegativeLogLikelihoodConfig</a>",synthetic:true,types:["juice::layers::loss::negative_log_likelihood::NegativeLogLikelihoodConfig"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/loss/mean_squared_error/struct.MeanSquaredError.html\" title=\"struct juice::layers::loss::mean_squared_error::MeanSquaredError\">MeanSquaredError</a>",synthetic:true,types:["juice::layers::loss::mean_squared_error::MeanSquaredError"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/utility/flatten/struct.Flatten.html\" title=\"struct juice::layers::utility::flatten::Flatten\">Flatten</a>",synthetic:true,types:["juice::layers::utility::flatten::Flatten"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/utility/reshape/struct.Reshape.html\" title=\"struct juice::layers::utility::reshape::Reshape\">Reshape</a>",synthetic:true,types:["juice::layers::utility::reshape::Reshape"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/utility/reshape/struct.ReshapeConfig.html\" title=\"struct juice::layers::utility::reshape::ReshapeConfig\">ReshapeConfig</a>",synthetic:true,types:["juice::layers::utility::reshape::ReshapeConfig"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"juice/layers/container/sequential/struct.Sequential.html\" title=\"struct juice::layers::container::sequential::Sequential\">Sequential</a>&lt;B&gt;",synthetic:true,types:["juice::layers::container::sequential::Sequential"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/layers/container/sequential/struct.SequentialConfig.html\" title=\"struct juice::layers::container::sequential::SequentialConfig\">SequentialConfig</a>",synthetic:true,types:["juice::layers::container::sequential::SequentialConfig"]},{text:"impl&lt;SolverB, B&gt; Freeze for <a class=\"struct\" href=\"juice/solver/struct.Solver.html\" title=\"struct juice::solver::Solver\">Solver</a>&lt;SolverB, B&gt;",synthetic:true,types:["juice::solver::Solver"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/struct.SolverConfig.html\" title=\"struct juice::solver::SolverConfig\">SolverConfig</a>",synthetic:true,types:["juice::solver::SolverConfig"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/solver/enum.SolverKind.html\" title=\"enum juice::solver::SolverKind\">SolverKind</a>",synthetic:true,types:["juice::solver::SolverKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/solver/enum.SGDKind.html\" title=\"enum juice::solver::SGDKind\">SGDKind</a>",synthetic:true,types:["juice::solver::SGDKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/solver/enum.LRPolicy.html\" title=\"enum juice::solver::LRPolicy\">LRPolicy</a>",synthetic:true,types:["juice::solver::LRPolicy"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/solver/enum.RegularizationMethod.html\" title=\"enum juice::solver::RegularizationMethod\">RegularizationMethod</a>",synthetic:true,types:["juice::solver::RegularizationMethod"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/confusion_matrix/struct.ConfusionMatrix.html\" title=\"struct juice::solver::confusion_matrix::ConfusionMatrix\">ConfusionMatrix</a>",synthetic:true,types:["juice::solver::confusion_matrix::ConfusionMatrix"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/confusion_matrix/struct.Sample.html\" title=\"struct juice::solver::confusion_matrix::Sample\">Sample</a>",synthetic:true,types:["juice::solver::confusion_matrix::Sample"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/confusion_matrix/struct.Accuracy.html\" title=\"struct juice::solver::confusion_matrix::Accuracy\">Accuracy</a>",synthetic:true,types:["juice::solver::confusion_matrix::Accuracy"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/regression_evaluator/struct.RegressionEvaluator.html\" title=\"struct juice::solver::regression_evaluator::RegressionEvaluator\">RegressionEvaluator</a>",synthetic:true,types:["juice::solver::regression_evaluator::RegressionEvaluator"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/regression_evaluator/struct.Sample.html\" title=\"struct juice::solver::regression_evaluator::Sample\">Sample</a>",synthetic:true,types:["juice::solver::regression_evaluator::Sample"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/solver/regression_evaluator/struct.MeanSquaredErrorAccuracy.html\" title=\"struct juice::solver::regression_evaluator::MeanSquaredErrorAccuracy\">MeanSquaredErrorAccuracy</a>",synthetic:true,types:["juice::solver::regression_evaluator::MeanSquaredErrorAccuracy"]},{text:"impl&lt;SolverB&gt; !Freeze for <a class=\"struct\" href=\"juice/solvers/sgd/momentum/struct.Momentum.html\" title=\"struct juice::solvers::sgd::momentum::Momentum\">Momentum</a>&lt;SolverB&gt;",synthetic:true,types:["juice::solvers::sgd::momentum::Momentum"]},{text:"impl Freeze for <a class=\"struct\" href=\"juice/weight/struct.WeightConfig.html\" title=\"struct juice::weight::WeightConfig\">WeightConfig</a>",synthetic:true,types:["juice::weight::WeightConfig"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/weight/enum.DimCheckMode.html\" title=\"enum juice::weight::DimCheckMode\">DimCheckMode</a>",synthetic:true,types:["juice::weight::DimCheckMode"]},{text:"impl Freeze for <a class=\"enum\" href=\"juice/weight/enum.FillerType.html\" title=\"enum juice::weight::FillerType\">FillerType</a>",synthetic:true,types:["juice::weight::FillerType"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()